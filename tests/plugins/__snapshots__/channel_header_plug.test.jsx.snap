// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`plugins/ChannelHeaderPlug should match snapshot with no extended component 1`] = `
<ChannelHeaderPlug
  channel={Object {}}
  channelMember={Object {}}
  components={Array []}
  theme={Object {}}
/>
`;

exports[`plugins/ChannelHeaderPlug should match snapshot with one extended component 1`] = `
<ChannelHeaderPlug
  channel={Object {}}
  channelMember={Object {}}
  components={
    Array [
      Object {
        "action": [Function],
        "dropdownText": "some dropdown text",
        "icon": <i
          className="fa fa-anchor"
        />,
        "id": "someid",
        "pluginId": "pluginid",
      },
    ]
  }
  theme={Object {}}
>
  <HeaderIconWrapper
    buttonClass="channel-header__icon style--none"
    buttonId="someid"
    iconComponent={
      <i
        className="fa fa-anchor"
      />
    }
    onClick={[Function]}
  >
    <div
      className="flex-child"
    >
      <button
        className="channel-header__icon style--none"
        id="someid"
        onClick={[Function]}
      >
        <i
          className="fa fa-anchor"
        />
      </button>
    </div>
  </HeaderIconWrapper>
</ChannelHeaderPlug>
`;

exports[`plugins/ChannelHeaderPlug should match snapshot with two extended components 1`] = `
<ChannelHeaderPlug
  channel={Object {}}
  channelMember={Object {}}
  components={
    Array [
      Object {
        "action": [Function],
        "dropdownText": "some dropdown text",
        "icon": <i
          className="fa fa-anchor"
        />,
        "id": "someid",
        "pluginId": "pluginid",
      },
      Object {
        "action": [Function],
        "dropdownText": "some dropdown text",
        "icon": <i
          className="fa fa-anchor"
        />,
        "id": "someid2",
        "pluginId": "pluginid",
      },
    ]
  }
  theme={Object {}}
>
  <div
    className="flex-child"
  >
    <Uncontrolled(Dropdown)
      id="channelHeaderPlugDropdown"
      onToggle={[Function]}
      open={false}
    >
      <Dropdown
        bsClass="dropdown"
        componentClass={[Function]}
        id="channelHeaderPlugDropdown"
        onToggle={[Function]}
        open={false}
      >
        <ButtonGroup
          block={false}
          bsClass="btn-group"
          className="dropdown"
          justified={false}
          vertical={false}
        >
          <div
            className="dropdown btn-group"
          >
            <CustomToggle
              bsClass="dropdown-toggle"
              bsRole="toggle"
              dropdownOpen={false}
              id="channelHeaderPlugDropdown"
              key=".0"
              onClick={[Function]}
              onKeyDown={[Function]}
              open={false}
            >
              <button
                className="channel-header__icon style--none"
                id="pluginChannelHeaderButtonDropdown"
                onClick={[Function]}
                type="button"
              >
                <span
                  className="fa fa-ellipsis-h icon__ellipsis"
                />
              </button>
            </CustomToggle>
            <CustomMenu
              bsClass="dropdown-menu"
              bsRole="menu"
              key=".1"
              labelledBy="channelHeaderPlugDropdown"
              onClose={[Function]}
              onSelect={[Function]}
              open={false}
            >
              <RootCloseWrapper
                disabled={true}
                event="click"
                onRootClose={[Function]}
              >
                <ul
                  className="dropdown-menu channel-header_plugin-dropdown"
                  role="menu"
                >
                  <li
                    key="channelHeaderPlugsomeid"
                  >
                    <a
                      className="overflow--ellipsis"
                      href="#"
                      onClick={[Function]}
                    >
                      <span>
                        <i
                          className="fa fa-anchor"
                        />
                      </span>
                      some dropdown text
                    </a>
                  </li>
                  <li
                    key="channelHeaderPlugsomeid2"
                  >
                    <a
                      className="overflow--ellipsis"
                      href="#"
                      onClick={[Function]}
                    >
                      <span>
                        <i
                          className="fa fa-anchor"
                        />
                      </span>
                      some dropdown text
                    </a>
                  </li>
                </ul>
              </RootCloseWrapper>
            </CustomMenu>
          </div>
        </ButtonGroup>
      </Dropdown>
    </Uncontrolled(Dropdown)>
  </div>
</ChannelHeaderPlug>
`;
