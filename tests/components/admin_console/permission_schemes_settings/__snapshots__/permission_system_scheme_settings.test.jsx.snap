// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/admin_console/permission_schemes_settings/permission_system_scheme_settings/permission_system_scheme_settings should match snapshot on roles with permissions 1`] = `
<div
  className="wrapper--fixed"
>
  <h3
    className="admin-console-header with-back"
  >
    <Connect(BlockableLink)
      className="fa fa-chevron-left back"
      to="/admin_console/permissions/schemes"
    />
    <FormattedMessage
      defaultMessage="System Scheme"
      id="admin.permissions.systemScheme"
      values={Object {}}
    />
  </h3>
  <div
    className="banner info"
  >
    <div
      className="banner__content"
    >
      <span>
        <InjectIntl(FormattedMarkdownMessage)
          defaultMessage="Configure the default permissions for Team Admins, Channel Admins and other members. This scheme is inherited by all teams unless a [Team Override Scheme](!https://about.mattermost.com/default-team-override-scheme) is applied in specific teams."
          id="admin.permissions.systemScheme.introBanner"
        />
      </span>
    </div>
  </div>
  <div
    className="permissions-block "
    id="all_users"
  >
    <div
      className="header"
      onClick={[Function]}
    >
      <div>
        <h3>
          <FormattedMessage
            defaultMessage="All Members"
            id="admin.permissions.systemScheme.allMembersTitle"
            values={Object {}}
          />
        </h3>
        <span>
          <FormattedMessage
            defaultMessage="Permissions granted to all members, including administrators and newly created users."
            id="admin.permissions.systemScheme.allMembersDescription"
            values={Object {}}
          />
        </span>
      </div>
      <div
        className="button"
      >
        <AccordionToggleIcon />
      </div>
    </div>
    <Connect(PermissionsTree)
      onToggle={[Function]}
      role={
        Object {
          "displayName": "All members",
          "name": "all_users",
          "permissions": Array [
            "create_post",
            "invite_user",
            "add_reaction",
          ],
        }
      }
      scope="system_scope"
      selectRow={[Function]}
      selected={null}
    />
  </div>
  <div
    className="permissions-block "
  >
    <div
      className="header"
      onClick={[Function]}
    >
      <div>
        <h3>
          <FormattedMessage
            defaultMessage="Channel Administrators"
            id="admin.permissions.systemScheme.channelAdminsTitle"
            values={Object {}}
          />
        </h3>
        <span>
          <FormattedMessage
            defaultMessage="Permissions granted to channel creators and any users promoted to Channel Administrator."
            id="admin.permissions.systemScheme.channelAdminsDescription"
            values={Object {}}
          />
        </span>
      </div>
      <div
        className="button"
      >
        <AccordionToggleIcon />
      </div>
    </div>
    <Connect(PermissionsTree)
      onToggle={[Function]}
      parentRole={
        Object {
          "displayName": "All members",
          "name": "all_users",
          "permissions": Array [
            "create_post",
            "invite_user",
            "add_reaction",
          ],
        }
      }
      role={
        Object {
          "permissions": Array [
            "delete_post",
          ],
        }
      }
      scope="channel_scope"
      selectRow={[Function]}
    />
  </div>
  <div
    className="permissions-block "
  >
    <div
      className="header"
      onClick={[Function]}
    >
      <div>
        <h3>
          <FormattedMessage
            defaultMessage="Team Administrators"
            id="admin.permissions.systemScheme.teamAdminsTitle"
            values={Object {}}
          />
        </h3>
        <span>
          <FormattedMessage
            defaultMessage="Permissions granted to team creators and any users promoted to Team Administrator."
            id="admin.permissions.systemScheme.teamAdminsDescription"
            values={Object {}}
          />
        </span>
      </div>
      <div
        className="button"
      >
        <AccordionToggleIcon />
      </div>
    </div>
    <Connect(PermissionsTree)
      onToggle={[Function]}
      parentRole={
        Object {
          "displayName": "All members",
          "name": "all_users",
          "permissions": Array [
            "create_post",
            "invite_user",
            "add_reaction",
          ],
        }
      }
      role={
        Object {
          "permissions": Array [
            "add_user_to_team",
          ],
        }
      }
      scope="team_scope"
      selectRow={[Function]}
    />
  </div>
  <div
    className="permissions-block "
  >
    <div
      className="header"
      onClick={[Function]}
    >
      <div>
        <h3>
          <FormattedMessage
            defaultMessage="System Administrators"
            id="admin.permissions.systemScheme.systemAdminsTitle"
            values={Object {}}
          />
        </h3>
        <span>
          <FormattedMessage
            defaultMessage="Full permissions granted to System Administrators."
            id="admin.permissions.systemScheme.systemAdminsDescription"
            values={Object {}}
          />
        </span>
      </div>
      <div
        className="button"
      >
        <AccordionToggleIcon />
      </div>
    </div>
    <Connect(PermissionsTree)
      onToggle={[Function]}
      readOnly={true}
      role={
        Object {
          "permissions": Array [
            "manage_system",
          ],
        }
      }
      scope="system_scope"
      selectRow={[Function]}
    />
  </div>
  <div
    className="admin-console-save"
  >
    <SaveButton
      btnClass="btn-primary"
      defaultMessage="Save"
      disabled={true}
      extraClasses=""
      onClick={[Function]}
      saving={false}
      savingMessage="Saving Config..."
    />
    <Connect(BlockableLink)
      className="cancel-button"
      to="/admin_console/permissions/schemes"
    >
      <FormattedMessage
        defaultMessage="Cancel"
        id="admin.permissions.permissionSchemes.cancel"
        values={Object {}}
      />
    </Connect(BlockableLink)>
    <a
      className="cancel-button reset-defaults-btn"
      onClick={[Function]}
    >
      <FormattedMessage
        defaultMessage="Reset to Defaults"
        id="admin.permissions.systemScheme.resetDefaultsButton"
        values={Object {}}
      />
    </a>
    <div
      className="error-message"
    >
      <FormError
        error={null}
        errors={Array []}
      />
    </div>
  </div>
  <Modal
    animation={true}
    autoFocus={true}
    backdrop={true}
    bsClass="modal"
    dialogClassName="admin-modal"
    dialogComponentClass={[Function]}
    enforceFocus={true}
    keyboard={true}
    manager={
      ModalManager {
        "add": [Function],
        "containers": Array [],
        "data": Array [],
        "handleContainerOverflow": true,
        "hideSiblingNodes": true,
        "isTopModal": [Function],
        "modals": Array [],
        "remove": [Function],
      }
    }
    onHide={[Function]}
    renderBackdrop={[Function]}
    restoreFocus={true}
    show={false}
  >
    <ModalHeader
      bsClass="modal-header"
      closeButton={true}
      closeLabel="Close"
    >
      <h4
        className="modal-title"
      >
        <FormattedMessage
          defaultMessage="Reset to Default?"
          id="admin.permissions.systemScheme.resetDefaultsButtonModalTitle"
          values={Object {}}
        />
      </h4>
    </ModalHeader>
    <ModalBody
      bsClass="modal-body"
      componentClass="div"
    >
      <FormattedMessage
        defaultMessage="This will reset all selections on this page to their default settings. Are you sure you want to reset?"
        id="admin.permissions.systemScheme.resetDefaultsButtonModalBody"
        values={Object {}}
      />
    </ModalBody>
    <ModalFooter
      bsClass="modal-footer"
      componentClass="div"
    >
      <button
        className="btn btn-cancel"
        onClick={[Function]}
        type="button"
      >
        <FormattedMessage
          defaultMessage="Cancel"
          id="confirm_modal.cancel"
          values={Object {}}
        />
      </button>
      <button
        className="btn btn-default"
        id="linkModalCloseButton"
        onClick={[Function]}
        type="button"
      >
        <FormattedMessage
          defaultMessage="Yes, Reset"
          id="admin.permissions.systemScheme.resetDefaultsConfirmationButton"
          values={Object {}}
        />
      </button>
    </ModalFooter>
  </Modal>
</div>
`;

exports[`components/admin_console/permission_schemes_settings/permission_system_scheme_settings/permission_system_scheme_settings should match snapshot on roles with permissions 2`] = `
Object {
  "loaded": true,
  "openRoles": Object {
    "all_users": true,
    "channel_admin": true,
    "system_admin": true,
    "team_admin": true,
  },
  "roles": Object {
    "all_users": Object {
      "displayName": "All members",
      "name": "all_users",
      "permissions": Array [
        "create_post",
        "invite_user",
        "add_reaction",
      ],
    },
    "channel_admin": Object {
      "permissions": Array [
        "delete_post",
      ],
    },
    "system_admin": Object {
      "permissions": Array [
        "manage_system",
      ],
    },
    "team_admin": Object {
      "permissions": Array [
        "add_user_to_team",
      ],
    },
  },
  "saveNeeded": false,
  "saving": false,
  "selectedPermission": null,
  "serverError": null,
  "showResetDefaultModal": false,
}
`;

exports[`components/admin_console/permission_schemes_settings/permission_system_scheme_settings/permission_system_scheme_settings should match snapshot on roles without permissions 1`] = `
Object {
  "loaded": true,
  "openRoles": Object {
    "all_users": true,
    "channel_admin": true,
    "system_admin": true,
    "team_admin": true,
  },
  "roles": Object {
    "all_users": Object {
      "displayName": "All members",
      "name": "all_users",
      "permissions": Array [],
    },
    "channel_admin": Object {
      "permissions": Array [],
    },
    "system_admin": Object {
      "permissions": Array [],
    },
    "team_admin": Object {
      "permissions": Array [],
    },
  },
  "saveNeeded": false,
  "saving": false,
  "selectedPermission": null,
  "serverError": null,
  "showResetDefaultModal": false,
}
`;

exports[`components/admin_console/permission_schemes_settings/permission_system_scheme_settings/permission_system_scheme_settings should match snapshot when the license doesnt have custom schemes 1`] = `
<div
  className="wrapper--fixed"
>
  <h3
    className="admin-console-header "
  >
    <FormattedMessage
      defaultMessage="System Scheme"
      id="admin.permissions.systemScheme"
      values={Object {}}
    />
  </h3>
  <div
    className="banner info"
  >
    <div
      className="banner__content"
    >
      <span>
        <InjectIntl(FormattedMarkdownMessage)
          defaultMessage="Configure the default permissions for Team Admins, Channel Admins and other members. This scheme is inherited by all teams unless a [Team Override Scheme](!https://about.mattermost.com/default-team-override-scheme) is applied in specific teams."
          id="admin.permissions.systemScheme.introBanner"
        />
      </span>
    </div>
  </div>
  <div
    className="permissions-block "
    id="all_users"
  >
    <div
      className="header"
      onClick={[Function]}
    >
      <div>
        <h3>
          <FormattedMessage
            defaultMessage="All Members"
            id="admin.permissions.systemScheme.allMembersTitle"
            values={Object {}}
          />
        </h3>
        <span>
          <FormattedMessage
            defaultMessage="Permissions granted to all members, including administrators and newly created users."
            id="admin.permissions.systemScheme.allMembersDescription"
            values={Object {}}
          />
        </span>
      </div>
      <div
        className="button"
      >
        <AccordionToggleIcon />
      </div>
    </div>
    <Connect(PermissionsTree)
      onToggle={[Function]}
      role={
        Object {
          "displayName": "All members",
          "name": "all_users",
          "permissions": Array [],
        }
      }
      scope="system_scope"
      selectRow={[Function]}
      selected={null}
    />
  </div>
  <div
    className="permissions-block "
  >
    <div
      className="header"
      onClick={[Function]}
    >
      <div>
        <h3>
          <FormattedMessage
            defaultMessage="Channel Administrators"
            id="admin.permissions.systemScheme.channelAdminsTitle"
            values={Object {}}
          />
        </h3>
        <span>
          <FormattedMessage
            defaultMessage="Permissions granted to channel creators and any users promoted to Channel Administrator."
            id="admin.permissions.systemScheme.channelAdminsDescription"
            values={Object {}}
          />
        </span>
      </div>
      <div
        className="button"
      >
        <AccordionToggleIcon />
      </div>
    </div>
    <Connect(PermissionsTree)
      onToggle={[Function]}
      parentRole={
        Object {
          "displayName": "All members",
          "name": "all_users",
          "permissions": Array [],
        }
      }
      role={
        Object {
          "permissions": Array [],
        }
      }
      scope="channel_scope"
      selectRow={[Function]}
    />
  </div>
  <div
    className="permissions-block "
  >
    <div
      className="header"
      onClick={[Function]}
    >
      <div>
        <h3>
          <FormattedMessage
            defaultMessage="Team Administrators"
            id="admin.permissions.systemScheme.teamAdminsTitle"
            values={Object {}}
          />
        </h3>
        <span>
          <FormattedMessage
            defaultMessage="Permissions granted to team creators and any users promoted to Team Administrator."
            id="admin.permissions.systemScheme.teamAdminsDescription"
            values={Object {}}
          />
        </span>
      </div>
      <div
        className="button"
      >
        <AccordionToggleIcon />
      </div>
    </div>
    <Connect(PermissionsTree)
      onToggle={[Function]}
      parentRole={
        Object {
          "displayName": "All members",
          "name": "all_users",
          "permissions": Array [],
        }
      }
      role={
        Object {
          "permissions": Array [],
        }
      }
      scope="team_scope"
      selectRow={[Function]}
    />
  </div>
  <div
    className="permissions-block "
  >
    <div
      className="header"
      onClick={[Function]}
    >
      <div>
        <h3>
          <FormattedMessage
            defaultMessage="System Administrators"
            id="admin.permissions.systemScheme.systemAdminsTitle"
            values={Object {}}
          />
        </h3>
        <span>
          <FormattedMessage
            defaultMessage="Full permissions granted to System Administrators."
            id="admin.permissions.systemScheme.systemAdminsDescription"
            values={Object {}}
          />
        </span>
      </div>
      <div
        className="button"
      >
        <AccordionToggleIcon />
      </div>
    </div>
    <Connect(PermissionsTree)
      onToggle={[Function]}
      readOnly={true}
      role={
        Object {
          "permissions": Array [],
        }
      }
      scope="system_scope"
      selectRow={[Function]}
    />
  </div>
  <div
    className="admin-console-save"
  >
    <SaveButton
      btnClass="btn-primary"
      defaultMessage="Save"
      disabled={true}
      extraClasses=""
      onClick={[Function]}
      saving={false}
      savingMessage="Saving Config..."
    />
    <Connect(BlockableLink)
      className="cancel-button"
      to="/admin_console/permissions/schemes"
    >
      <FormattedMessage
        defaultMessage="Cancel"
        id="admin.permissions.permissionSchemes.cancel"
        values={Object {}}
      />
    </Connect(BlockableLink)>
    <a
      className="cancel-button reset-defaults-btn"
      onClick={[Function]}
    >
      <FormattedMessage
        defaultMessage="Reset to Defaults"
        id="admin.permissions.systemScheme.resetDefaultsButton"
        values={Object {}}
      />
    </a>
    <div
      className="error-message"
    >
      <FormError
        error={null}
        errors={Array []}
      />
    </div>
  </div>
  <Modal
    animation={true}
    autoFocus={true}
    backdrop={true}
    bsClass="modal"
    dialogClassName="admin-modal"
    dialogComponentClass={[Function]}
    enforceFocus={true}
    keyboard={true}
    manager={
      ModalManager {
        "add": [Function],
        "containers": Array [],
        "data": Array [],
        "handleContainerOverflow": true,
        "hideSiblingNodes": true,
        "isTopModal": [Function],
        "modals": Array [],
        "remove": [Function],
      }
    }
    onHide={[Function]}
    renderBackdrop={[Function]}
    restoreFocus={true}
    show={false}
  >
    <ModalHeader
      bsClass="modal-header"
      closeButton={true}
      closeLabel="Close"
    >
      <h4
        className="modal-title"
      >
        <FormattedMessage
          defaultMessage="Reset to Default?"
          id="admin.permissions.systemScheme.resetDefaultsButtonModalTitle"
          values={Object {}}
        />
      </h4>
    </ModalHeader>
    <ModalBody
      bsClass="modal-body"
      componentClass="div"
    >
      <FormattedMessage
        defaultMessage="This will reset all selections on this page to their default settings. Are you sure you want to reset?"
        id="admin.permissions.systemScheme.resetDefaultsButtonModalBody"
        values={Object {}}
      />
    </ModalBody>
    <ModalFooter
      bsClass="modal-footer"
      componentClass="div"
    >
      <button
        className="btn btn-cancel"
        onClick={[Function]}
        type="button"
      >
        <FormattedMessage
          defaultMessage="Cancel"
          id="confirm_modal.cancel"
          values={Object {}}
        />
      </button>
      <button
        className="btn btn-default"
        id="linkModalCloseButton"
        onClick={[Function]}
        type="button"
      >
        <FormattedMessage
          defaultMessage="Yes, Reset"
          id="admin.permissions.systemScheme.resetDefaultsConfirmationButton"
          values={Object {}}
        />
      </button>
    </ModalFooter>
  </Modal>
</div>
`;

exports[`components/admin_console/permission_schemes_settings/permission_system_scheme_settings/permission_system_scheme_settings should save each role on handleSubmit except system_admin role 1`] = `
<div
  className="wrapper--fixed"
>
  <h3
    className="admin-console-header with-back"
  >
    <Connect(BlockableLink)
      className="fa fa-chevron-left back"
      to="/admin_console/permissions/schemes"
    />
    <FormattedMessage
      defaultMessage="System Scheme"
      id="admin.permissions.systemScheme"
      values={Object {}}
    />
  </h3>
  <div
    className="banner info"
  >
    <div
      className="banner__content"
    >
      <span>
        <InjectIntl(FormattedMarkdownMessage)
          defaultMessage="Configure the default permissions for Team Admins, Channel Admins and other members. This scheme is inherited by all teams unless a [Team Override Scheme](!https://about.mattermost.com/default-team-override-scheme) is applied in specific teams."
          id="admin.permissions.systemScheme.introBanner"
        />
      </span>
    </div>
  </div>
  <div
    className="permissions-block "
    id="all_users"
  >
    <div
      className="header"
      onClick={[Function]}
    >
      <div>
        <h3>
          <FormattedMessage
            defaultMessage="All Members"
            id="admin.permissions.systemScheme.allMembersTitle"
            values={Object {}}
          />
        </h3>
        <span>
          <FormattedMessage
            defaultMessage="Permissions granted to all members, including administrators and newly created users."
            id="admin.permissions.systemScheme.allMembersDescription"
            values={Object {}}
          />
        </span>
      </div>
      <div
        className="button"
      >
        <AccordionToggleIcon />
      </div>
    </div>
    <Connect(PermissionsTree)
      onToggle={[Function]}
      role={
        Object {
          "displayName": "All members",
          "name": "all_users",
          "permissions": Array [],
        }
      }
      scope="system_scope"
      selectRow={[Function]}
      selected={null}
    />
  </div>
  <div
    className="permissions-block "
  >
    <div
      className="header"
      onClick={[Function]}
    >
      <div>
        <h3>
          <FormattedMessage
            defaultMessage="Channel Administrators"
            id="admin.permissions.systemScheme.channelAdminsTitle"
            values={Object {}}
          />
        </h3>
        <span>
          <FormattedMessage
            defaultMessage="Permissions granted to channel creators and any users promoted to Channel Administrator."
            id="admin.permissions.systemScheme.channelAdminsDescription"
            values={Object {}}
          />
        </span>
      </div>
      <div
        className="button"
      >
        <AccordionToggleIcon />
      </div>
    </div>
    <Connect(PermissionsTree)
      onToggle={[Function]}
      parentRole={
        Object {
          "displayName": "All members",
          "name": "all_users",
          "permissions": Array [],
        }
      }
      role={
        Object {
          "permissions": Array [],
        }
      }
      scope="channel_scope"
      selectRow={[Function]}
    />
  </div>
  <div
    className="permissions-block "
  >
    <div
      className="header"
      onClick={[Function]}
    >
      <div>
        <h3>
          <FormattedMessage
            defaultMessage="Team Administrators"
            id="admin.permissions.systemScheme.teamAdminsTitle"
            values={Object {}}
          />
        </h3>
        <span>
          <FormattedMessage
            defaultMessage="Permissions granted to team creators and any users promoted to Team Administrator."
            id="admin.permissions.systemScheme.teamAdminsDescription"
            values={Object {}}
          />
        </span>
      </div>
      <div
        className="button"
      >
        <AccordionToggleIcon />
      </div>
    </div>
    <Connect(PermissionsTree)
      onToggle={[Function]}
      parentRole={
        Object {
          "displayName": "All members",
          "name": "all_users",
          "permissions": Array [],
        }
      }
      role={
        Object {
          "permissions": Array [],
        }
      }
      scope="team_scope"
      selectRow={[Function]}
    />
  </div>
  <div
    className="permissions-block "
  >
    <div
      className="header"
      onClick={[Function]}
    >
      <div>
        <h3>
          <FormattedMessage
            defaultMessage="System Administrators"
            id="admin.permissions.systemScheme.systemAdminsTitle"
            values={Object {}}
          />
        </h3>
        <span>
          <FormattedMessage
            defaultMessage="Full permissions granted to System Administrators."
            id="admin.permissions.systemScheme.systemAdminsDescription"
            values={Object {}}
          />
        </span>
      </div>
      <div
        className="button"
      >
        <AccordionToggleIcon />
      </div>
    </div>
    <Connect(PermissionsTree)
      onToggle={[Function]}
      readOnly={true}
      role={
        Object {
          "permissions": Array [],
        }
      }
      scope="system_scope"
      selectRow={[Function]}
    />
  </div>
  <div
    className="admin-console-save"
  >
    <SaveButton
      btnClass="btn-primary"
      defaultMessage="Save"
      disabled={true}
      extraClasses=""
      onClick={[Function]}
      saving={false}
      savingMessage="Saving Config..."
    />
    <Connect(BlockableLink)
      className="cancel-button"
      to="/admin_console/permissions/schemes"
    >
      <FormattedMessage
        defaultMessage="Cancel"
        id="admin.permissions.permissionSchemes.cancel"
        values={Object {}}
      />
    </Connect(BlockableLink)>
    <a
      className="cancel-button reset-defaults-btn"
      onClick={[Function]}
    >
      <FormattedMessage
        defaultMessage="Reset to Defaults"
        id="admin.permissions.systemScheme.resetDefaultsButton"
        values={Object {}}
      />
    </a>
    <div
      className="error-message"
    >
      <FormError
        error={null}
        errors={Array []}
      />
    </div>
  </div>
  <Modal
    animation={true}
    autoFocus={true}
    backdrop={true}
    bsClass="modal"
    dialogClassName="admin-modal"
    dialogComponentClass={[Function]}
    enforceFocus={true}
    keyboard={true}
    manager={
      ModalManager {
        "add": [Function],
        "containers": Array [],
        "data": Array [],
        "handleContainerOverflow": true,
        "hideSiblingNodes": true,
        "isTopModal": [Function],
        "modals": Array [],
        "remove": [Function],
      }
    }
    onHide={[Function]}
    renderBackdrop={[Function]}
    restoreFocus={true}
    show={false}
  >
    <ModalHeader
      bsClass="modal-header"
      closeButton={true}
      closeLabel="Close"
    >
      <h4
        className="modal-title"
      >
        <FormattedMessage
          defaultMessage="Reset to Default?"
          id="admin.permissions.systemScheme.resetDefaultsButtonModalTitle"
          values={Object {}}
        />
      </h4>
    </ModalHeader>
    <ModalBody
      bsClass="modal-body"
      componentClass="div"
    >
      <FormattedMessage
        defaultMessage="This will reset all selections on this page to their default settings. Are you sure you want to reset?"
        id="admin.permissions.systemScheme.resetDefaultsButtonModalBody"
        values={Object {}}
      />
    </ModalBody>
    <ModalFooter
      bsClass="modal-footer"
      componentClass="div"
    >
      <button
        className="btn btn-cancel"
        onClick={[Function]}
        type="button"
      >
        <FormattedMessage
          defaultMessage="Cancel"
          id="confirm_modal.cancel"
          values={Object {}}
        />
      </button>
      <button
        className="btn btn-default"
        id="linkModalCloseButton"
        onClick={[Function]}
        type="button"
      >
        <FormattedMessage
          defaultMessage="Yes, Reset"
          id="admin.permissions.systemScheme.resetDefaultsConfirmationButton"
          values={Object {}}
        />
      </button>
    </ModalFooter>
  </Modal>
</div>
`;
