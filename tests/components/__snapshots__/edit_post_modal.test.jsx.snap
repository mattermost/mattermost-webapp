// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/EditPostModal should match with default config 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  dialogClassName="edit-modal"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onEntered={[Function]}
  onExit={[Function]}
  onExited={[Function]}
  onHide={[Function]}
  onKeyDown={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    closeButton={true}
    closeLabel="Close"
  >
    <ModalTitle
      bsClass="modal-title"
      componentClass="h4"
    >
      <FormattedMessage
        defaultMessage="Edit {title}"
        id="edit_post.edit"
        values={
          Object {
            "title": "test",
          }
        }
      />
    </ModalTitle>
  </ModalHeader>
  <ModalBody
    bsClass="modal-body edit-modal-body"
    componentClass="div"
  >
    <Textbox
      channelId="5"
      characterLimit={4000}
      createMessage="Edit the post..."
      emojiEnabled={true}
      handlePostError={[Function]}
      id="edit_textbox"
      isRHS={false}
      onChange={[Function]}
      onKeyDown={[Function]}
      onKeyPress={[Function]}
      popoverMentionKeyClick={false}
      suggestionListStyle="bottom"
      supportsCommands={false}
      value=""
    />
    <span
      className="edit-post__actions"
    >
      <span
        className="emoji-picker__container"
      >
        <EmojiPickerOverlay
          container={[Function]}
          enableGifPicker={false}
          onEmojiClick={[Function]}
          onGifClick={[Function]}
          onHide={[Function]}
          rightOffset={50}
          show={false}
          spaceRequiredAbove={476}
          spaceRequiredBelow={497}
          target={[Function]}
          topOffset={-20}
        />
        <EmojiIcon
          className="icon icon--emoji"
          onClick={[Function]}
        />
      </span>
    </span>
    <div
      className="edit-post-footer"
    />
  </ModalBody>
  <ModalFooter
    bsClass="modal-footer"
    componentClass="div"
  >
    <button
      className="btn btn-default"
      onClick={[Function]}
      type="button"
    >
      <FormattedMessage
        defaultMessage="Cancel"
        id="edit_post.cancel"
        values={Object {}}
      />
    </button>
    <button
      className="btn btn-primary"
      onClick={[Function]}
      type="button"
    >
      <FormattedMessage
        defaultMessage="Save"
        id="edit_post.save"
        values={Object {}}
      />
    </button>
  </ModalFooter>
</Modal>
`;

exports[`components/EditPostModal should match without emoji picker 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  dialogClassName="edit-modal"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onEntered={[Function]}
  onExit={[Function]}
  onExited={[Function]}
  onHide={[Function]}
  onKeyDown={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    closeButton={true}
    closeLabel="Close"
  >
    <ModalTitle
      bsClass="modal-title"
      componentClass="h4"
    >
      <FormattedMessage
        defaultMessage="Edit {title}"
        id="edit_post.edit"
        values={
          Object {
            "title": "test",
          }
        }
      />
    </ModalTitle>
  </ModalHeader>
  <ModalBody
    bsClass="modal-body edit-modal-body"
    componentClass="div"
  >
    <Textbox
      channelId="5"
      characterLimit={4000}
      createMessage="Edit the post..."
      emojiEnabled={false}
      handlePostError={[Function]}
      id="edit_textbox"
      isRHS={false}
      onChange={[Function]}
      onKeyDown={[Function]}
      onKeyPress={[Function]}
      popoverMentionKeyClick={false}
      suggestionListStyle="bottom"
      supportsCommands={false}
      value=""
    />
    <span
      className="edit-post__actions"
    />
    <div
      className="edit-post-footer"
    />
  </ModalBody>
  <ModalFooter
    bsClass="modal-footer"
    componentClass="div"
  >
    <button
      className="btn btn-default"
      onClick={[Function]}
      type="button"
    >
      <FormattedMessage
        defaultMessage="Cancel"
        id="edit_post.cancel"
        values={Object {}}
      />
    </button>
    <button
      className="btn btn-primary"
      onClick={[Function]}
      type="button"
    >
      <FormattedMessage
        defaultMessage="Save"
        id="edit_post.save"
        values={Object {}}
      />
    </button>
  </ModalFooter>
</Modal>
`;

exports[`components/EditPostModal should show emojis on emojis click 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  dialogClassName="edit-modal"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onEntered={[Function]}
  onExit={[Function]}
  onExited={[Function]}
  onHide={[Function]}
  onKeyDown={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    closeButton={true}
    closeLabel="Close"
  >
    <ModalTitle
      bsClass="modal-title"
      componentClass="h4"
    >
      <FormattedMessage
        defaultMessage="Edit {title}"
        id="edit_post.edit"
        values={
          Object {
            "title": "test",
          }
        }
      />
    </ModalTitle>
  </ModalHeader>
  <ModalBody
    bsClass="modal-body edit-modal-body"
    componentClass="div"
  >
    <Textbox
      channelId="5"
      characterLimit={4000}
      createMessage="Edit the post..."
      emojiEnabled={true}
      handlePostError={[Function]}
      id="edit_textbox"
      isRHS={false}
      onChange={[Function]}
      onKeyDown={[Function]}
      onKeyPress={[Function]}
      popoverMentionKeyClick={false}
      suggestionListStyle="bottom"
      supportsCommands={false}
      value=""
    />
    <span
      className="edit-post__actions"
    >
      <span
        className="emoji-picker__container"
      >
        <EmojiPickerOverlay
          container={[Function]}
          enableGifPicker={false}
          onEmojiClick={[Function]}
          onGifClick={[Function]}
          onHide={[Function]}
          rightOffset={50}
          show={true}
          spaceRequiredAbove={476}
          spaceRequiredBelow={497}
          target={[Function]}
          topOffset={-20}
        />
        <EmojiIcon
          className="icon icon--emoji"
          onClick={[Function]}
        />
      </span>
    </span>
    <div
      className="edit-post-footer"
    />
  </ModalBody>
  <ModalFooter
    bsClass="modal-footer"
    componentClass="div"
  >
    <button
      className="btn btn-default"
      onClick={[Function]}
      type="button"
    >
      <FormattedMessage
        defaultMessage="Cancel"
        id="edit_post.cancel"
        values={Object {}}
      />
    </button>
    <button
      className="btn btn-primary"
      onClick={[Function]}
      type="button"
    >
      <FormattedMessage
        defaultMessage="Save"
        id="edit_post.save"
        values={Object {}}
      />
    </button>
  </ModalFooter>
</Modal>
`;

exports[`components/EditPostModal should show errors when it is set in the state 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  dialogClassName="edit-modal"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onEntered={[Function]}
  onExit={[Function]}
  onExited={[Function]}
  onHide={[Function]}
  onKeyDown={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    closeButton={true}
    closeLabel="Close"
  >
    <ModalTitle
      bsClass="modal-title"
      componentClass="h4"
    >
      <FormattedMessage
        defaultMessage="Edit {title}"
        id="edit_post.edit"
        values={
          Object {
            "title": "test",
          }
        }
      />
    </ModalTitle>
  </ModalHeader>
  <ModalBody
    bsClass="modal-body edit-modal-body"
    componentClass="div"
  >
    <Textbox
      channelId="5"
      characterLimit={4000}
      createMessage="Edit the post..."
      emojiEnabled={true}
      handlePostError={[Function]}
      id="edit_textbox"
      isRHS={false}
      onChange={[Function]}
      onKeyDown={[Function]}
      onKeyPress={[Function]}
      popoverMentionKeyClick={false}
      suggestionListStyle="bottom"
      supportsCommands={false}
      value=""
    />
    <span
      className="edit-post__actions"
    >
      <span
        className="emoji-picker__container"
      >
        <EmojiPickerOverlay
          container={[Function]}
          enableGifPicker={false}
          onEmojiClick={[Function]}
          onGifClick={[Function]}
          onHide={[Function]}
          rightOffset={50}
          show={false}
          spaceRequiredAbove={476}
          spaceRequiredBelow={497}
          target={[Function]}
          topOffset={-20}
        />
        <EmojiIcon
          className="icon icon--emoji"
          onClick={[Function]}
        />
      </span>
    </span>
    <div
      className="edit-post-footer has-error"
    >
      <label
        className="post-error"
      >
        Test error message
      </label>
    </div>
  </ModalBody>
  <ModalFooter
    bsClass="modal-footer"
    componentClass="div"
  >
    <button
      className="btn btn-default"
      onClick={[Function]}
      type="button"
    >
      <FormattedMessage
        defaultMessage="Cancel"
        id="edit_post.cancel"
        values={Object {}}
      />
    </button>
    <button
      className="btn btn-primary"
      onClick={[Function]}
      type="button"
    >
      <FormattedMessage
        defaultMessage="Save"
        id="edit_post.save"
        values={Object {}}
      />
    </button>
  </ModalFooter>
</Modal>
`;
