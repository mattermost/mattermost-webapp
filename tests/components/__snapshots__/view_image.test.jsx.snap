// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/ViewImageModal should match snapshot for external file 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  className="modal-image"
  dialogClassName="modal-image"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onHide={[MockFunction]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
    modalClassName="modal-image__body"
    onClick={[MockFunction]}
  >
    <div
      className="modal-image__wrapper"
      onClick={[MockFunction]}
    >
      <div
        onClick={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <div
          className="modal-close"
          onClick={[MockFunction]}
        />
        <div
          className="modal-image__content"
        >
          <LoadingImagePreview
            containerClass="view-image__loading"
            loading="Loading"
            progress={0}
          />
        </div>
        <Connect(PopoverBar)
          canDownloadFiles={true}
          enablePublicLink={true}
          fileIndex={0}
          fileURL="/api/v4/files/undefined?download=1"
          isExternalFile={true}
          onGetPublicLink={[Function]}
          show={false}
          showPublicLink={true}
          totalFiles={1}
        />
      </div>
    </div>
  </ModalBody>
</Modal>
`;

exports[`components/ViewImageModal should match snapshot on onModalShown and onModalHidden 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  className="modal-image"
  dialogClassName="modal-image"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onHide={[MockFunction]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
    modalClassName="modal-image__body"
    onClick={[MockFunction]}
  >
    <div
      className="modal-image__wrapper"
      onClick={[MockFunction]}
    >
      <div
        onClick={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <div
          className="modal-close"
          onClick={[MockFunction]}
        />
        <div
          className="modal-image__content"
        >
          <ImagePreview
            canDownloadFiles={true}
            fileInfo={
              Object {
                "extension": "gif",
                "id": "file_id_1",
              }
            }
          />
        </div>
        <Connect(PopoverBar)
          canDownloadFiles={true}
          enablePublicLink={true}
          fileIndex={0}
          fileURL="/api/v4/files/file_id_1?download=1"
          isExternalFile={false}
          onGetPublicLink={[Function]}
          show={false}
          showPublicLink={true}
          totalFiles={3}
        />
      </div>
    </div>
    <a
      className="modal-prev-bar"
      href="#"
      id="previewArrowLeft"
      onClick={[Function]}
    >
      <i
        className="image-control image-prev"
      />
    </a>
    <a
      className="modal-next-bar"
      href="#"
      id="previewArrowRight"
      onClick={[Function]}
    >
      <i
        className="image-control image-next"
      />
    </a>
  </ModalBody>
</Modal>
`;

exports[`components/ViewImageModal should match snapshot on onModalShown and onModalHidden 2`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  className="modal-image"
  dialogClassName="modal-image"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onHide={[MockFunction]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
    modalClassName="modal-image__body"
    onClick={[MockFunction]}
  >
    <div
      className="modal-image__wrapper"
      onClick={[MockFunction]}
    >
      <div
        onClick={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <div
          className="modal-close"
          onClick={[MockFunction]}
        />
        <div
          className="modal-image__content"
        >
          <AudioVideoPreview
            fileInfo={
              Object {
                "extension": "wma",
                "id": "file_id_2",
              }
            }
            fileUrl="/api/v4/files/file_id_2"
          />
        </div>
        <Connect(PopoverBar)
          canDownloadFiles={true}
          enablePublicLink={true}
          fileIndex={1}
          fileURL="/api/v4/files/file_id_2?download=1"
          isExternalFile={false}
          onGetPublicLink={[Function]}
          show={false}
          showPublicLink={true}
          totalFiles={3}
        />
      </div>
    </div>
    <a
      className="modal-prev-bar"
      href="#"
      id="previewArrowLeft"
      onClick={[Function]}
    >
      <i
        className="image-control image-prev"
      />
    </a>
    <a
      className="modal-next-bar"
      href="#"
      id="previewArrowRight"
      onClick={[Function]}
    >
      <i
        className="image-control image-next"
      />
    </a>
  </ModalBody>
</Modal>
`;

exports[`components/ViewImageModal should match snapshot, loaded 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  className="modal-image"
  dialogClassName="modal-image"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onHide={[MockFunction]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
    modalClassName="modal-image__body"
    onClick={[MockFunction]}
  >
    <div
      className="modal-image__wrapper"
      onClick={[MockFunction]}
    >
      <div
        onClick={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <div
          className="modal-close"
          onClick={[MockFunction]}
        />
        <div
          className="modal-image__content"
        >
          <ImagePreview
            canDownloadFiles={true}
            fileInfo={
              Object {
                "extension": "jpg",
                "id": "file_id",
              }
            }
          />
        </div>
        <Connect(PopoverBar)
          canDownloadFiles={true}
          enablePublicLink={true}
          fileIndex={0}
          fileURL="/api/v4/files/file_id?download=1"
          isExternalFile={false}
          onGetPublicLink={[Function]}
          show={false}
          showPublicLink={true}
          totalFiles={1}
        />
      </div>
    </div>
  </ModalBody>
</Modal>
`;

exports[`components/ViewImageModal should match snapshot, loaded and showing footer 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  className="modal-image"
  dialogClassName="modal-image"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onHide={[MockFunction]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
    modalClassName="modal-image__body"
    onClick={[MockFunction]}
  >
    <div
      className="modal-image__wrapper"
      onClick={[MockFunction]}
    >
      <div
        onClick={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <div
          className="modal-close modal-close--show"
          onClick={[MockFunction]}
        />
        <div
          className="modal-image__content"
        >
          <ImagePreview
            canDownloadFiles={true}
            fileInfo={
              Object {
                "extension": "jpg",
                "id": "file_id",
              }
            }
          />
        </div>
        <Connect(PopoverBar)
          canDownloadFiles={true}
          enablePublicLink={true}
          fileIndex={0}
          fileURL="/api/v4/files/file_id?download=1"
          isExternalFile={false}
          onGetPublicLink={[Function]}
          show={true}
          showPublicLink={true}
          totalFiles={1}
        />
      </div>
    </div>
  </ModalBody>
</Modal>
`;

exports[`components/ViewImageModal should match snapshot, loaded with .js file 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  className="modal-image"
  dialogClassName="modal-image"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onHide={[MockFunction]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
    modalClassName="modal-image__body"
    onClick={[MockFunction]}
  >
    <div
      className="modal-image__wrapper"
      onClick={[MockFunction]}
    >
      <div
        onClick={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <div
          className="modal-close"
          onClick={[MockFunction]}
        />
        <div
          className="modal-image__content"
        >
          <CodePreview
            fileInfo={
              Object {
                "extension": "js",
                "id": "file_id",
              }
            }
            fileUrl="/api/v4/files/file_id"
          />
        </div>
        <Connect(PopoverBar)
          canDownloadFiles={true}
          enablePublicLink={true}
          fileIndex={0}
          fileURL="/api/v4/files/file_id?download=1"
          isExternalFile={false}
          onGetPublicLink={[Function]}
          show={false}
          showPublicLink={true}
          totalFiles={1}
        />
      </div>
    </div>
  </ModalBody>
</Modal>
`;

exports[`components/ViewImageModal should match snapshot, loaded with .m4a file 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  className="modal-image"
  dialogClassName="modal-image"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onHide={[MockFunction]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
    modalClassName="modal-image__body"
    onClick={[MockFunction]}
  >
    <div
      className="modal-image__wrapper"
      onClick={[MockFunction]}
    >
      <div
        onClick={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <div
          className="modal-close"
          onClick={[MockFunction]}
        />
        <div
          className="modal-image__content"
        >
          <AudioVideoPreview
            fileInfo={
              Object {
                "extension": "m4a",
                "id": "file_id",
              }
            }
            fileUrl="/api/v4/files/file_id"
          />
        </div>
        <Connect(PopoverBar)
          canDownloadFiles={true}
          enablePublicLink={true}
          fileIndex={0}
          fileURL="/api/v4/files/file_id?download=1"
          isExternalFile={false}
          onGetPublicLink={[Function]}
          show={false}
          showPublicLink={true}
          totalFiles={1}
        />
      </div>
    </div>
  </ModalBody>
</Modal>
`;

exports[`components/ViewImageModal should match snapshot, loaded with .mov file 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  className="modal-image"
  dialogClassName="modal-image"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onHide={[MockFunction]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
    modalClassName="modal-image__body"
    onClick={[MockFunction]}
  >
    <div
      className="modal-image__wrapper"
      onClick={[MockFunction]}
    >
      <div
        onClick={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <div
          className="modal-close"
          onClick={[MockFunction]}
        />
        <div
          className="modal-image__content"
        >
          <AudioVideoPreview
            fileInfo={
              Object {
                "extension": "mov",
                "id": "file_id",
              }
            }
            fileUrl="/api/v4/files/file_id"
          />
        </div>
        <Connect(PopoverBar)
          canDownloadFiles={true}
          enablePublicLink={true}
          fileIndex={0}
          fileURL="/api/v4/files/file_id?download=1"
          isExternalFile={false}
          onGetPublicLink={[Function]}
          show={false}
          showPublicLink={true}
          totalFiles={1}
        />
      </div>
    </div>
  </ModalBody>
</Modal>
`;

exports[`components/ViewImageModal should match snapshot, loaded with footer 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  className="modal-image"
  dialogClassName="modal-image"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onHide={[MockFunction]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
    modalClassName="modal-image__body"
    onClick={[MockFunction]}
  >
    <div
      className="modal-image__wrapper"
      onClick={[MockFunction]}
    >
      <div
        onClick={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <div
          className="modal-close modal-close--show"
          onClick={[MockFunction]}
        />
        <div
          className="modal-image__content"
        >
          <ImagePreview
            canDownloadFiles={true}
            fileInfo={
              Object {
                "extension": "gif",
                "id": "file_id_1",
              }
            }
          />
        </div>
        <Connect(PopoverBar)
          canDownloadFiles={true}
          enablePublicLink={true}
          fileIndex={0}
          fileURL="/api/v4/files/file_id_1?download=1"
          isExternalFile={false}
          onGetPublicLink={[Function]}
          show={true}
          showPublicLink={true}
          totalFiles={3}
        />
      </div>
    </div>
    <a
      className="modal-prev-bar"
      href="#"
      id="previewArrowLeft"
      onClick={[Function]}
    >
      <i
        className="image-control image-prev"
      />
    </a>
    <a
      className="modal-next-bar"
      href="#"
      id="previewArrowRight"
      onClick={[Function]}
    >
      <i
        className="image-control image-next"
      />
    </a>
  </ModalBody>
</Modal>
`;

exports[`components/ViewImageModal should match snapshot, loaded with image 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  className="modal-image"
  dialogClassName="modal-image"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onHide={[MockFunction]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
    modalClassName="modal-image__body"
    onClick={[MockFunction]}
  >
    <div
      className="modal-image__wrapper"
      onClick={[MockFunction]}
    >
      <div
        onClick={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <div
          className="modal-close"
          onClick={[MockFunction]}
        />
        <div
          className="modal-image__content"
        >
          <ImagePreview
            canDownloadFiles={true}
            fileInfo={
              Object {
                "extension": "jpg",
                "id": "file_id",
              }
            }
          />
        </div>
        <Connect(PopoverBar)
          canDownloadFiles={true}
          enablePublicLink={true}
          fileIndex={0}
          fileURL="/api/v4/files/file_id?download=1"
          isExternalFile={false}
          onGetPublicLink={[Function]}
          show={false}
          showPublicLink={true}
          totalFiles={1}
        />
      </div>
    </div>
  </ModalBody>
</Modal>
`;

exports[`components/ViewImageModal should match snapshot, loaded with left and right arrows 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  className="modal-image"
  dialogClassName="modal-image"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onHide={[MockFunction]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
    modalClassName="modal-image__body"
    onClick={[MockFunction]}
  >
    <div
      className="modal-image__wrapper"
      onClick={[MockFunction]}
    >
      <div
        onClick={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <div
          className="modal-close"
          onClick={[MockFunction]}
        />
        <div
          className="modal-image__content"
        >
          <ImagePreview
            canDownloadFiles={true}
            fileInfo={
              Object {
                "extension": "gif",
                "id": "file_id_1",
              }
            }
          />
        </div>
        <Connect(PopoverBar)
          canDownloadFiles={true}
          enablePublicLink={true}
          fileIndex={0}
          fileURL="/api/v4/files/file_id_1?download=1"
          isExternalFile={false}
          onGetPublicLink={[Function]}
          show={false}
          showPublicLink={true}
          totalFiles={3}
        />
      </div>
    </div>
    <a
      className="modal-prev-bar"
      href="#"
      id="previewArrowLeft"
      onClick={[Function]}
    >
      <i
        className="image-control image-prev"
      />
    </a>
    <a
      className="modal-next-bar"
      href="#"
      id="previewArrowRight"
      onClick={[Function]}
    >
      <i
        className="image-control image-next"
      />
    </a>
  </ModalBody>
</Modal>
`;

exports[`components/ViewImageModal should match snapshot, loaded with left and right arrows 2`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  className="modal-image"
  dialogClassName="modal-image"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onHide={[MockFunction]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
    modalClassName="modal-image__body"
    onClick={[MockFunction]}
  >
    <div
      className="modal-image__wrapper"
      onClick={[MockFunction]}
    >
      <div
        onClick={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <div
          className="modal-close"
          onClick={[MockFunction]}
        />
        <div
          className="modal-image__content"
        >
          <AudioVideoPreview
            fileInfo={
              Object {
                "extension": "wma",
                "id": "file_id_2",
              }
            }
            fileUrl="/api/v4/files/file_id_2"
          />
        </div>
        <Connect(PopoverBar)
          canDownloadFiles={true}
          enablePublicLink={true}
          fileIndex={1}
          fileURL="/api/v4/files/file_id_2?download=1"
          isExternalFile={false}
          onGetPublicLink={[Function]}
          show={false}
          showPublicLink={true}
          totalFiles={3}
        />
      </div>
    </div>
    <a
      className="modal-prev-bar"
      href="#"
      id="previewArrowLeft"
      onClick={[Function]}
    >
      <i
        className="image-control image-prev"
      />
    </a>
    <a
      className="modal-next-bar"
      href="#"
      id="previewArrowRight"
      onClick={[Function]}
    >
      <i
        className="image-control image-next"
      />
    </a>
  </ModalBody>
</Modal>
`;

exports[`components/ViewImageModal should match snapshot, loaded with left and right arrows 3`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  className="modal-image"
  dialogClassName="modal-image"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onHide={[MockFunction]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
    modalClassName="modal-image__body"
    onClick={[MockFunction]}
  >
    <div
      className="modal-image__wrapper"
      onClick={[MockFunction]}
    >
      <div
        onClick={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <div
          className="modal-close"
          onClick={[MockFunction]}
        />
        <div
          className="modal-image__content"
        >
          <AudioVideoPreview
            fileInfo={
              Object {
                "extension": "wma",
                "id": "file_id_2",
              }
            }
            fileUrl="/api/v4/files/file_id_2"
          />
        </div>
        <Connect(PopoverBar)
          canDownloadFiles={true}
          enablePublicLink={true}
          fileIndex={1}
          fileURL="/api/v4/files/file_id_2?download=1"
          isExternalFile={false}
          onGetPublicLink={[Function]}
          show={false}
          showPublicLink={true}
          totalFiles={3}
        />
      </div>
    </div>
    <a
      className="modal-prev-bar"
      href="#"
      id="previewArrowLeft"
      onClick={[Function]}
    >
      <i
        className="image-control image-prev"
      />
    </a>
    <a
      className="modal-next-bar"
      href="#"
      id="previewArrowRight"
      onClick={[Function]}
    >
      <i
        className="image-control image-next"
      />
    </a>
  </ModalBody>
</Modal>
`;

exports[`components/ViewImageModal should match snapshot, loaded with other file 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  className="modal-image"
  dialogClassName="modal-image"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onHide={[MockFunction]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
    modalClassName="modal-image__body"
    onClick={[MockFunction]}
  >
    <div
      className="modal-image__wrapper"
      onClick={[MockFunction]}
    >
      <div
        onClick={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <div
          className="modal-close"
          onClick={[MockFunction]}
        />
        <div
          className="modal-image__content"
        >
          <Connect(FileInfoPreview)
            fileInfo={
              Object {
                "extension": "other",
                "id": "file_id",
              }
            }
            fileUrl="/api/v4/files/file_id"
          />
        </div>
        <Connect(PopoverBar)
          canDownloadFiles={true}
          enablePublicLink={true}
          fileIndex={0}
          fileURL="/api/v4/files/file_id?download=1"
          isExternalFile={false}
          onGetPublicLink={[Function]}
          show={false}
          showPublicLink={true}
          totalFiles={1}
        />
      </div>
    </div>
  </ModalBody>
</Modal>
`;

exports[`components/ViewImageModal should match snapshot, loading 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  className="modal-image"
  dialogClassName="modal-image"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onHide={[MockFunction]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
    modalClassName="modal-image__body"
    onClick={[MockFunction]}
  >
    <div
      className="modal-image__wrapper"
      onClick={[MockFunction]}
    >
      <div
        onClick={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <div
          className="modal-close"
          onClick={[MockFunction]}
        />
        <div
          className="modal-image__content"
        >
          <LoadingImagePreview
            containerClass="view-image__loading"
            loading="Loading"
            progress={0}
          />
        </div>
        <Connect(PopoverBar)
          canDownloadFiles={true}
          enablePublicLink={true}
          fileIndex={0}
          fileURL="/api/v4/files/file_id?download=1"
          isExternalFile={false}
          onGetPublicLink={[Function]}
          show={false}
          showPublicLink={true}
          totalFiles={1}
        />
      </div>
    </div>
  </ModalBody>
</Modal>
`;

exports[`components/ViewImageModal should match snapshot, modal not shown 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  className="modal-image"
  dialogClassName="modal-image"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onHide={[MockFunction]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={false}
>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
    modalClassName="modal-image__body"
    onClick={[MockFunction]}
  >
    <div
      className="modal-image__wrapper"
      onClick={[MockFunction]}
    >
      <div
        onClick={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <div
          className="modal-close"
          onClick={[MockFunction]}
        />
        <div
          className="modal-image__content"
        >
          <LoadingImagePreview
            containerClass="view-image__loading"
            loading="Loading"
            progress={0}
          />
        </div>
        <Connect(PopoverBar)
          canDownloadFiles={true}
          enablePublicLink={true}
          fileIndex={0}
          fileURL="/api/v4/files/file_id?download=1"
          isExternalFile={false}
          onGetPublicLink={[Function]}
          show={false}
          showPublicLink={true}
          totalFiles={1}
        />
      </div>
    </div>
  </ModalBody>
</Modal>
`;
