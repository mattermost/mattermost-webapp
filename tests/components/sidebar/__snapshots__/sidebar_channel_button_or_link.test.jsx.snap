// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLink should match snapshot, on desktop with mentions badge 1`] = `
<Link
  className="test-class"
  onClick={[Function]}
  replace={false}
  to="test-link"
>
  <React.Fragment>
    <SidebarChannelButtonOrLinkIcon
      channelIsArchived={false}
      channelStatus="test"
      channelType="D"
      membersCount={3}
      teammateDeletedAt={1}
      teammateId="test-teammate-id"
    />
    <span
      className="sidebar-item__name"
    >
      test-channel-name
    </span>
    <span
      className="badge"
    >
      6
    </span>
    <SidebarChannelButtonOrLinkCloseButton
      badge={true}
      channelId="test-channel-id"
      channelType="D"
      handleClose={[MockFunction]}
      teammateId="test-teammate-id"
    />
  </React.Fragment>
</Link>
`;

exports[`component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLink should match snapshot, on desktop without badge 1`] = `
<Link
  className="test-class"
  onClick={[Function]}
  replace={false}
  to="test-link"
>
  <React.Fragment>
    <SidebarChannelButtonOrLinkIcon
      channelIsArchived={false}
      channelStatus="test"
      channelType="D"
      membersCount={3}
      teammateDeletedAt={1}
      teammateId="test-teammate-id"
    />
    <span
      className="sidebar-item__name"
    >
      test-channel-name
    </span>
    <SidebarChannelButtonOrLinkCloseButton
      channelId="test-channel-id"
      channelType="D"
      handleClose={[MockFunction]}
      teammateId="test-teammate-id"
    />
  </React.Fragment>
</Link>
`;

exports[`component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLink should match snapshot, on non-desktop with mentions badge 1`] = `
<Link
  className="test-class"
  onClick={[Function]}
  replace={false}
  to="test-link"
>
  <React.Fragment>
    <SidebarChannelButtonOrLinkIcon
      channelIsArchived={false}
      channelStatus="test"
      channelType="D"
      membersCount={3}
      teammateDeletedAt={1}
      teammateId="test-teammate-id"
    />
    <span
      className="sidebar-item__name"
    >
      test-channel-name
    </span>
    <span
      className="badge"
    >
      6
    </span>
    <SidebarChannelButtonOrLinkCloseButton
      badge={true}
      channelId="test-channel-id"
      channelType="D"
      handleClose={[MockFunction]}
      teammateId="test-teammate-id"
    />
  </React.Fragment>
</Link>
`;

exports[`component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLink should match snapshot, on non-desktop without badge 1`] = `
<Link
  className="test-class"
  onClick={[Function]}
  replace={false}
  to="test-link"
>
  <React.Fragment>
    <SidebarChannelButtonOrLinkIcon
      channelIsArchived={false}
      channelStatus="test"
      channelType="D"
      membersCount={3}
      teammateDeletedAt={1}
      teammateId="test-teammate-id"
    />
    <span
      className="sidebar-item__name"
    >
      test-channel-name
    </span>
    <SidebarChannelButtonOrLinkCloseButton
      channelId="test-channel-id"
      channelType="D"
      handleClose={[MockFunction]}
      teammateId="test-teammate-id"
    />
  </React.Fragment>
</Link>
`;

exports[`component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLink should match snapshot, when username is empty string 1`] = `
<Link
  className="test-class"
  onClick={[Function]}
  replace={false}
  to="test-link"
>
  <React.Fragment>
    <SidebarChannelButtonOrLinkIcon
      channelIsArchived={false}
      channelStatus="test"
      channelType="D"
      membersCount={2}
      teammateDeletedAt={1}
      teammateId="test-teammate-id"
    />
    <span
      className="sidebar-item__name"
    >
      <span
        className="loading-user"
      >
        <LoadingScreen
          position="relative"
          style={
            Object {
              "padding": "0px",
            }
          }
        />
      </span>
    </span>
    <SidebarChannelButtonOrLinkCloseButton
      channelId="test-channel-id"
      channelType="D"
      handleClose={[MockFunction]}
      teammateId="test-teammate-id"
    />
  </React.Fragment>
</Link>
`;
