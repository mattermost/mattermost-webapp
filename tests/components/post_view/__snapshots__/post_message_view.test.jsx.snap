// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/post_view/PostAttachment should match snapshot 1`] = `
<Connect(ShowMore)
  checkOverflow={0}
  maxHeight={600}
  text="post message"
>
  <div
    className="post-message__text"
    id="lastPostMessageText1"
    onClick={[Function]}
  >
    <PostMarkdown
      imageProps={
        Object {
          "onHeightReceived": [Function],
        }
      }
      isRHS={false}
      message="post message"
      options={Object {}}
      post={
        Object {
          "id": "post_id",
          "message": "post message",
          "state": "",
          "type": "",
        }
      }
    />
  </div>
  <Connect(Pluggable)
    onHeightChange={[Function]}
    pluggableName="PostMessageAttachment"
    postId="post_id"
  />
</Connect(ShowMore)>
`;

exports[`components/post_view/PostAttachment should match snapshot, on Show Less 1`] = `
<Connect(ShowMore)
  checkOverflow={0}
  maxHeight={600}
  text="post message"
>
  <div
    className="post-message__text"
    id="lastPostMessageText1"
    onClick={[Function]}
  >
    <PostMarkdown
      imageProps={
        Object {
          "onHeightReceived": [Function],
        }
      }
      isRHS={false}
      message="post message"
      options={Object {}}
      post={
        Object {
          "id": "post_id",
          "message": "post message",
          "state": "",
          "type": "",
        }
      }
    />
  </div>
  <Connect(Pluggable)
    onHeightChange={[Function]}
    pluggableName="PostMessageAttachment"
    postId="post_id"
  />
</Connect(ShowMore)>
`;

exports[`components/post_view/PostAttachment should match snapshot, on Show More 1`] = `
<Connect(ShowMore)
  checkOverflow={0}
  maxHeight={600}
  text="post message"
>
  <div
    className="post-message__text"
    id="lastPostMessageText1"
    onClick={[Function]}
  >
    <PostMarkdown
      imageProps={
        Object {
          "onHeightReceived": [Function],
        }
      }
      isRHS={false}
      message="post message"
      options={Object {}}
      post={
        Object {
          "id": "post_id",
          "message": "post message",
          "state": "",
          "type": "",
        }
      }
    />
  </div>
  <Connect(Pluggable)
    onHeightChange={[Function]}
    pluggableName="PostMessageAttachment"
    postId="post_id"
  />
</Connect(ShowMore)>
`;

exports[`components/post_view/PostAttachment should match snapshot, on deleted post 1`] = `
<p>
  <FormattedMessage
    defaultMessage="(message deleted)"
    id="post_body.deleted"
    values={Object {}}
  />
</p>
`;

exports[`components/post_view/PostAttachment should match snapshot, on deleted post 2`] = `
<p>
  <FormattedMessage
    defaultMessage="(message deleted)"
    id="post_body.deleted"
    values={Object {}}
  />
</p>
`;

exports[`components/post_view/PostAttachment should match snapshot, on edited post 1`] = `
<Connect(ShowMore)
  checkOverflow={0}
  maxHeight={600}
  text="post message"
>
  <div
    className="post-message__text"
    id="lastPostMessageText1"
    onClick={[Function]}
  >
    <PostMarkdown
      imageProps={
        Object {
          "onHeightReceived": [Function],
        }
      }
      isRHS={false}
      message="post message"
      options={Object {}}
      post={
        Object {
          "edit_at": 1,
          "id": "post_id",
          "message": "post message",
          "state": "",
          "type": "",
        }
      }
    />
  </div>
  <span
    className="post-edited__indicator"
  >
    <FormattedMessage
      defaultMessage="(edited)"
      id="post_message_view.edited"
      values={Object {}}
    />
  </span>
  <Connect(Pluggable)
    onHeightChange={[Function]}
    pluggableName="PostMessageAttachment"
    postId="post_id"
  />
</Connect(ShowMore)>
`;

exports[`components/post_view/PostAttachment should match snapshot, on edited post 2`] = `
<span
  className="post-edited__indicator"
>
  <FormattedMessage
    defaultMessage="(edited)"
    id="post_message_view.edited"
    values={Object {}}
  />
</span>
`;

exports[`components/post_view/PostAttachment should match snapshot, on ephemeral post 1`] = `
<Connect(ShowMore)
  checkOverflow={0}
  maxHeight={600}
  text="post message"
>
  <div
    className="post-message__text"
    id="lastPostMessageText1"
    onClick={[Function]}
  >
    <PostMarkdown
      imageProps={
        Object {
          "onHeightReceived": [Function],
        }
      }
      isRHS={false}
      message="post message"
      options={Object {}}
      post={
        Object {
          "id": "post_id",
          "message": "post message",
          "state": "",
          "type": "system_ephemeral",
        }
      }
    />
  </div>
  <Connect(Pluggable)
    onHeightChange={[Function]}
    pluggableName="PostMessageAttachment"
    postId="post_id"
  />
</Connect(ShowMore)>
`;
