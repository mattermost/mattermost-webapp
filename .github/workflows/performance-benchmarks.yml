name: Performance Benchmarks
on:
  push:
    branches:
      - master
      - release-**
  pull_request:
    branches:
      - master

jobs:
  cypress-run:
    runs-on: ubuntu-20.04
    name: Run Cypress benchmarks
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: mostest
          POSTGRES_USER: mmuser
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Check out web app
        uses: actions/checkout@v3

      - name: Download and install Cypress
        uses: cypress-io/github-action@v4
        with:
          runTests: false
          working-directory: e2e/cypress

      - name: Wait for PR branch to be built
        uses: lewagon/wait-on-check-action@v1.2.0
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          check-name: untagged-build
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
          verbose: true

      - name: Download the thing
        working-directory: e2e/cypress
        run: |
          if [[ "${{ github.event.pull_request.head.sha }}" != "" ]]; then
            echo "Using server build from pr-builds.mattermost.com"
            curl https://pr-builds.mattermost.com/mattermost-webapp/commit/${{ github.event.pull_request.head.sha }}/mattermost-enterprise-linux-amd64.tar.gz > mattermost.tar.gz

            tar xf mattermost.tar.gz
          else
            echo "Using server build from releases.mattermost.com with web app build from pr-builds.mattermost.com"

            # Note that the server commit might not be the latest if we merge server and web app branches at the same time
            curl https://s3.amazonaws.com/releases.mattermost.com/gitlab/bundle/${{ github.ref_name }}/mattermost-enterprise-linux-amd64.tar.gz > mattermost-server.tar.gz
            curl https://pr-builds.mattermost.com/mattermost-webapp/commit/${{ github.sha }}/mattermost-webapp.tar.gz > mattermost-webapp.tar.gz

            # Unzip the server, replace the web app, and re-add product files
            tar xf mattermost-server.tar.gz
            mv mattermost/client client-original
            tar xf mattermost-webapp.tar.gz
            mv client mattermost
            mv client-original/products mattermost/client/products
          fi
      - name: Run the E2E tests
        uses: cypress-io/github-action@v4
        with:
          browser: chrome
          install: false
          spec: ./tests/integration/performance/*
          start: npm run benchmarks:run-server
          wait-on: http://localhost:8065
          working-directory: e2e/cypress
        env:
          MM_LOGSETTINGS_ENABLECONSOLE: false
          MM_SQLSETTINGS_DATASOURCE: postgres://mmuser:mostest@localhost/postgres?sslmode=disable&connect_timeout=10&binary_parameters=yes
