// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/audit_table/AuditTable should match snapshot with audits 1`] = `
<AuditTable
  actions={
    Object {
      "getMissingProfilesByIds": [Function],
    }
  }
  audits={
    Array [
      Object {
        "action": "/api/v4/channels",
        "create_at": 50778112674,
        "extra_info": "name=yeye",
        "id": "id_2",
        "ip_address": "::1",
        "session_id": "hb8febm9ytdiz8zqaxj18efqhy",
        "user_id": "user_id_1",
      },
      Object {
        "action": "/api/v4/users/login",
        "create_at": 51053522355,
        "extra_info": "success",
        "id": "id_1",
        "ip_address": "::1",
        "session_id": "",
        "user_id": "user_id_1",
      },
    ]
  }
  currentUser={
    Object {
      "id": "test_user",
    }
  }
  getByName={[MockFunction]}
  getUser={[MockFunction]}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatDateToParts": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatNumberToParts": [Function],
      "formatPlural": [Function],
      "formatRelativeTime": [Function],
      "formatTime": [Function],
      "formatTimeToParts": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralRules": [Function],
        "getRelativeTimeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "onError": [Function],
      "textComponent": Symbol(react.fragment),
      "timeZone": undefined,
    }
  }
  showIp={true}
  showSession={true}
  showUserId={true}
/>
`;

exports[`components/audit_table/AuditTable should match snapshot with no audits 1`] = `
<AuditTable
  actions={
    Object {
      "getMissingProfilesByIds": [Function],
    }
  }
  audits={Array []}
  currentUser={
    Object {
      "id": "test_user",
    }
  }
  getByName={[MockFunction]}
  getUser={[MockFunction]}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatDateToParts": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatNumberToParts": [Function],
      "formatPlural": [Function],
      "formatRelativeTime": [Function],
      "formatTime": [Function],
      "formatTimeToParts": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralRules": [Function],
        "getRelativeTimeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "onError": [Function],
      "textComponent": Symbol(react.fragment),
      "timeZone": undefined,
    }
  }
  showIp={true}
  showSession={true}
  showUserId={true}
/>
`;
