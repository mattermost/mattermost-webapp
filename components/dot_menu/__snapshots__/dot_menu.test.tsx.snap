// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/dot_menu/DotMenu should match snapshot, canDelete 1`] = `
<MenuWrapper
  animationComponent={[Function]}
  className="dropdown-menu__dotmenu"
  onToggle={[Function]}
>
  <OverlayTrigger
    className="hidden-xs"
    defaultOverlayShown={false}
    delayShow={500}
    overlay={
      <Tooltip
        className="hidden-xs"
        id="dotmenu-icon-tooltip"
      >
        <Memo(MemoizedFormattedMessage)
          defaultMessage="More"
          id="post_info.dot_menu.tooltip.more_actions"
        />
      </Tooltip>
    }
    placement="top"
    rootClose={true}
    trigger={
      Array [
        "hover",
        "focus",
      ]
    }
  >
    <button
      aria-expanded="false"
      aria-label="actions"
      className="post-menu__item"
      id="CENTER_button_post_id_1"
      type="button"
    >
      <DotsHorizontalIcon
        className="icon icon--small"
      />
    </button>
  </OverlayTrigger>
  <Menu
    ariaLabel="Post extra options"
    className="Menu__content dropdown-menu"
    id="CENTER_dropdown_post_id_1"
    openLeft={true}
    openUp={false}
  >
    <MenuItemAction
      className="MenuItem"
      icon={
        <span
          className="icon-reply-outline MenuItem__compass-icon"
        />
      }
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="R"
        />
      }
      show={true}
      text="Reply"
    />
    <MenuItemAction
      className="MenuItem"
      icon={
        <span
          className="icon-arrow-right-bold-outline MenuItem__compass-icon"
        />
      }
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="Shift + F"
        />
      }
      show={true}
      text={
        <span
          className="title-with-new-badge"
        >
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Forward"
            id="forward_post_button.label"
          />
        </span>
      }
    />
    <Connect(ChannelPermissionGate)
      channelId=""
      permissions={
        Array [
          "add_reaction",
        ]
      }
      teamId="team_id_1"
    >
      <MenuItemAction
        icon={
          <span
            className="icon-emoticon-plus-outline MenuItem__compass-icon"
          />
        }
        onClick={[Function]}
        show={false}
        text="Add Reaction"
      />
    </Connect(ChannelPermissionGate)>
    <MenuItemAction
      icon={
        <span
          className="icon-message-check-outline MenuItem__compass-icon"
        />
      }
      id="follow_post_thread_post_id_1"
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="F"
        />
      }
      show={false}
      text="Follow message"
    />
    <MenuItemAction
      icon={
        <span
          className="icon-mark-as-unread MenuItem__compass-icon"
        />
      }
      id="unread_post_post_id_1"
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="U"
        />
      }
      show={true}
      text="Mark as Unread"
    />
    <MenuItemAction
      icon={
        <span
          className="icon-bookmark-outline MenuItem__compass-icon"
        />
      }
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="S"
        />
      }
      show={true}
      text="Save"
    />
    <MenuItemAction
      icon={
        <span
          className="icon-pin MenuItem__compass-icon"
        />
      }
      id="unpin_post_post_id_1"
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="P"
        />
      }
      show={false}
      text="Unpin"
    />
    <MenuItemAction
      icon={
        <span
          className="icon-pin-outline MenuItem__compass-icon"
        />
      }
      id="pin_post_post_id_1"
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="P"
        />
      }
      show={true}
      text="Pin"
    />
    <li
      className="MenuItem__divider"
      id="divider_post_post_id_1_edit"
      role="menuitem"
    />
    <MenuItemAction
      icon={
        <span
          className="icon-link-variant MenuItem__compass-icon"
        />
      }
      id="permalink_post_id_1"
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="K"
        />
      }
      show={true}
      text="Copy Link"
    />
    <li
      className="MenuItem__divider"
      id="divider_post_post_id_1_edit"
      role="menuitem"
    />
    <MenuItemAction
      icon={
        <span
          className="icon-pencil-outline MenuItem__compass-icon"
        />
      }
      id="edit_post_post_id_1"
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="E"
        />
      }
      show={true}
      text="Edit"
    />
    <MenuItemAction
      icon={
        <span
          className="icon-content-copy MenuItem__compass-icon"
        />
      }
      id="copy_post_id_1"
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="C"
        />
      }
      show={true}
      text="Copy Text"
    />
    <MenuItemAction
      icon={
        <span
          className="icon-trash-can-outline MenuItem__compass-icon-dangerous"
        />
      }
      id="delete_post_post_id_1"
      isDangerous={true}
      onClick={[Function]}
      rightDecorator={
        <span
          className="MenuItem__opacity"
        >
          delete
        </span>
      }
      show={true}
      text="Delete"
    />
  </Menu>
</MenuWrapper>
`;

exports[`components/dot_menu/DotMenu should match snapshot, hide "New" badge on forward post 1`] = `
<MenuWrapper
  animationComponent={[Function]}
  className="dropdown-menu__dotmenu"
  onToggle={[Function]}
>
  <OverlayTrigger
    className="hidden-xs"
    defaultOverlayShown={false}
    delayShow={500}
    overlay={
      <Tooltip
        className="hidden-xs"
        id="dotmenu-icon-tooltip"
      >
        <Memo(MemoizedFormattedMessage)
          defaultMessage="More"
          id="post_info.dot_menu.tooltip.more_actions"
        />
      </Tooltip>
    }
    placement="top"
    rootClose={true}
    trigger={
      Array [
        "hover",
        "focus",
      ]
    }
  >
    <button
      aria-expanded="false"
      aria-label="actions"
      className="post-menu__item"
      id="CENTER_button_post_id_1"
      type="button"
    >
      <DotsHorizontalIcon
        className="icon icon--small"
      />
    </button>
  </OverlayTrigger>
  <Menu
    ariaLabel="Post extra options"
    className="Menu__content dropdown-menu"
    id="CENTER_dropdown_post_id_1"
    openLeft={true}
    openUp={false}
  >
    <MenuItemAction
      className="MenuItem"
      icon={
        <span
          className="icon-reply-outline MenuItem__compass-icon"
        />
      }
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="R"
        />
      }
      show={true}
      text="Reply"
    />
    <MenuItemAction
      className="MenuItem"
      icon={
        <span
          className="icon-arrow-right-bold-outline MenuItem__compass-icon"
        />
      }
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="Shift + F"
        />
      }
      show={true}
      text={
        <span
          className="title-with-new-badge"
        >
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Forward"
            id="forward_post_button.label"
          />
        </span>
      }
    />
    <Connect(ChannelPermissionGate)
      channelId=""
      permissions={
        Array [
          "add_reaction",
        ]
      }
      teamId="team_id_1"
    >
      <MenuItemAction
        icon={
          <span
            className="icon-emoticon-plus-outline MenuItem__compass-icon"
          />
        }
        onClick={[Function]}
        show={false}
        text="Add Reaction"
      />
    </Connect(ChannelPermissionGate)>
    <MenuItemAction
      icon={
        <span
          className="icon-message-check-outline MenuItem__compass-icon"
        />
      }
      id="follow_post_thread_post_id_1"
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="F"
        />
      }
      show={false}
      text="Follow message"
    />
    <MenuItemAction
      icon={
        <span
          className="icon-mark-as-unread MenuItem__compass-icon"
        />
      }
      id="unread_post_post_id_1"
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="U"
        />
      }
      show={true}
      text="Mark as Unread"
    />
    <MenuItemAction
      icon={
        <span
          className="icon-bookmark-outline MenuItem__compass-icon"
        />
      }
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="S"
        />
      }
      show={true}
      text="Save"
    />
    <MenuItemAction
      icon={
        <span
          className="icon-pin MenuItem__compass-icon"
        />
      }
      id="unpin_post_post_id_1"
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="P"
        />
      }
      show={false}
      text="Unpin"
    />
    <MenuItemAction
      icon={
        <span
          className="icon-pin-outline MenuItem__compass-icon"
        />
      }
      id="pin_post_post_id_1"
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="P"
        />
      }
      show={true}
      text="Pin"
    />
    <MenuItemAction
      icon={
        <span
          className="icon-link-variant MenuItem__compass-icon"
        />
      }
      id="permalink_post_id_1"
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="K"
        />
      }
      show={true}
      text="Copy Link"
    />
    <li
      className="MenuItem__divider"
      id="divider_post_post_id_1_edit"
      role="menuitem"
    />
    <MenuItemAction
      icon={
        <span
          className="icon-pencil-outline MenuItem__compass-icon"
        />
      }
      id="edit_post_post_id_1"
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="E"
        />
      }
      show={false}
      text="Edit"
    />
    <MenuItemAction
      icon={
        <span
          className="icon-content-copy MenuItem__compass-icon"
        />
      }
      id="copy_post_id_1"
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="C"
        />
      }
      show={true}
      text="Copy Text"
    />
    <MenuItemAction
      icon={
        <span
          className="icon-trash-can-outline MenuItem__compass-icon-dangerous"
        />
      }
      id="delete_post_post_id_1"
      isDangerous={true}
      onClick={[Function]}
      rightDecorator={
        <span
          className="MenuItem__opacity"
        >
          delete
        </span>
      }
      show={false}
      text="Delete"
    />
  </Menu>
</MenuWrapper>
`;

exports[`components/dot_menu/DotMenu should match snapshot, on Center 1`] = `
<MenuWrapper
  animationComponent={[Function]}
  className="dropdown-menu__dotmenu"
  onToggle={[Function]}
>
  <OverlayTrigger
    className="hidden-xs"
    defaultOverlayShown={false}
    delayShow={500}
    overlay={
      <Tooltip
        className="hidden-xs"
        id="dotmenu-icon-tooltip"
      >
        <Memo(MemoizedFormattedMessage)
          defaultMessage="More"
          id="post_info.dot_menu.tooltip.more_actions"
        />
      </Tooltip>
    }
    placement="top"
    rootClose={true}
    trigger={
      Array [
        "hover",
        "focus",
      ]
    }
  >
    <button
      aria-expanded="false"
      aria-label="actions"
      className="post-menu__item"
      id="CENTER_button_post_id_1"
      type="button"
    >
      <DotsHorizontalIcon
        className="icon icon--small"
      />
    </button>
  </OverlayTrigger>
  <Menu
    ariaLabel="Post extra options"
    className="Menu__content dropdown-menu"
    id="CENTER_dropdown_post_id_1"
    openLeft={true}
    openUp={false}
  >
    <MenuItemAction
      className="MenuItem"
      icon={
        <span
          className="icon-reply-outline MenuItem__compass-icon"
        />
      }
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="R"
        />
      }
      show={true}
      text="Reply"
    />
    <MenuItemAction
      className="MenuItem"
      icon={
        <span
          className="icon-arrow-right-bold-outline MenuItem__compass-icon"
        />
      }
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="Shift + F"
        />
      }
      show={true}
      text={
        <span
          className="title-with-new-badge"
        >
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Forward"
            id="forward_post_button.label"
          />
        </span>
      }
    />
    <Connect(ChannelPermissionGate)
      channelId=""
      permissions={
        Array [
          "add_reaction",
        ]
      }
      teamId="team_id_1"
    >
      <MenuItemAction
        icon={
          <span
            className="icon-emoticon-plus-outline MenuItem__compass-icon"
          />
        }
        onClick={[Function]}
        show={false}
        text="Add Reaction"
      />
    </Connect(ChannelPermissionGate)>
    <MenuItemAction
      icon={
        <span
          className="icon-message-check-outline MenuItem__compass-icon"
        />
      }
      id="follow_post_thread_post_id_1"
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="F"
        />
      }
      show={false}
      text="Follow message"
    />
    <MenuItemAction
      icon={
        <span
          className="icon-mark-as-unread MenuItem__compass-icon"
        />
      }
      id="unread_post_post_id_1"
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="U"
        />
      }
      show={true}
      text="Mark as Unread"
    />
    <MenuItemAction
      icon={
        <span
          className="icon-bookmark-outline MenuItem__compass-icon"
        />
      }
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="S"
        />
      }
      show={true}
      text="Save"
    />
    <MenuItemAction
      icon={
        <span
          className="icon-pin MenuItem__compass-icon"
        />
      }
      id="unpin_post_post_id_1"
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="P"
        />
      }
      show={false}
      text="Unpin"
    />
    <MenuItemAction
      icon={
        <span
          className="icon-pin-outline MenuItem__compass-icon"
        />
      }
      id="pin_post_post_id_1"
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="P"
        />
      }
      show={true}
      text="Pin"
    />
    <li
      className="MenuItem__divider"
      id="divider_post_post_id_1_edit"
      role="menuitem"
    />
    <MenuItemAction
      icon={
        <span
          className="icon-link-variant MenuItem__compass-icon"
        />
      }
      id="permalink_post_id_1"
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="K"
        />
      }
      show={true}
      text="Copy Link"
    />
    <li
      className="MenuItem__divider"
      id="divider_post_post_id_1_edit"
      role="menuitem"
    />
    <MenuItemAction
      icon={
        <span
          className="icon-pencil-outline MenuItem__compass-icon"
        />
      }
      id="edit_post_post_id_1"
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="E"
        />
      }
      show={true}
      text="Edit"
    />
    <MenuItemAction
      icon={
        <span
          className="icon-content-copy MenuItem__compass-icon"
        />
      }
      id="copy_post_id_1"
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="C"
        />
      }
      show={true}
      text="Copy Text"
    />
    <MenuItemAction
      icon={
        <span
          className="icon-trash-can-outline MenuItem__compass-icon-dangerous"
        />
      }
      id="delete_post_post_id_1"
      isDangerous={true}
      onClick={[Function]}
      rightDecorator={
        <span
          className="MenuItem__opacity"
        >
          delete
        </span>
      }
      show={false}
      text="Delete"
    />
  </Menu>
</MenuWrapper>
`;

exports[`components/dot_menu/DotMenu should match snapshot, show "New" badge on forward post 1`] = `
<MenuWrapper
  animationComponent={[Function]}
  className="dropdown-menu__dotmenu"
  onToggle={[Function]}
>
  <OverlayTrigger
    className="hidden-xs"
    defaultOverlayShown={false}
    delayShow={500}
    overlay={
      <Tooltip
        className="hidden-xs"
        id="dotmenu-icon-tooltip"
      >
        <Memo(MemoizedFormattedMessage)
          defaultMessage="More"
          id="post_info.dot_menu.tooltip.more_actions"
        />
      </Tooltip>
    }
    placement="top"
    rootClose={true}
    trigger={
      Array [
        "hover",
        "focus",
      ]
    }
  >
    <button
      aria-expanded="false"
      aria-label="actions"
      className="post-menu__item"
      id="CENTER_button_post_id_1"
      type="button"
    >
      <DotsHorizontalIcon
        className="icon icon--small"
      />
    </button>
  </OverlayTrigger>
  <Menu
    ariaLabel="Post extra options"
    className="Menu__content dropdown-menu"
    id="CENTER_dropdown_post_id_1"
    openLeft={true}
    openUp={false}
  >
    <MenuItemAction
      className="MenuItem"
      icon={
        <span
          className="icon-reply-outline MenuItem__compass-icon"
        />
      }
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="R"
        />
      }
      show={true}
      text="Reply"
    />
    <MenuItemAction
      className="MenuItem"
      icon={
        <span
          className="icon-arrow-right-bold-outline MenuItem__compass-icon"
        />
      }
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="Shift + F"
        />
      }
      show={true}
      text={
        <span
          className="title-with-new-badge"
        >
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Forward"
            id="forward_post_button.label"
          />
          <Memo(Badge)
            variant="success"
          >
            <Memo(MemoizedFormattedMessage)
              defaultMessage="NEW"
              id="badge.label.new"
            />
          </Memo(Badge)>
        </span>
      }
    />
    <Connect(ChannelPermissionGate)
      channelId=""
      permissions={
        Array [
          "add_reaction",
        ]
      }
      teamId="team_id_1"
    >
      <MenuItemAction
        icon={
          <span
            className="icon-emoticon-plus-outline MenuItem__compass-icon"
          />
        }
        onClick={[Function]}
        show={false}
        text="Add Reaction"
      />
    </Connect(ChannelPermissionGate)>
    <MenuItemAction
      icon={
        <span
          className="icon-message-check-outline MenuItem__compass-icon"
        />
      }
      id="follow_post_thread_post_id_1"
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="F"
        />
      }
      show={false}
      text="Follow message"
    />
    <MenuItemAction
      icon={
        <span
          className="icon-mark-as-unread MenuItem__compass-icon"
        />
      }
      id="unread_post_post_id_1"
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="U"
        />
      }
      show={true}
      text="Mark as Unread"
    />
    <MenuItemAction
      icon={
        <span
          className="icon-bookmark-outline MenuItem__compass-icon"
        />
      }
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="S"
        />
      }
      show={true}
      text="Save"
    />
    <MenuItemAction
      icon={
        <span
          className="icon-pin MenuItem__compass-icon"
        />
      }
      id="unpin_post_post_id_1"
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="P"
        />
      }
      show={false}
      text="Unpin"
    />
    <MenuItemAction
      icon={
        <span
          className="icon-pin-outline MenuItem__compass-icon"
        />
      }
      id="pin_post_post_id_1"
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="P"
        />
      }
      show={true}
      text="Pin"
    />
    <MenuItemAction
      icon={
        <span
          className="icon-link-variant MenuItem__compass-icon"
        />
      }
      id="permalink_post_id_1"
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="K"
        />
      }
      show={true}
      text="Copy Link"
    />
    <li
      className="MenuItem__divider"
      id="divider_post_post_id_1_edit"
      role="menuitem"
    />
    <MenuItemAction
      icon={
        <span
          className="icon-pencil-outline MenuItem__compass-icon"
        />
      }
      id="edit_post_post_id_1"
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="E"
        />
      }
      show={false}
      text="Edit"
    />
    <MenuItemAction
      icon={
        <span
          className="icon-content-copy MenuItem__compass-icon"
        />
      }
      id="copy_post_id_1"
      onClick={[Function]}
      rightDecorator={
        <ShortcutKey
          shortcutKey="C"
        />
      }
      show={true}
      text="Copy Text"
    />
    <MenuItemAction
      icon={
        <span
          className="icon-trash-can-outline MenuItem__compass-icon-dangerous"
        />
      }
      id="delete_post_post_id_1"
      isDangerous={true}
      onClick={[Function]}
      rightDecorator={
        <span
          className="MenuItem__opacity"
        >
          delete
        </span>
      }
      show={false}
      text="Delete"
    />
  </Menu>
</MenuWrapper>
`;
