// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/AnnouncementBar should match snapshot, "Don't ask again" button 1`] = `
<div
  className="announcement-bar announcement-bar-critical"
  style={
    Object {
      "backgroundColor": "",
      "color": "",
    }
  }
>
  <OverlayTrigger
    defaultOverlayShown={false}
    delayShow={400}
    overlay={
      <Tooltip
        bsClass="tooltip"
        id="announcement-bar__tooltip"
        placement="right"
      >
        <injectIntl(FormattedMarkdownMessage)
          id="text"
        />
      </Tooltip>
    }
    placement="bottom"
    trigger={
      Array [
        "hover",
        "focus",
      ]
    }
  >
    <div
      className="announcement-bar__text"
    >
      <injectIntl(FormattedMarkdownMessage)
        id="text"
      />
      <span
        className="announcement-bar__link"
      />
    </div>
  </OverlayTrigger>
  <div
    className="announcement-bar__overlay"
  >
    <button
      className="announcement-bar__btn announcement-bar__btn--tertiary announcement-bar__dont-ask-again"
      type="button"
    >
      <MemoizedFormattedMessage
        defaultMessage="Don't ask again"
        id="announcement_bar.dont_ask_again_button_text"
      />
    </button>
  </div>
</div>
`;

exports[`components/AnnouncementBar should match snapshot, bar not showing 1`] = `
<div
  className="announcement-bar announcement-bar-critical"
  style={
    Object {
      "backgroundColor": "",
      "color": "",
    }
  }
>
  <OverlayTrigger
    defaultOverlayShown={false}
    delayShow={400}
    overlay={
      <Tooltip
        bsClass="tooltip"
        id="announcement-bar__tooltip"
        placement="right"
      >
        <injectIntl(FormattedMarkdownMessage)
          id="text"
        />
      </Tooltip>
    }
    placement="bottom"
    trigger={
      Array [
        "hover",
        "focus",
      ]
    }
  >
    <div
      className="announcement-bar__text"
    >
      <injectIntl(FormattedMarkdownMessage)
        id="text"
      />
      <span
        className="announcement-bar__link"
      />
    </div>
  </OverlayTrigger>
  <div
    className="announcement-bar__overlay"
  />
</div>
`;

exports[`components/AnnouncementBar should match snapshot, bar showing 1`] = `
<div
  className="announcement-bar announcement-bar-critical"
  style={
    Object {
      "backgroundColor": "",
      "color": "",
    }
  }
>
  <OverlayTrigger
    defaultOverlayShown={false}
    delayShow={400}
    overlay={
      <Tooltip
        bsClass="tooltip"
        id="announcement-bar__tooltip"
        placement="right"
      >
        <injectIntl(FormattedMarkdownMessage)
          id="text"
        />
      </Tooltip>
    }
    placement="bottom"
    trigger={
      Array [
        "hover",
        "focus",
      ]
    }
  >
    <div
      className="announcement-bar__text"
    >
      <injectIntl(FormattedMarkdownMessage)
        id="text"
      />
      <span
        className="announcement-bar__link"
      />
    </div>
  </OverlayTrigger>
  <div
    className="announcement-bar__overlay"
  />
</div>
`;

exports[`components/AnnouncementBar should match snapshot, bar showing, no dismissal 1`] = `
<div
  className="announcement-bar announcement-bar-critical"
  style={
    Object {
      "backgroundColor": "",
      "color": "",
    }
  }
>
  <OverlayTrigger
    defaultOverlayShown={false}
    delayShow={400}
    overlay={
      <Tooltip
        bsClass="tooltip"
        id="announcement-bar__tooltip"
        placement="right"
      >
        <injectIntl(FormattedMarkdownMessage)
          id="text"
        />
      </Tooltip>
    }
    placement="bottom"
    trigger={
      Array [
        "hover",
        "focus",
      ]
    }
  >
    <div
      className="announcement-bar__text"
    >
      <injectIntl(FormattedMarkdownMessage)
        id="text"
      />
      <span
        className="announcement-bar__link"
      />
    </div>
  </OverlayTrigger>
  <div
    className="announcement-bar__overlay"
  />
</div>
`;

exports[`components/AnnouncementBar should match snapshot, dismissal 1`] = `
<div
  className="announcement-bar announcement-bar-critical"
  style={
    Object {
      "backgroundColor": "",
      "color": "",
    }
  }
>
  <OverlayTrigger
    defaultOverlayShown={false}
    delayShow={400}
    overlay={
      <Tooltip
        bsClass="tooltip"
        id="announcement-bar__tooltip"
        placement="right"
      >
        <injectIntl(FormattedMarkdownMessage)
          id="text"
        />
      </Tooltip>
    }
    placement="bottom"
    trigger={
      Array [
        "hover",
        "focus",
      ]
    }
  >
    <div
      className="announcement-bar__text"
    >
      <injectIntl(FormattedMarkdownMessage)
        id="text"
      />
      <span
        className="announcement-bar__link"
      />
    </div>
  </OverlayTrigger>
  <div
    className="announcement-bar__overlay"
  />
</div>
`;

exports[`components/AnnouncementBar should match snapshot, dismissal 2`] = `
<div
  className="announcement-bar announcement-bar-critical"
  style={
    Object {
      "backgroundColor": "",
      "color": "",
    }
  }
>
  <OverlayTrigger
    defaultOverlayShown={false}
    delayShow={400}
    overlay={
      <Tooltip
        bsClass="tooltip"
        id="announcement-bar__tooltip"
        placement="right"
      >
        <injectIntl(FormattedMarkdownMessage)
          id="text"
        />
      </Tooltip>
    }
    placement="bottom"
    trigger={
      Array [
        "hover",
        "focus",
      ]
    }
  >
    <div
      className="announcement-bar__text"
    >
      <injectIntl(FormattedMarkdownMessage)
        id="text"
      />
      <span
        className="announcement-bar__link"
      />
    </div>
  </OverlayTrigger>
  <div
    className="announcement-bar__overlay"
  />
</div>
`;

exports[`components/AnnouncementBar should match snapshot, dismissal 3`] = `
<div
  className="announcement-bar announcement-bar-critical"
  style={
    Object {
      "backgroundColor": "",
      "color": "",
    }
  }
>
  <OverlayTrigger
    defaultOverlayShown={false}
    delayShow={400}
    overlay={
      <Tooltip
        bsClass="tooltip"
        id="announcement-bar__tooltip"
        placement="right"
      >
        <injectIntl(FormattedMarkdownMessage)
          id="text"
        />
      </Tooltip>
    }
    placement="bottom"
    trigger={
      Array [
        "hover",
        "focus",
      ]
    }
  >
    <div
      className="announcement-bar__text"
    >
      <injectIntl(FormattedMarkdownMessage)
        id="text"
      />
      <span
        className="announcement-bar__link"
      />
    </div>
  </OverlayTrigger>
  <div
    className="announcement-bar__overlay"
  />
</div>
`;

exports[`components/AnnouncementBar should match snapshot, props change 1`] = `
<div
  className="announcement-bar announcement-bar-critical"
  style={
    Object {
      "backgroundColor": "",
      "color": "",
    }
  }
>
  <OverlayTrigger
    defaultOverlayShown={false}
    delayShow={400}
    overlay={
      <Tooltip
        bsClass="tooltip"
        id="announcement-bar__tooltip"
        placement="right"
      >
        <injectIntl(FormattedMarkdownMessage)
          id="text"
        />
      </Tooltip>
    }
    placement="bottom"
    trigger={
      Array [
        "hover",
        "focus",
      ]
    }
  >
    <div
      className="announcement-bar__text"
    >
      <injectIntl(FormattedMarkdownMessage)
        id="text"
      />
      <span
        className="announcement-bar__link"
      />
    </div>
  </OverlayTrigger>
  <div
    className="announcement-bar__overlay"
  />
</div>
`;

exports[`components/AnnouncementBar should match snapshot, props change 2`] = `
<div
  className="announcement-bar announcement-bar-critical"
  style={
    Object {
      "backgroundColor": "",
      "color": "",
    }
  }
>
  <OverlayTrigger
    defaultOverlayShown={false}
    delayShow={400}
    overlay={
      <Tooltip
        bsClass="tooltip"
        id="announcement-bar__tooltip"
        placement="right"
      >
        <injectIntl(FormattedMarkdownMessage)
          id="text"
        />
      </Tooltip>
    }
    placement="bottom"
    trigger={
      Array [
        "hover",
        "focus",
      ]
    }
  >
    <div
      className="announcement-bar__text"
    >
      <injectIntl(FormattedMarkdownMessage)
        id="text"
      />
      <span
        className="announcement-bar__link"
      />
    </div>
  </OverlayTrigger>
  <div
    className="announcement-bar__overlay"
  />
</div>
`;

exports[`components/AnnouncementBar should match snapshot, props change 3`] = `
<div
  className="announcement-bar announcement-bar-critical"
  style={
    Object {
      "backgroundColor": "",
      "color": "",
    }
  }
>
  <OverlayTrigger
    defaultOverlayShown={false}
    delayShow={400}
    overlay={
      <Tooltip
        bsClass="tooltip"
        id="announcement-bar__tooltip"
        placement="right"
      >
        <injectIntl(FormattedMarkdownMessage)
          id="text"
        />
      </Tooltip>
    }
    placement="bottom"
    trigger={
      Array [
        "hover",
        "focus",
      ]
    }
  >
    <div
      className="announcement-bar__text"
    >
      <injectIntl(FormattedMarkdownMessage)
        id="text"
      />
      <span
        className="announcement-bar__link"
      />
    </div>
  </OverlayTrigger>
  <div
    className="announcement-bar__overlay"
  />
</div>
`;

exports[`components/AnnouncementBar should match snapshot, props change 4`] = `
<div
  className="announcement-bar announcement-bar-critical"
  style={
    Object {
      "backgroundColor": "",
      "color": "",
    }
  }
>
  <OverlayTrigger
    defaultOverlayShown={false}
    delayShow={400}
    overlay={
      <Tooltip
        bsClass="tooltip"
        id="announcement-bar__tooltip"
        placement="right"
      >
        <injectIntl(FormattedMarkdownMessage)
          id="text"
        />
      </Tooltip>
    }
    placement="bottom"
    trigger={
      Array [
        "hover",
        "focus",
      ]
    }
  >
    <div
      className="announcement-bar__text"
    >
      <injectIntl(FormattedMarkdownMessage)
        id="text"
      />
      <span
        className="announcement-bar__link"
      />
    </div>
  </OverlayTrigger>
  <div
    className="announcement-bar__overlay"
  />
</div>
`;
