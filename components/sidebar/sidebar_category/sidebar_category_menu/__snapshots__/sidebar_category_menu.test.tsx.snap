// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/sidebar/sidebar_category/sidebar_category_menu should match snapshot and contain correct buttons 1`] = `
<div
  className="SidebarMenu MenuWrapper"
>
  <Menu
    menu={
      Object {
        "aria-label": "Edit category menu",
        "id": "SidebarChannelMenu-MenuList-test_category_id",
        "onToggle": [Function],
      }
    }
    menuButton={
      Object {
        "aria-label": "Category options",
        "children": <DotsVerticalIcon
          size={16}
        />,
        "class": "SidebarMenu_menuButton",
        "id": "SidebarCategoryMenu-Button-test_category_id",
      }
    }
    menuButtonTooltip={
      Object {
        "class": "hidden-xs",
        "id": "SidebarCategoryMenu-ButtonTooltip-test_category_id",
        "text": "Category options",
      }
    }
  >
    <MenuItem
      id="mute-test_category_id"
      labels={
        <Memo(MemoizedFormattedMessage)
          defaultMessage="Mute Category"
          id="sidebar_left.sidebar_category_menu.muteCategory"
        />
      }
      leadingElement={
        <BellOutlineIcon
          size={18}
        />
      }
      onClick={[Function]}
    />
    <MenuItem
      aria-haspopup={true}
      id="rename-test_category_id"
      labels={
        <Memo(MemoizedFormattedMessage)
          defaultMessage="Rename Category"
          id="sidebar_left.sidebar_category_menu.renameCategory"
        />
      }
      leadingElement={
        <PencilOutlineIcon
          size={18}
        />
      }
      onClick={[Function]}
    />
    <MenuItem
      aria-haspopup={true}
      id="delete-test_category_id"
      isDestructive={true}
      labels={
        <Memo(MemoizedFormattedMessage)
          defaultMessage="Delete Category"
          id="sidebar_left.sidebar_category_menu.deleteCategory"
        />
      }
      leadingElement={
        <TrashCanOutlineIcon
          size={18}
        />
      }
      onClick={[Function]}
    />
    <MenuItemSeparator />
    <SubMenu
      id="sortChannels-test_category_id"
      labels={
        <Memo(MemoizedFormattedMessage)
          defaultMessage="Sort"
          id="sidebar.sort"
        />
      }
      leadingElement={
        <SortAlphabeticalAscendingIcon
          size={18}
        />
      }
      menuAriaLabel="Sort submenu"
      menuId="sortChannels-test_category_id-menu"
      trailingElements={
        <React.Fragment>
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Alphabetically"
            id="user.settings.sidebar.sortAlpha"
          />
          <ChevronRightIcon
            size={16}
          />
        </React.Fragment>
      }
    >
      <MenuItem
        id="sortAplhabetical-test_category_id"
        labels={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Alphabetically"
            id="user.settings.sidebar.sortAlpha"
          />
        }
        onClick={[Function]}
      />
      <MenuItem
        id="sortByMostRecent-test_category_id"
        labels={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Recent Activity"
            id="sidebar.sortedByRecencyLabel"
          />
        }
        onClick={[Function]}
      />
      <MenuItem
        id="sortManual-test_category_id"
        labels={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Manually"
            id="sidebar.sortedManually"
          />
        }
        onClick={[Function]}
      />
    </SubMenu>
    <MenuItemSeparator />
    <MenuItem
      aria-haspopup={true}
      id="create-test_category_id"
      labels={
        <Memo(MemoizedFormattedMessage)
          defaultMessage="Create New Category"
          id="sidebar_left.sidebar_category_menu.createCategory"
        />
      }
      leadingElement={
        <FolderPlusOutlineIcon
          size={18}
        />
      }
      onClick={[Function]}
    />
  </Menu>
</div>
`;
