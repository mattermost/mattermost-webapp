// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/sidebar/sidebar_channel/sidebar_channel_link should match snapshot 1`] = `
<Link
  aria-label="channel_label"
  className="SidebarLink"
  id="sidebarItem_"
  onClick={[Function]}
  tabIndex={0}
  to="http://a.fake.link"
>
  <Connect(SidebarChannelIcon)
    channel={
      Object {
        "create_at": 0,
        "creator_id": "",
        "delete_at": 0,
        "display_name": "channel_display_name",
        "group_constrained": false,
        "header": "",
        "id": "channel_id",
        "last_post_at": 0,
        "last_root_post_at": 0,
        "name": "",
        "purpose": "",
        "scheme_id": "",
        "team_id": "",
        "type": "O",
        "update_at": 0,
      }
    }
    icon={null}
  />
  <div
    className="SidebarChannelLinkLabel_wrapper"
  >
    <span
      className="SidebarChannelLinkLabel"
    >
      channel_label
    </span>
    <Connect(Pluggable)
      channel={
        Object {
          "create_at": 0,
          "creator_id": "",
          "delete_at": 0,
          "display_name": "channel_display_name",
          "group_constrained": false,
          "header": "",
          "id": "channel_id",
          "last_post_at": 0,
          "last_root_post_at": 0,
          "name": "",
          "purpose": "",
          "scheme_id": "",
          "team_id": "",
          "type": "O",
          "update_at": 0,
        }
      }
      pluggableName="SidebarChannelLinkLabel"
    />
  </div>
  <ChannelMentionBadge
    unreadMentions={0}
  />
  <Connect(injectIntl(SidebarChannelMenu))
    channel={
      Object {
        "create_at": 0,
        "creator_id": "",
        "delete_at": 0,
        "display_name": "channel_display_name",
        "group_constrained": false,
        "header": "",
        "id": "channel_id",
        "last_post_at": 0,
        "last_root_post_at": 0,
        "name": "",
        "purpose": "",
        "scheme_id": "",
        "team_id": "",
        "type": "O",
        "update_at": 0,
      }
    }
    channelLink="http://a.fake.link"
    isCollapsed={false}
    isMenuOpen={false}
    isUnread={false}
    onToggleMenu={[Function]}
  />
</Link>
`;

exports[`components/sidebar/sidebar_channel/sidebar_channel_link should match snapshot for desktop 1`] = `
<Link
  aria-label="channel_label"
  className="SidebarLink"
  id="sidebarItem_"
  onClick={[Function]}
  tabIndex={0}
  to="http://a.fake.link"
>
  <Connect(SidebarChannelIcon)
    channel={
      Object {
        "create_at": 0,
        "creator_id": "",
        "delete_at": 0,
        "display_name": "channel_display_name",
        "group_constrained": false,
        "header": "",
        "id": "channel_id",
        "last_post_at": 0,
        "last_root_post_at": 0,
        "name": "",
        "purpose": "",
        "scheme_id": "",
        "team_id": "",
        "type": "O",
        "update_at": 0,
      }
    }
    icon={null}
  />
  <div
    className="SidebarChannelLinkLabel_wrapper"
  >
    <span
      className="SidebarChannelLinkLabel"
    >
      channel_label
    </span>
    <Connect(Pluggable)
      channel={
        Object {
          "create_at": 0,
          "creator_id": "",
          "delete_at": 0,
          "display_name": "channel_display_name",
          "group_constrained": false,
          "header": "",
          "id": "channel_id",
          "last_post_at": 0,
          "last_root_post_at": 0,
          "name": "",
          "purpose": "",
          "scheme_id": "",
          "team_id": "",
          "type": "O",
          "update_at": 0,
        }
      }
      pluggableName="SidebarChannelLinkLabel"
    />
  </div>
  <ChannelMentionBadge
    unreadMentions={0}
  />
  <Connect(injectIntl(SidebarChannelMenu))
    channel={
      Object {
        "create_at": 0,
        "creator_id": "",
        "delete_at": 0,
        "display_name": "channel_display_name",
        "group_constrained": false,
        "header": "",
        "id": "channel_id",
        "last_post_at": 0,
        "last_root_post_at": 0,
        "name": "",
        "purpose": "",
        "scheme_id": "",
        "team_id": "",
        "type": "O",
        "update_at": 0,
      }
    }
    channelLink="http://a.fake.link"
    isCollapsed={false}
    isMenuOpen={false}
    isUnread={false}
    onToggleMenu={[Function]}
  />
</Link>
`;

exports[`components/sidebar/sidebar_channel/sidebar_channel_link should match snapshot when tooltip is enabled 1`] = `
<Link
  aria-label="channel_label"
  className="SidebarLink"
  id="sidebarItem_"
  onClick={[Function]}
  tabIndex={0}
  to="http://a.fake.link"
>
  <Connect(SidebarChannelIcon)
    channel={
      Object {
        "create_at": 0,
        "creator_id": "",
        "delete_at": 0,
        "display_name": "channel_display_name",
        "group_constrained": false,
        "header": "",
        "id": "channel_id",
        "last_post_at": 0,
        "last_root_post_at": 0,
        "name": "",
        "purpose": "",
        "scheme_id": "",
        "team_id": "",
        "type": "O",
        "update_at": 0,
      }
    }
    icon={null}
  />
  <div
    className="SidebarChannelLinkLabel_wrapper"
  >
    <OverlayTrigger
      defaultOverlayShown={false}
      delayShow={400}
      onEntering={[Function]}
      overlay={
        <Tooltip
          bsClass="tooltip"
          id="channel-displayname__tooltip"
          placement="right"
        >
          channel_label
        </Tooltip>
      }
      placement="top"
      trigger={
        Array [
          "hover",
          "focus",
        ]
      }
    >
      <div>
        <span
          className="SidebarChannelLinkLabel truncated"
        >
          channel_label
        </span>
      </div>
    </OverlayTrigger>
    <Connect(Pluggable)
      channel={
        Object {
          "create_at": 0,
          "creator_id": "",
          "delete_at": 0,
          "display_name": "channel_display_name",
          "group_constrained": false,
          "header": "",
          "id": "channel_id",
          "last_post_at": 0,
          "last_root_post_at": 0,
          "name": "",
          "purpose": "",
          "scheme_id": "",
          "team_id": "",
          "type": "O",
          "update_at": 0,
        }
      }
      pluggableName="SidebarChannelLinkLabel"
    />
  </div>
  <ChannelMentionBadge
    unreadMentions={0}
  />
  <Connect(injectIntl(SidebarChannelMenu))
    channel={
      Object {
        "create_at": 0,
        "creator_id": "",
        "delete_at": 0,
        "display_name": "channel_display_name",
        "group_constrained": false,
        "header": "",
        "id": "channel_id",
        "last_post_at": 0,
        "last_root_post_at": 0,
        "name": "",
        "purpose": "",
        "scheme_id": "",
        "team_id": "",
        "type": "O",
        "update_at": 0,
      }
    }
    channelLink="http://a.fake.link"
    isCollapsed={false}
    isMenuOpen={false}
    isUnread={false}
    onToggleMenu={[Function]}
  />
</Link>
`;

exports[`components/sidebar/sidebar_channel/sidebar_channel_link should match snapshot with aria label prefix and unread mentions 1`] = `
<Link
  aria-label="channel_label aria_label_prefix_ 2 mentions"
  className="SidebarLink unread-title"
  id="sidebarItem_"
  onClick={[Function]}
  tabIndex={0}
  to="http://a.fake.link"
>
  <Connect(SidebarChannelIcon)
    channel={
      Object {
        "create_at": 0,
        "creator_id": "",
        "delete_at": 0,
        "display_name": "channel_display_name",
        "group_constrained": false,
        "header": "",
        "id": "channel_id",
        "last_post_at": 0,
        "last_root_post_at": 0,
        "name": "",
        "purpose": "",
        "scheme_id": "",
        "team_id": "",
        "type": "O",
        "update_at": 0,
      }
    }
    icon={null}
  />
  <div
    className="SidebarChannelLinkLabel_wrapper"
  >
    <span
      className="SidebarChannelLinkLabel"
    >
      channel_label
    </span>
    <Connect(Pluggable)
      channel={
        Object {
          "create_at": 0,
          "creator_id": "",
          "delete_at": 0,
          "display_name": "channel_display_name",
          "group_constrained": false,
          "header": "",
          "id": "channel_id",
          "last_post_at": 0,
          "last_root_post_at": 0,
          "name": "",
          "purpose": "",
          "scheme_id": "",
          "team_id": "",
          "type": "O",
          "update_at": 0,
        }
      }
      pluggableName="SidebarChannelLinkLabel"
    />
  </div>
  <ChannelMentionBadge
    unreadMentions={2}
  />
  <Connect(injectIntl(SidebarChannelMenu))
    channel={
      Object {
        "create_at": 0,
        "creator_id": "",
        "delete_at": 0,
        "display_name": "channel_display_name",
        "group_constrained": false,
        "header": "",
        "id": "channel_id",
        "last_post_at": 0,
        "last_root_post_at": 0,
        "name": "",
        "purpose": "",
        "scheme_id": "",
        "team_id": "",
        "type": "O",
        "update_at": 0,
      }
    }
    channelLink="http://a.fake.link"
    isCollapsed={false}
    isMenuOpen={false}
    isUnread={true}
    onToggleMenu={[Function]}
  />
</Link>
`;
