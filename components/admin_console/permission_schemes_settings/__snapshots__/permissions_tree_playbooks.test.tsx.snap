// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/admin_console/permission_schemes_settings/permissions_tree_playbooks should match snapshots with enterprise license 1`] = `
<div
  className="permissions-tree"
>
  <div
    className="permissions-tree--header"
  >
    <div
      className="permission-name"
    >
      <MemoizedFormattedMessage
        defaultMessage="Permission"
        id="admin.permissions.permissionsTree.permission"
      />
    </div>
    <div
      className="permission-description"
    >
      <MemoizedFormattedMessage
        defaultMessage="Description"
        id="admin.permissions.permissionsTree.description"
      />
    </div>
  </div>
  <div
    className="permissions-tree--body"
  >
    <PermissionGroup
      combined={false}
      id="all"
      key="all"
      onChange={[Function]}
      parentRole={Object {}}
      permissions={
        Array [
          Object {
            "id": "playbook_public",
            "permissions": Array [
              "playbook_public_manage_properties",
              "playbook_public_manage_members",
              "playbook_public_make_private",
            ],
          },
          Object {
            "id": "playbook_private",
            "permissions": Array [
              "playbook_private_manage_properties",
              "playbook_private_manage_members",
              "playbook_private_make_public",
            ],
          },
          Object {
            "id": "runs",
            "permissions": Array [
              "run_create",
            ],
          },
        ]
      }
      readOnly={false}
      role={
        Object {
          "name": "role",
        }
      }
      root={true}
      scope="scope"
      selectRow={[Function]}
      uniqId="role"
    />
  </div>
</div>
`;

exports[`components/admin_console/permission_schemes_settings/permissions_tree_playbooks should match snapshots with professional license 1`] = `
<div
  className="permissions-tree"
>
  <div
    className="permissions-tree--header"
  >
    <div
      className="permission-name"
    >
      <MemoizedFormattedMessage
        defaultMessage="Permission"
        id="admin.permissions.permissionsTree.permission"
      />
    </div>
    <div
      className="permission-description"
    >
      <MemoizedFormattedMessage
        defaultMessage="Description"
        id="admin.permissions.permissionsTree.description"
      />
    </div>
  </div>
  <div
    className="permissions-tree--body"
  >
    <PermissionGroup
      combined={false}
      id="all"
      key="all"
      onChange={[Function]}
      parentRole={Object {}}
      permissions={
        Array [
          Object {
            "id": "playbook_public",
            "permissions": Array [
              "playbook_public_manage_properties",
              "playbook_public_manage_members",
            ],
          },
          Object {
            "id": "runs",
            "permissions": Array [
              "run_create",
            ],
          },
        ]
      }
      readOnly={false}
      role={
        Object {
          "name": "role",
        }
      }
      root={true}
      scope="scope"
      selectRow={[Function]}
      uniqId="role"
    />
  </div>
</div>
`;

exports[`components/admin_console/permission_schemes_settings/permissions_tree_playbooks should match snapshots with starter license 1`] = `
<div
  className="permissions-tree"
>
  <div
    className="permissions-tree--header"
  >
    <div
      className="permission-name"
    >
      <MemoizedFormattedMessage
        defaultMessage="Permission"
        id="admin.permissions.permissionsTree.permission"
      />
    </div>
    <div
      className="permission-description"
    >
      <MemoizedFormattedMessage
        defaultMessage="Description"
        id="admin.permissions.permissionsTree.description"
      />
    </div>
  </div>
  <div
    className="permissions-tree--body"
  >
    <PermissionGroup
      combined={false}
      id="all"
      key="all"
      onChange={[Function]}
      parentRole={Object {}}
      permissions={
        Array [
          Object {
            "id": "playbook_public",
            "permissions": Array [
              "playbook_public_manage_properties",
              "playbook_public_manage_members",
            ],
          },
          Object {
            "id": "runs",
            "permissions": Array [
              "run_create",
            ],
          },
        ]
      }
      readOnly={false}
      role={
        Object {
          "name": "role",
        }
      }
      root={true}
      scope="scope"
      selectRow={[Function]}
      uniqId="role"
    />
  </div>
</div>
`;

exports[`components/admin_console/permission_schemes_settings/permissions_tree_playbooks should match snapshots without license 1`] = `
<div
  className="permissions-tree"
>
  <div
    className="permissions-tree--header"
  >
    <div
      className="permission-name"
    >
      <MemoizedFormattedMessage
        defaultMessage="Permission"
        id="admin.permissions.permissionsTree.permission"
      />
    </div>
    <div
      className="permission-description"
    >
      <MemoizedFormattedMessage
        defaultMessage="Description"
        id="admin.permissions.permissionsTree.description"
      />
    </div>
  </div>
  <div
    className="permissions-tree--body"
  >
    <PermissionGroup
      combined={false}
      id="all"
      key="all"
      onChange={[Function]}
      parentRole={Object {}}
      permissions={
        Array [
          Object {
            "id": "playbook_public",
            "permissions": Array [
              "playbook_public_manage_properties",
              "playbook_public_manage_members",
            ],
          },
          Object {
            "id": "runs",
            "permissions": Array [
              "run_create",
            ],
          },
        ]
      }
      readOnly={false}
      role={
        Object {
          "name": "role",
        }
      }
      root={true}
      scope="scope"
      selectRow={[Function]}
      uniqId="role"
    />
  </div>
</div>
`;
