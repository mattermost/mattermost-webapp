// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/admin_console/permission_schemes_settings/permission_system_scheme_settings/permission_system_scheme_settings should match snapshot on roles with permissions 1`] = `
<div
  className="wrapper--fixed"
>
  <div
    className="admin-console__header with-back"
  >
    <div>
      <Connect(BlockableLink)
        className="fa fa-angle-left back"
        to="/admin_console/user_management/permissions"
      />
      <FormattedMessage
        defaultMessage="System Scheme"
        id="admin.permissions.systemScheme"
        values={Object {}}
      />
    </div>
  </div>
  <div
    className="admin-console__wrapper"
  >
    <div
      className="admin-console__content"
    >
      <div
        className="banner info"
      >
        <div
          className="banner__content"
        >
          <span>
            <InjectIntl(FormattedMarkdownMessage)
              defaultMessage="Configure the default permissions for Team Admins, Channel Admins and other members. This scheme is inherited by all teams unless a [Team Override Scheme](!https://about.mattermost.com/default-team-override-scheme) is applied in specific teams."
              id="admin.permissions.systemScheme.introBanner"
            />
          </span>
        </div>
      </div>
      <AdminPanelTogglable
        className="permissions-block"
        id="all_users"
        onToggle={[Function]}
        open={true}
        subtitleDefault="Permissions granted to guest users."
        subtitleId="admin.permissions.systemScheme.GuestsDescription"
        titleDefault="Guests"
        titleId="admin.permissions.systemScheme.GuestsTitle"
      >
        <Connect(GuestPermissionsTree)
          onToggle={[Function]}
          readOnly={false}
          role={
            Object {
              "displayName": "Guests",
              "name": "guests",
              "permissions": Array [
                "create_post",
                "invite_user",
                "add_reaction",
              ],
            }
          }
          scope="system_scope"
          selectRow={[Function]}
          selected={null}
        />
      </AdminPanelTogglable>
      <AdminPanelTogglable
        className="permissions-block"
        id="all_users"
        onToggle={[Function]}
        open={true}
        subtitleDefault="Permissions granted to all members, including administrators and newly created users."
        subtitleId="admin.permissions.systemScheme.allMembersDescription"
        titleDefault="All Members"
        titleId="admin.permissions.systemScheme.allMembersTitle"
      >
        <Connect(PermissionsTree)
          onToggle={[Function]}
          role={
            Object {
              "displayName": "All members",
              "name": "all_users",
              "permissions": Array [
                "create_post",
                "invite_user",
                "add_reaction",
              ],
            }
          }
          scope="system_scope"
          selectRow={[Function]}
          selected={null}
        />
      </AdminPanelTogglable>
      <AdminPanelTogglable
        className="permissions-block"
        onToggle={[Function]}
        open={true}
        subtitleDefault="Permissions granted to channel creators and any users promoted to Channel Administrator."
        subtitleId="admin.permissions.systemScheme.channelAdminsDescription"
        titleDefault="Channel Administrators"
        titleId="admin.permissions.systemScheme.channelAdminsTitle"
      >
        <Connect(PermissionsTree)
          onToggle={[Function]}
          parentRole={
            Object {
              "displayName": "All members",
              "name": "all_users",
              "permissions": Array [
                "create_post",
                "invite_user",
                "add_reaction",
              ],
            }
          }
          role={
            Object {
              "permissions": Array [
                "delete_post",
              ],
            }
          }
          scope="channel_scope"
          selectRow={[Function]}
        />
      </AdminPanelTogglable>
      <AdminPanelTogglable
        className="permissions-block"
        onToggle={[Function]}
        open={true}
        subtitleDefault="Permissions granted to team creators and any users promoted to Team Administrator."
        subtitleId="admin.permissions.systemScheme.teamAdminsDescription"
        titleDefault="Team Administrators"
        titleId="admin.permissions.systemScheme.teamAdminsTitle"
      >
        <Connect(PermissionsTree)
          onToggle={[Function]}
          parentRole={
            Object {
              "displayName": "All members",
              "name": "all_users",
              "permissions": Array [
                "create_post",
                "invite_user",
                "add_reaction",
              ],
            }
          }
          role={
            Object {
              "permissions": Array [
                "add_user_to_team",
              ],
            }
          }
          scope="team_scope"
          selectRow={[Function]}
        />
      </AdminPanelTogglable>
      <AdminPanelTogglable
        className="permissions-block"
        onToggle={[Function]}
        open={true}
        subtitleDefault="Full permissions granted to System Administrators."
        subtitleId="admin.permissions.systemScheme.systemAdminsDescription"
        titleDefault="System Administrators"
        titleId="admin.permissions.systemScheme.systemAdminsTitle"
      >
        <Connect(PermissionsTree)
          onToggle={[Function]}
          readOnly={true}
          role={
            Object {
              "permissions": Array [
                "manage_system",
              ],
            }
          }
          scope="system_scope"
          selectRow={[Function]}
        />
      </AdminPanelTogglable>
    </div>
  </div>
  <div
    className="admin-console-save"
  >
    <SaveButton
      btnClass="btn-primary"
      defaultMessage={
        <FormattedMessage
          defaultMessage="Save"
          id="save_button.save"
          values={Object {}}
        />
      }
      disabled={true}
      extraClasses=""
      onClick={[Function]}
      saving={false}
      savingMessage="Saving Config..."
    />
    <Connect(BlockableLink)
      className="cancel-button"
      to="/admin_console/user_management/permissions"
    >
      <FormattedMessage
        defaultMessage="Cancel"
        id="admin.permissions.permissionSchemes.cancel"
        values={Object {}}
      />
    </Connect(BlockableLink)>
    <a
      className="cancel-button reset-defaults-btn"
      onClick={[Function]}
    >
      <FormattedMessage
        defaultMessage="Reset to Defaults"
        id="admin.permissions.systemScheme.resetDefaultsButton"
        values={Object {}}
      />
    </a>
    <div
      className="error-message"
    >
      <FormError
        error={null}
        errors={Array []}
      />
    </div>
  </div>
  <ConfirmModal
    confirmButtonClass="btn btn-primary"
    confirmButtonText={
      <FormattedMessage
        defaultMessage="Yes, Reset"
        id="admin.permissions.systemScheme.resetDefaultsConfirmationButton"
        values={Object {}}
      />
    }
    message={
      <FormattedMessage
        defaultMessage="This will reset all selections on this page to their default settings. Are you sure you want to reset?"
        id="admin.permissions.systemScheme.resetDefaultsButtonModalBody"
        values={Object {}}
      />
    }
    modalClass=""
    onCancel={[Function]}
    onConfirm={[Function]}
    show={false}
    title={
      <FormattedMessage
        defaultMessage="Reset to Default?"
        id="admin.permissions.systemScheme.resetDefaultsButtonModalTitle"
        values={Object {}}
      />
    }
  />
</div>
`;

exports[`components/admin_console/permission_schemes_settings/permission_system_scheme_settings/permission_system_scheme_settings should match snapshot on roles with permissions 2`] = `
Object {
  "loaded": true,
  "openRoles": Object {
    "all_users": true,
    "channel_admin": true,
    "guests": true,
    "system_admin": true,
    "team_admin": true,
  },
  "roles": Object {
    "all_users": Object {
      "displayName": "All members",
      "name": "all_users",
      "permissions": Array [
        "create_post",
        "invite_user",
        "add_reaction",
      ],
    },
    "channel_admin": Object {
      "permissions": Array [
        "delete_post",
      ],
    },
    "guests": Object {
      "displayName": "Guests",
      "name": "guests",
      "permissions": Array [
        "create_post",
        "invite_user",
        "add_reaction",
      ],
    },
    "system_admin": Object {
      "permissions": Array [
        "manage_system",
      ],
    },
    "team_admin": Object {
      "permissions": Array [
        "add_user_to_team",
      ],
    },
  },
  "saveNeeded": false,
  "saving": false,
  "selectedPermission": null,
  "serverError": null,
  "showResetDefaultModal": false,
}
`;

exports[`components/admin_console/permission_schemes_settings/permission_system_scheme_settings/permission_system_scheme_settings should match snapshot on roles without permissions 1`] = `
Object {
  "loaded": true,
  "openRoles": Object {
    "all_users": true,
    "channel_admin": true,
    "guests": true,
    "system_admin": true,
    "team_admin": true,
  },
  "roles": Object {
    "all_users": Object {
      "displayName": "All members",
      "name": "all_users",
      "permissions": Array [],
    },
    "channel_admin": Object {
      "permissions": Array [],
    },
    "guests": Object {
      "displayName": "Guests",
      "name": "guests",
      "permissions": Array [],
    },
    "system_admin": Object {
      "permissions": Array [],
    },
    "team_admin": Object {
      "permissions": Array [],
    },
  },
  "saveNeeded": false,
  "saving": false,
  "selectedPermission": null,
  "serverError": null,
  "showResetDefaultModal": false,
}
`;

exports[`components/admin_console/permission_schemes_settings/permission_system_scheme_settings/permission_system_scheme_settings should match snapshot when the license doesnt have custom schemes 1`] = `
<div
  className="wrapper--fixed"
>
  <div
    className="admin-console__header with-back"
  >
    <div>
      <Connect(BlockableLink)
        className="fa fa-angle-left back"
        to="/admin_console/user_management/permissions"
      />
      <FormattedMessage
        defaultMessage="System Scheme"
        id="admin.permissions.systemScheme"
        values={Object {}}
      />
    </div>
  </div>
  <div
    className="admin-console__wrapper"
  >
    <div
      className="admin-console__content"
    >
      <div
        className="banner info"
      >
        <div
          className="banner__content"
        >
          <span>
            <InjectIntl(FormattedMarkdownMessage)
              defaultMessage="Configure the default permissions for Team Admins, Channel Admins and other members. This scheme is inherited by all teams unless a [Team Override Scheme](!https://about.mattermost.com/default-team-override-scheme) is applied in specific teams."
              id="admin.permissions.systemScheme.introBanner"
            />
          </span>
        </div>
      </div>
      <AdminPanelTogglable
        className="permissions-block"
        id="all_users"
        onToggle={[Function]}
        open={true}
        subtitleDefault="Permissions granted to guest users."
        subtitleId="admin.permissions.systemScheme.GuestsDescription"
        titleDefault="Guests"
        titleId="admin.permissions.systemScheme.GuestsTitle"
      >
        <Connect(GuestPermissionsTree)
          onToggle={[Function]}
          readOnly={true}
          role={
            Object {
              "displayName": "Guests",
              "name": "guests",
              "permissions": Array [],
            }
          }
          scope="system_scope"
          selectRow={[Function]}
          selected={null}
        />
      </AdminPanelTogglable>
      <AdminPanelTogglable
        className="permissions-block"
        id="all_users"
        onToggle={[Function]}
        open={true}
        subtitleDefault="Permissions granted to all members, including administrators and newly created users."
        subtitleId="admin.permissions.systemScheme.allMembersDescription"
        titleDefault="All Members"
        titleId="admin.permissions.systemScheme.allMembersTitle"
      >
        <Connect(PermissionsTree)
          onToggle={[Function]}
          role={
            Object {
              "displayName": "All members",
              "name": "all_users",
              "permissions": Array [],
            }
          }
          scope="system_scope"
          selectRow={[Function]}
          selected={null}
        />
      </AdminPanelTogglable>
      <AdminPanelTogglable
        className="permissions-block"
        onToggle={[Function]}
        open={true}
        subtitleDefault="Permissions granted to channel creators and any users promoted to Channel Administrator."
        subtitleId="admin.permissions.systemScheme.channelAdminsDescription"
        titleDefault="Channel Administrators"
        titleId="admin.permissions.systemScheme.channelAdminsTitle"
      >
        <Connect(PermissionsTree)
          onToggle={[Function]}
          parentRole={
            Object {
              "displayName": "All members",
              "name": "all_users",
              "permissions": Array [],
            }
          }
          role={
            Object {
              "permissions": Array [],
            }
          }
          scope="channel_scope"
          selectRow={[Function]}
        />
      </AdminPanelTogglable>
      <AdminPanelTogglable
        className="permissions-block"
        onToggle={[Function]}
        open={true}
        subtitleDefault="Permissions granted to team creators and any users promoted to Team Administrator."
        subtitleId="admin.permissions.systemScheme.teamAdminsDescription"
        titleDefault="Team Administrators"
        titleId="admin.permissions.systemScheme.teamAdminsTitle"
      >
        <Connect(PermissionsTree)
          onToggle={[Function]}
          parentRole={
            Object {
              "displayName": "All members",
              "name": "all_users",
              "permissions": Array [],
            }
          }
          role={
            Object {
              "permissions": Array [],
            }
          }
          scope="team_scope"
          selectRow={[Function]}
        />
      </AdminPanelTogglable>
      <AdminPanelTogglable
        className="permissions-block"
        onToggle={[Function]}
        open={true}
        subtitleDefault="Full permissions granted to System Administrators."
        subtitleId="admin.permissions.systemScheme.systemAdminsDescription"
        titleDefault="System Administrators"
        titleId="admin.permissions.systemScheme.systemAdminsTitle"
      >
        <Connect(PermissionsTree)
          onToggle={[Function]}
          readOnly={true}
          role={
            Object {
              "permissions": Array [],
            }
          }
          scope="system_scope"
          selectRow={[Function]}
        />
      </AdminPanelTogglable>
    </div>
  </div>
  <div
    className="admin-console-save"
  >
    <SaveButton
      btnClass="btn-primary"
      defaultMessage={
        <FormattedMessage
          defaultMessage="Save"
          id="save_button.save"
          values={Object {}}
        />
      }
      disabled={true}
      extraClasses=""
      onClick={[Function]}
      saving={false}
      savingMessage="Saving Config..."
    />
    <Connect(BlockableLink)
      className="cancel-button"
      to="/admin_console/user_management/permissions"
    >
      <FormattedMessage
        defaultMessage="Cancel"
        id="admin.permissions.permissionSchemes.cancel"
        values={Object {}}
      />
    </Connect(BlockableLink)>
    <a
      className="cancel-button reset-defaults-btn"
      onClick={[Function]}
    >
      <FormattedMessage
        defaultMessage="Reset to Defaults"
        id="admin.permissions.systemScheme.resetDefaultsButton"
        values={Object {}}
      />
    </a>
    <div
      className="error-message"
    >
      <FormError
        error={null}
        errors={Array []}
      />
    </div>
  </div>
  <ConfirmModal
    confirmButtonClass="btn btn-primary"
    confirmButtonText={
      <FormattedMessage
        defaultMessage="Yes, Reset"
        id="admin.permissions.systemScheme.resetDefaultsConfirmationButton"
        values={Object {}}
      />
    }
    message={
      <FormattedMessage
        defaultMessage="This will reset all selections on this page to their default settings. Are you sure you want to reset?"
        id="admin.permissions.systemScheme.resetDefaultsButtonModalBody"
        values={Object {}}
      />
    }
    modalClass=""
    onCancel={[Function]}
    onConfirm={[Function]}
    show={false}
    title={
      <FormattedMessage
        defaultMessage="Reset to Default?"
        id="admin.permissions.systemScheme.resetDefaultsButtonModalTitle"
        values={Object {}}
      />
    }
  />
</div>
`;

exports[`components/admin_console/permission_schemes_settings/permission_system_scheme_settings/permission_system_scheme_settings should save each role on handleSubmit except system_admin role 1`] = `
<div
  className="wrapper--fixed"
>
  <div
    className="admin-console__header with-back"
  >
    <div>
      <Connect(BlockableLink)
        className="fa fa-angle-left back"
        to="/admin_console/user_management/permissions"
      />
      <FormattedMessage
        defaultMessage="System Scheme"
        id="admin.permissions.systemScheme"
        values={Object {}}
      />
    </div>
  </div>
  <div
    className="admin-console__wrapper"
  >
    <div
      className="admin-console__content"
    >
      <div
        className="banner info"
      >
        <div
          className="banner__content"
        >
          <span>
            <InjectIntl(FormattedMarkdownMessage)
              defaultMessage="Configure the default permissions for Team Admins, Channel Admins and other members. This scheme is inherited by all teams unless a [Team Override Scheme](!https://about.mattermost.com/default-team-override-scheme) is applied in specific teams."
              id="admin.permissions.systemScheme.introBanner"
            />
          </span>
        </div>
      </div>
      <AdminPanelTogglable
        className="permissions-block"
        id="all_users"
        onToggle={[Function]}
        open={true}
        subtitleDefault="Permissions granted to guest users."
        subtitleId="admin.permissions.systemScheme.GuestsDescription"
        titleDefault="Guests"
        titleId="admin.permissions.systemScheme.GuestsTitle"
      >
        <Connect(GuestPermissionsTree)
          onToggle={[Function]}
          readOnly={false}
          role={
            Object {
              "displayName": "Guests",
              "name": "guests",
              "permissions": Array [],
            }
          }
          scope="system_scope"
          selectRow={[Function]}
          selected={null}
        />
      </AdminPanelTogglable>
      <AdminPanelTogglable
        className="permissions-block"
        id="all_users"
        onToggle={[Function]}
        open={true}
        subtitleDefault="Permissions granted to all members, including administrators and newly created users."
        subtitleId="admin.permissions.systemScheme.allMembersDescription"
        titleDefault="All Members"
        titleId="admin.permissions.systemScheme.allMembersTitle"
      >
        <Connect(PermissionsTree)
          onToggle={[Function]}
          role={
            Object {
              "displayName": "All members",
              "name": "all_users",
              "permissions": Array [],
            }
          }
          scope="system_scope"
          selectRow={[Function]}
          selected={null}
        />
      </AdminPanelTogglable>
      <AdminPanelTogglable
        className="permissions-block"
        onToggle={[Function]}
        open={true}
        subtitleDefault="Permissions granted to channel creators and any users promoted to Channel Administrator."
        subtitleId="admin.permissions.systemScheme.channelAdminsDescription"
        titleDefault="Channel Administrators"
        titleId="admin.permissions.systemScheme.channelAdminsTitle"
      >
        <Connect(PermissionsTree)
          onToggle={[Function]}
          parentRole={
            Object {
              "displayName": "All members",
              "name": "all_users",
              "permissions": Array [],
            }
          }
          role={
            Object {
              "permissions": Array [],
            }
          }
          scope="channel_scope"
          selectRow={[Function]}
        />
      </AdminPanelTogglable>
      <AdminPanelTogglable
        className="permissions-block"
        onToggle={[Function]}
        open={true}
        subtitleDefault="Permissions granted to team creators and any users promoted to Team Administrator."
        subtitleId="admin.permissions.systemScheme.teamAdminsDescription"
        titleDefault="Team Administrators"
        titleId="admin.permissions.systemScheme.teamAdminsTitle"
      >
        <Connect(PermissionsTree)
          onToggle={[Function]}
          parentRole={
            Object {
              "displayName": "All members",
              "name": "all_users",
              "permissions": Array [],
            }
          }
          role={
            Object {
              "permissions": Array [],
            }
          }
          scope="team_scope"
          selectRow={[Function]}
        />
      </AdminPanelTogglable>
      <AdminPanelTogglable
        className="permissions-block"
        onToggle={[Function]}
        open={true}
        subtitleDefault="Full permissions granted to System Administrators."
        subtitleId="admin.permissions.systemScheme.systemAdminsDescription"
        titleDefault="System Administrators"
        titleId="admin.permissions.systemScheme.systemAdminsTitle"
      >
        <Connect(PermissionsTree)
          onToggle={[Function]}
          readOnly={true}
          role={
            Object {
              "permissions": Array [],
            }
          }
          scope="system_scope"
          selectRow={[Function]}
        />
      </AdminPanelTogglable>
    </div>
  </div>
  <div
    className="admin-console-save"
  >
    <SaveButton
      btnClass="btn-primary"
      defaultMessage={
        <FormattedMessage
          defaultMessage="Save"
          id="save_button.save"
          values={Object {}}
        />
      }
      disabled={true}
      extraClasses=""
      onClick={[Function]}
      saving={false}
      savingMessage="Saving Config..."
    />
    <Connect(BlockableLink)
      className="cancel-button"
      to="/admin_console/user_management/permissions"
    >
      <FormattedMessage
        defaultMessage="Cancel"
        id="admin.permissions.permissionSchemes.cancel"
        values={Object {}}
      />
    </Connect(BlockableLink)>
    <a
      className="cancel-button reset-defaults-btn"
      onClick={[Function]}
    >
      <FormattedMessage
        defaultMessage="Reset to Defaults"
        id="admin.permissions.systemScheme.resetDefaultsButton"
        values={Object {}}
      />
    </a>
    <div
      className="error-message"
    >
      <FormError
        error={null}
        errors={Array []}
      />
    </div>
  </div>
  <ConfirmModal
    confirmButtonClass="btn btn-primary"
    confirmButtonText={
      <FormattedMessage
        defaultMessage="Yes, Reset"
        id="admin.permissions.systemScheme.resetDefaultsConfirmationButton"
        values={Object {}}
      />
    }
    message={
      <FormattedMessage
        defaultMessage="This will reset all selections on this page to their default settings. Are you sure you want to reset?"
        id="admin.permissions.systemScheme.resetDefaultsButtonModalBody"
        values={Object {}}
      />
    }
    modalClass=""
    onCancel={[Function]}
    onConfirm={[Function]}
    show={false}
    title={
      <FormattedMessage
        defaultMessage="Reset to Default?"
        id="admin.permissions.systemScheme.resetDefaultsButtonModalTitle"
        values={Object {}}
      />
    }
  />
</div>
`;

exports[`components/admin_console/permission_schemes_settings/permission_system_scheme_settings/permission_system_scheme_settings should save roles based on license 1`] = `
<div
  className="wrapper--fixed"
>
  <div
    className="admin-console__header with-back"
  >
    <div>
      <Connect(BlockableLink)
        className="fa fa-angle-left back"
        to="/admin_console/user_management/permissions"
      />
      <FormattedMessage
        defaultMessage="System Scheme"
        id="admin.permissions.systemScheme"
        values={Object {}}
      />
    </div>
  </div>
  <div
    className="admin-console__wrapper"
  >
    <div
      className="admin-console__content"
    >
      <div
        className="banner info"
      >
        <div
          className="banner__content"
        >
          <span>
            <InjectIntl(FormattedMarkdownMessage)
              defaultMessage="Configure the default permissions for Team Admins, Channel Admins and other members. This scheme is inherited by all teams unless a [Team Override Scheme](!https://about.mattermost.com/default-team-override-scheme) is applied in specific teams."
              id="admin.permissions.systemScheme.introBanner"
            />
          </span>
        </div>
      </div>
      <AdminPanelTogglable
        className="permissions-block"
        id="all_users"
        onToggle={[Function]}
        open={true}
        subtitleDefault="Permissions granted to guest users."
        subtitleId="admin.permissions.systemScheme.GuestsDescription"
        titleDefault="Guests"
        titleId="admin.permissions.systemScheme.GuestsTitle"
      >
        <Connect(GuestPermissionsTree)
          onToggle={[Function]}
          readOnly={true}
          role={
            Object {
              "displayName": "Guests",
              "name": "guests",
              "permissions": Array [],
            }
          }
          scope="system_scope"
          selectRow={[Function]}
          selected={null}
        />
      </AdminPanelTogglable>
      <AdminPanelTogglable
        className="permissions-block"
        id="all_users"
        onToggle={[Function]}
        open={true}
        subtitleDefault="Permissions granted to all members, including administrators and newly created users."
        subtitleId="admin.permissions.systemScheme.allMembersDescription"
        titleDefault="All Members"
        titleId="admin.permissions.systemScheme.allMembersTitle"
      >
        <Connect(PermissionsTree)
          onToggle={[Function]}
          role={
            Object {
              "displayName": "All members",
              "name": "all_users",
              "permissions": Array [],
            }
          }
          scope="system_scope"
          selectRow={[Function]}
          selected={null}
        />
      </AdminPanelTogglable>
      <AdminPanelTogglable
        className="permissions-block"
        onToggle={[Function]}
        open={true}
        subtitleDefault="Permissions granted to channel creators and any users promoted to Channel Administrator."
        subtitleId="admin.permissions.systemScheme.channelAdminsDescription"
        titleDefault="Channel Administrators"
        titleId="admin.permissions.systemScheme.channelAdminsTitle"
      >
        <Connect(PermissionsTree)
          onToggle={[Function]}
          parentRole={
            Object {
              "displayName": "All members",
              "name": "all_users",
              "permissions": Array [],
            }
          }
          role={
            Object {
              "permissions": Array [],
            }
          }
          scope="channel_scope"
          selectRow={[Function]}
        />
      </AdminPanelTogglable>
      <AdminPanelTogglable
        className="permissions-block"
        onToggle={[Function]}
        open={true}
        subtitleDefault="Permissions granted to team creators and any users promoted to Team Administrator."
        subtitleId="admin.permissions.systemScheme.teamAdminsDescription"
        titleDefault="Team Administrators"
        titleId="admin.permissions.systemScheme.teamAdminsTitle"
      >
        <Connect(PermissionsTree)
          onToggle={[Function]}
          parentRole={
            Object {
              "displayName": "All members",
              "name": "all_users",
              "permissions": Array [],
            }
          }
          role={
            Object {
              "permissions": Array [],
            }
          }
          scope="team_scope"
          selectRow={[Function]}
        />
      </AdminPanelTogglable>
      <AdminPanelTogglable
        className="permissions-block"
        onToggle={[Function]}
        open={true}
        subtitleDefault="Full permissions granted to System Administrators."
        subtitleId="admin.permissions.systemScheme.systemAdminsDescription"
        titleDefault="System Administrators"
        titleId="admin.permissions.systemScheme.systemAdminsTitle"
      >
        <Connect(PermissionsTree)
          onToggle={[Function]}
          readOnly={true}
          role={
            Object {
              "permissions": Array [],
            }
          }
          scope="system_scope"
          selectRow={[Function]}
        />
      </AdminPanelTogglable>
    </div>
  </div>
  <div
    className="admin-console-save"
  >
    <SaveButton
      btnClass="btn-primary"
      defaultMessage={
        <FormattedMessage
          defaultMessage="Save"
          id="save_button.save"
          values={Object {}}
        />
      }
      disabled={true}
      extraClasses=""
      onClick={[Function]}
      saving={false}
      savingMessage="Saving Config..."
    />
    <Connect(BlockableLink)
      className="cancel-button"
      to="/admin_console/user_management/permissions"
    >
      <FormattedMessage
        defaultMessage="Cancel"
        id="admin.permissions.permissionSchemes.cancel"
        values={Object {}}
      />
    </Connect(BlockableLink)>
    <a
      className="cancel-button reset-defaults-btn"
      onClick={[Function]}
    >
      <FormattedMessage
        defaultMessage="Reset to Defaults"
        id="admin.permissions.systemScheme.resetDefaultsButton"
        values={Object {}}
      />
    </a>
    <div
      className="error-message"
    >
      <FormError
        error={null}
        errors={Array []}
      />
    </div>
  </div>
  <ConfirmModal
    confirmButtonClass="btn btn-primary"
    confirmButtonText={
      <FormattedMessage
        defaultMessage="Yes, Reset"
        id="admin.permissions.systemScheme.resetDefaultsConfirmationButton"
        values={Object {}}
      />
    }
    message={
      <FormattedMessage
        defaultMessage="This will reset all selections on this page to their default settings. Are you sure you want to reset?"
        id="admin.permissions.systemScheme.resetDefaultsButtonModalBody"
        values={Object {}}
      />
    }
    modalClass=""
    onCancel={[Function]}
    onConfirm={[Function]}
    show={false}
    title={
      <FormattedMessage
        defaultMessage="Reset to Default?"
        id="admin.permissions.systemScheme.resetDefaultsButtonModalTitle"
        values={Object {}}
      />
    }
  />
</div>
`;

exports[`components/admin_console/permission_schemes_settings/permission_system_scheme_settings/permission_system_scheme_settings should save roles based on license 2`] = `
<div
  className="wrapper--fixed"
>
  <div
    className="admin-console__header with-back"
  >
    <div>
      <Connect(BlockableLink)
        className="fa fa-angle-left back"
        to="/admin_console/user_management/permissions"
      />
      <FormattedMessage
        defaultMessage="System Scheme"
        id="admin.permissions.systemScheme"
        values={Object {}}
      />
    </div>
  </div>
  <div
    className="admin-console__wrapper"
  >
    <div
      className="admin-console__content"
    >
      <div
        className="banner info"
      >
        <div
          className="banner__content"
        >
          <span>
            <InjectIntl(FormattedMarkdownMessage)
              defaultMessage="Configure the default permissions for Team Admins, Channel Admins and other members. This scheme is inherited by all teams unless a [Team Override Scheme](!https://about.mattermost.com/default-team-override-scheme) is applied in specific teams."
              id="admin.permissions.systemScheme.introBanner"
            />
          </span>
        </div>
      </div>
      <AdminPanelTogglable
        className="permissions-block"
        id="all_users"
        onToggle={[Function]}
        open={true}
        subtitleDefault="Permissions granted to guest users."
        subtitleId="admin.permissions.systemScheme.GuestsDescription"
        titleDefault="Guests"
        titleId="admin.permissions.systemScheme.GuestsTitle"
      >
        <Connect(GuestPermissionsTree)
          onToggle={[Function]}
          readOnly={false}
          role={
            Object {
              "displayName": "Guests",
              "name": "guests",
              "permissions": Array [],
            }
          }
          scope="system_scope"
          selectRow={[Function]}
          selected={null}
        />
      </AdminPanelTogglable>
      <AdminPanelTogglable
        className="permissions-block"
        id="all_users"
        onToggle={[Function]}
        open={true}
        subtitleDefault="Permissions granted to all members, including administrators and newly created users."
        subtitleId="admin.permissions.systemScheme.allMembersDescription"
        titleDefault="All Members"
        titleId="admin.permissions.systemScheme.allMembersTitle"
      >
        <Connect(PermissionsTree)
          onToggle={[Function]}
          role={
            Object {
              "displayName": "All members",
              "name": "all_users",
              "permissions": Array [],
            }
          }
          scope="system_scope"
          selectRow={[Function]}
          selected={null}
        />
      </AdminPanelTogglable>
      <AdminPanelTogglable
        className="permissions-block"
        onToggle={[Function]}
        open={true}
        subtitleDefault="Permissions granted to channel creators and any users promoted to Channel Administrator."
        subtitleId="admin.permissions.systemScheme.channelAdminsDescription"
        titleDefault="Channel Administrators"
        titleId="admin.permissions.systemScheme.channelAdminsTitle"
      >
        <Connect(PermissionsTree)
          onToggle={[Function]}
          parentRole={
            Object {
              "displayName": "All members",
              "name": "all_users",
              "permissions": Array [],
            }
          }
          role={
            Object {
              "permissions": Array [],
            }
          }
          scope="channel_scope"
          selectRow={[Function]}
        />
      </AdminPanelTogglable>
      <AdminPanelTogglable
        className="permissions-block"
        onToggle={[Function]}
        open={true}
        subtitleDefault="Permissions granted to team creators and any users promoted to Team Administrator."
        subtitleId="admin.permissions.systemScheme.teamAdminsDescription"
        titleDefault="Team Administrators"
        titleId="admin.permissions.systemScheme.teamAdminsTitle"
      >
        <Connect(PermissionsTree)
          onToggle={[Function]}
          parentRole={
            Object {
              "displayName": "All members",
              "name": "all_users",
              "permissions": Array [],
            }
          }
          role={
            Object {
              "permissions": Array [],
            }
          }
          scope="team_scope"
          selectRow={[Function]}
        />
      </AdminPanelTogglable>
      <AdminPanelTogglable
        className="permissions-block"
        onToggle={[Function]}
        open={true}
        subtitleDefault="Full permissions granted to System Administrators."
        subtitleId="admin.permissions.systemScheme.systemAdminsDescription"
        titleDefault="System Administrators"
        titleId="admin.permissions.systemScheme.systemAdminsTitle"
      >
        <Connect(PermissionsTree)
          onToggle={[Function]}
          readOnly={true}
          role={
            Object {
              "permissions": Array [],
            }
          }
          scope="system_scope"
          selectRow={[Function]}
        />
      </AdminPanelTogglable>
    </div>
  </div>
  <div
    className="admin-console-save"
  >
    <SaveButton
      btnClass="btn-primary"
      defaultMessage={
        <FormattedMessage
          defaultMessage="Save"
          id="save_button.save"
          values={Object {}}
        />
      }
      disabled={true}
      extraClasses=""
      onClick={[Function]}
      saving={false}
      savingMessage="Saving Config..."
    />
    <Connect(BlockableLink)
      className="cancel-button"
      to="/admin_console/user_management/permissions"
    >
      <FormattedMessage
        defaultMessage="Cancel"
        id="admin.permissions.permissionSchemes.cancel"
        values={Object {}}
      />
    </Connect(BlockableLink)>
    <a
      className="cancel-button reset-defaults-btn"
      onClick={[Function]}
    >
      <FormattedMessage
        defaultMessage="Reset to Defaults"
        id="admin.permissions.systemScheme.resetDefaultsButton"
        values={Object {}}
      />
    </a>
    <div
      className="error-message"
    >
      <FormError
        error={null}
        errors={Array []}
      />
    </div>
  </div>
  <ConfirmModal
    confirmButtonClass="btn btn-primary"
    confirmButtonText={
      <FormattedMessage
        defaultMessage="Yes, Reset"
        id="admin.permissions.systemScheme.resetDefaultsConfirmationButton"
        values={Object {}}
      />
    }
    message={
      <FormattedMessage
        defaultMessage="This will reset all selections on this page to their default settings. Are you sure you want to reset?"
        id="admin.permissions.systemScheme.resetDefaultsButtonModalBody"
        values={Object {}}
      />
    }
    modalClass=""
    onCancel={[Function]}
    onConfirm={[Function]}
    show={false}
    title={
      <FormattedMessage
        defaultMessage="Reset to Default?"
        id="admin.permissions.systemScheme.resetDefaultsButtonModalTitle"
        values={Object {}}
      />
    }
  />
</div>
`;
