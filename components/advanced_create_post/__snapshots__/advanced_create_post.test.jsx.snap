// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/advanced_create_post Show tutorial 1`] = `
<form
  className=""
  id="create_post"
  onSubmit={[Function]}
>
  <AdvanceTextEditor
    additionalControls={Array []}
    applyMarkdown={[Function]}
    badConnection={false}
    canPost={true}
    canUploadFiles={true}
    channelId="owsyt8n43jfxjpzh9np93mx1wa"
    currentChannel={
      Object {
        "id": "owsyt8n43jfxjpzh9np93mx1wa",
        "type": "O",
      }
    }
    currentUserId="zaktnt8bpbgu8mb6ez9k64r7sa"
    draft={
      Object {
        "fileInfos": Array [],
        "message": "",
        "uploadsInProgress": Array [],
      }
    }
    emitTypingEvent={[Function]}
    enableEmojiPicker={true}
    enableGifPicker={true}
    errorClass={null}
    fileUploadRef={
      Object {
        "current": null,
      }
    }
    getFileUploadTarget={[Function]}
    handleBlur={[Function]}
    handleChange={[Function]}
    handleEmojiClick={[Function]}
    handleFileUploadChange={[Function]}
    handleFileUploadComplete={[Function]}
    handleGifClick={[Function]}
    handleKeyDown={[Function]}
    handleMouseUpKeyUp={[Function]}
    handlePostError={[Function]}
    handleSelect={[Function]}
    handleSubmit={[Function]}
    handleUploadError={[Function]}
    handleUploadProgress={[Function]}
    handleUploadStart={[Function]}
    hideEmojiPicker={[Function]}
    isFormattingBarHidden={false}
    location="CENTER"
    maxPostSize={4000}
    message=""
    postId=""
    postMsgKeyPress={[Function]}
    prefillMessage={[Function]}
    removePreview={[Function]}
    serverError={null}
    setShowPreview={[Function]}
    shouldShowPreview={false}
    showEmojiPicker={false}
    showSendTutorialTip={false}
    textboxRef={
      Object {
        "current": null,
      }
    }
    toggleAdvanceTextEditor={[Function]}
    toggleEmojiPicker={[Function]}
    uploadsProgressPercent={Object {}}
    useChannelMentions={true}
  />
</form>
`;

exports[`components/advanced_create_post should match snapshot for center textbox 1`] = `
<form
  className="center"
  id="create_post"
  onSubmit={[Function]}
>
  <AdvanceTextEditor
    additionalControls={Array []}
    applyMarkdown={[Function]}
    badConnection={false}
    canPost={true}
    canUploadFiles={true}
    channelId="owsyt8n43jfxjpzh9np93mx1wa"
    currentChannel={
      Object {
        "id": "owsyt8n43jfxjpzh9np93mx1wa",
        "type": "O",
      }
    }
    currentUserId="zaktnt8bpbgu8mb6ez9k64r7sa"
    draft={
      Object {
        "fileInfos": Array [],
        "message": "",
        "uploadsInProgress": Array [],
      }
    }
    emitTypingEvent={[Function]}
    enableEmojiPicker={true}
    enableGifPicker={true}
    errorClass={null}
    fileUploadRef={
      Object {
        "current": null,
      }
    }
    getFileUploadTarget={[Function]}
    handleBlur={[Function]}
    handleChange={[Function]}
    handleEmojiClick={[Function]}
    handleFileUploadChange={[Function]}
    handleFileUploadComplete={[Function]}
    handleGifClick={[Function]}
    handleKeyDown={[Function]}
    handleMouseUpKeyUp={[Function]}
    handlePostError={[Function]}
    handleSelect={[Function]}
    handleSubmit={[Function]}
    handleUploadError={[Function]}
    handleUploadProgress={[Function]}
    handleUploadStart={[Function]}
    hideEmojiPicker={[Function]}
    isFormattingBarHidden={false}
    location="CENTER"
    maxPostSize={4000}
    message=""
    postId=""
    postMsgKeyPress={[Function]}
    prefillMessage={[Function]}
    removePreview={[Function]}
    serverError={null}
    setShowPreview={[Function]}
    shouldShowPreview={false}
    showEmojiPicker={false}
    showSendTutorialTip={false}
    textboxRef={
      Object {
        "current": null,
      }
    }
    toggleAdvanceTextEditor={[Function]}
    toggleEmojiPicker={[Function]}
    uploadsProgressPercent={Object {}}
    useChannelMentions={true}
  />
</form>
`;

exports[`components/advanced_create_post should match snapshot when cannot post 1`] = `
<form
  className=""
  id="create_post"
  onSubmit={[Function]}
>
  <AdvanceTextEditor
    additionalControls={Array []}
    applyMarkdown={[Function]}
    badConnection={false}
    canPost={false}
    canUploadFiles={true}
    channelId="owsyt8n43jfxjpzh9np93mx1wa"
    currentChannel={
      Object {
        "id": "owsyt8n43jfxjpzh9np93mx1wa",
        "type": "O",
      }
    }
    currentUserId="zaktnt8bpbgu8mb6ez9k64r7sa"
    draft={
      Object {
        "fileInfos": Array [],
        "message": "",
        "uploadsInProgress": Array [],
      }
    }
    emitTypingEvent={[Function]}
    enableEmojiPicker={true}
    enableGifPicker={true}
    errorClass={null}
    fileUploadRef={
      Object {
        "current": null,
      }
    }
    getFileUploadTarget={[Function]}
    handleBlur={[Function]}
    handleChange={[Function]}
    handleEmojiClick={[Function]}
    handleFileUploadChange={[Function]}
    handleFileUploadComplete={[Function]}
    handleGifClick={[Function]}
    handleKeyDown={[Function]}
    handleMouseUpKeyUp={[Function]}
    handlePostError={[Function]}
    handleSelect={[Function]}
    handleSubmit={[Function]}
    handleUploadError={[Function]}
    handleUploadProgress={[Function]}
    handleUploadStart={[Function]}
    hideEmojiPicker={[Function]}
    isFormattingBarHidden={false}
    location="CENTER"
    maxPostSize={4000}
    message=""
    postId=""
    postMsgKeyPress={[Function]}
    prefillMessage={[Function]}
    removePreview={[Function]}
    serverError={null}
    setShowPreview={[Function]}
    shouldShowPreview={false}
    showEmojiPicker={false}
    showSendTutorialTip={false}
    textboxRef={
      Object {
        "current": null,
      }
    }
    toggleAdvanceTextEditor={[Function]}
    toggleEmojiPicker={[Function]}
    uploadsProgressPercent={Object {}}
    useChannelMentions={true}
  />
</form>
`;

exports[`components/advanced_create_post should match snapshot when file upload disabled 1`] = `
<form
  className=""
  id="create_post"
  onSubmit={[Function]}
>
  <AdvanceTextEditor
    additionalControls={Array []}
    applyMarkdown={[Function]}
    badConnection={false}
    canPost={true}
    canUploadFiles={false}
    channelId="owsyt8n43jfxjpzh9np93mx1wa"
    currentChannel={
      Object {
        "id": "owsyt8n43jfxjpzh9np93mx1wa",
        "type": "O",
      }
    }
    currentUserId="zaktnt8bpbgu8mb6ez9k64r7sa"
    draft={
      Object {
        "fileInfos": Array [],
        "message": "",
        "uploadsInProgress": Array [],
      }
    }
    emitTypingEvent={[Function]}
    enableEmojiPicker={true}
    enableGifPicker={true}
    errorClass={null}
    fileUploadRef={
      Object {
        "current": null,
      }
    }
    getFileUploadTarget={[Function]}
    handleBlur={[Function]}
    handleChange={[Function]}
    handleEmojiClick={[Function]}
    handleFileUploadChange={[Function]}
    handleFileUploadComplete={[Function]}
    handleGifClick={[Function]}
    handleKeyDown={[Function]}
    handleMouseUpKeyUp={[Function]}
    handlePostError={[Function]}
    handleSelect={[Function]}
    handleSubmit={[Function]}
    handleUploadError={[Function]}
    handleUploadProgress={[Function]}
    handleUploadStart={[Function]}
    hideEmojiPicker={[Function]}
    isFormattingBarHidden={false}
    location="CENTER"
    maxPostSize={4000}
    message=""
    postId=""
    postMsgKeyPress={[Function]}
    prefillMessage={[Function]}
    removePreview={[Function]}
    serverError={null}
    setShowPreview={[Function]}
    shouldShowPreview={false}
    showEmojiPicker={false}
    showSendTutorialTip={false}
    textboxRef={
      Object {
        "current": null,
      }
    }
    toggleAdvanceTextEditor={[Function]}
    toggleEmojiPicker={[Function]}
    uploadsProgressPercent={Object {}}
    useChannelMentions={true}
  />
</form>
`;

exports[`components/advanced_create_post should match snapshot, can post; preview disabled 1`] = `
<form
  className=""
  id="create_post"
  onSubmit={[Function]}
>
  <AdvanceTextEditor
    additionalControls={Array []}
    applyMarkdown={[Function]}
    badConnection={false}
    canPost={true}
    canUploadFiles={true}
    channelId="owsyt8n43jfxjpzh9np93mx1wa"
    currentChannel={
      Object {
        "id": "owsyt8n43jfxjpzh9np93mx1wa",
        "type": "O",
      }
    }
    currentUserId="zaktnt8bpbgu8mb6ez9k64r7sa"
    draft={
      Object {
        "fileInfos": Array [],
        "message": "",
        "uploadsInProgress": Array [],
      }
    }
    emitTypingEvent={[Function]}
    enableEmojiPicker={true}
    enableGifPicker={true}
    errorClass={null}
    fileUploadRef={
      Object {
        "current": null,
      }
    }
    getFileUploadTarget={[Function]}
    handleBlur={[Function]}
    handleChange={[Function]}
    handleEmojiClick={[Function]}
    handleFileUploadChange={[Function]}
    handleFileUploadComplete={[Function]}
    handleGifClick={[Function]}
    handleKeyDown={[Function]}
    handleMouseUpKeyUp={[Function]}
    handlePostError={[Function]}
    handleSelect={[Function]}
    handleSubmit={[Function]}
    handleUploadError={[Function]}
    handleUploadProgress={[Function]}
    handleUploadStart={[Function]}
    hideEmojiPicker={[Function]}
    isFormattingBarHidden={false}
    location="CENTER"
    maxPostSize={4000}
    message=""
    postId=""
    postMsgKeyPress={[Function]}
    prefillMessage={[Function]}
    removePreview={[Function]}
    serverError={null}
    setShowPreview={[Function]}
    shouldShowPreview={false}
    showEmojiPicker={false}
    showSendTutorialTip={false}
    textboxRef={
      Object {
        "current": null,
      }
    }
    toggleAdvanceTextEditor={[Function]}
    toggleEmojiPicker={[Function]}
    uploadsProgressPercent={Object {}}
    useChannelMentions={true}
  />
</form>
`;

exports[`components/advanced_create_post should match snapshot, can post; preview enabled 1`] = `
<form
  className=""
  id="create_post"
  onSubmit={[Function]}
>
  <AdvanceTextEditor
    additionalControls={Array []}
    applyMarkdown={[Function]}
    badConnection={false}
    canPost={true}
    canUploadFiles={true}
    channelId="owsyt8n43jfxjpzh9np93mx1wa"
    currentChannel={
      Object {
        "id": "owsyt8n43jfxjpzh9np93mx1wa",
        "type": "O",
      }
    }
    currentUserId="zaktnt8bpbgu8mb6ez9k64r7sa"
    draft={
      Object {
        "fileInfos": Array [],
        "message": "",
        "uploadsInProgress": Array [],
      }
    }
    emitTypingEvent={[Function]}
    enableEmojiPicker={true}
    enableGifPicker={true}
    errorClass={null}
    fileUploadRef={
      Object {
        "current": null,
      }
    }
    getFileUploadTarget={[Function]}
    handleBlur={[Function]}
    handleChange={[Function]}
    handleEmojiClick={[Function]}
    handleFileUploadChange={[Function]}
    handleFileUploadComplete={[Function]}
    handleGifClick={[Function]}
    handleKeyDown={[Function]}
    handleMouseUpKeyUp={[Function]}
    handlePostError={[Function]}
    handleSelect={[Function]}
    handleSubmit={[Function]}
    handleUploadError={[Function]}
    handleUploadProgress={[Function]}
    handleUploadStart={[Function]}
    hideEmojiPicker={[Function]}
    isFormattingBarHidden={false}
    location="CENTER"
    maxPostSize={4000}
    message=""
    postId=""
    postMsgKeyPress={[Function]}
    prefillMessage={[Function]}
    removePreview={[Function]}
    serverError={null}
    setShowPreview={[Function]}
    shouldShowPreview={false}
    showEmojiPicker={false}
    showSendTutorialTip={false}
    textboxRef={
      Object {
        "current": null,
      }
    }
    toggleAdvanceTextEditor={[Function]}
    toggleEmojiPicker={[Function]}
    uploadsProgressPercent={Object {}}
    useChannelMentions={true}
  />
</form>
`;

exports[`components/advanced_create_post should match snapshot, cannot post; preview disabled 1`] = `
<form
  className=""
  id="create_post"
  onSubmit={[Function]}
>
  <AdvanceTextEditor
    additionalControls={Array []}
    applyMarkdown={[Function]}
    badConnection={false}
    canPost={false}
    canUploadFiles={true}
    channelId="owsyt8n43jfxjpzh9np93mx1wa"
    currentChannel={
      Object {
        "id": "owsyt8n43jfxjpzh9np93mx1wa",
        "type": "O",
      }
    }
    currentUserId="zaktnt8bpbgu8mb6ez9k64r7sa"
    draft={
      Object {
        "fileInfos": Array [],
        "message": "",
        "uploadsInProgress": Array [],
      }
    }
    emitTypingEvent={[Function]}
    enableEmojiPicker={true}
    enableGifPicker={true}
    errorClass={null}
    fileUploadRef={
      Object {
        "current": null,
      }
    }
    getFileUploadTarget={[Function]}
    handleBlur={[Function]}
    handleChange={[Function]}
    handleEmojiClick={[Function]}
    handleFileUploadChange={[Function]}
    handleFileUploadComplete={[Function]}
    handleGifClick={[Function]}
    handleKeyDown={[Function]}
    handleMouseUpKeyUp={[Function]}
    handlePostError={[Function]}
    handleSelect={[Function]}
    handleSubmit={[Function]}
    handleUploadError={[Function]}
    handleUploadProgress={[Function]}
    handleUploadStart={[Function]}
    hideEmojiPicker={[Function]}
    isFormattingBarHidden={false}
    location="CENTER"
    maxPostSize={4000}
    message=""
    postId=""
    postMsgKeyPress={[Function]}
    prefillMessage={[Function]}
    removePreview={[Function]}
    serverError={null}
    setShowPreview={[Function]}
    shouldShowPreview={false}
    showEmojiPicker={false}
    showSendTutorialTip={false}
    textboxRef={
      Object {
        "current": null,
      }
    }
    toggleAdvanceTextEditor={[Function]}
    toggleEmojiPicker={[Function]}
    uploadsProgressPercent={Object {}}
    useChannelMentions={true}
  />
</form>
`;

exports[`components/advanced_create_post should match snapshot, cannot post; preview enabled 1`] = `
<form
  className=""
  id="create_post"
  onSubmit={[Function]}
>
  <AdvanceTextEditor
    additionalControls={Array []}
    applyMarkdown={[Function]}
    badConnection={false}
    canPost={false}
    canUploadFiles={true}
    channelId="owsyt8n43jfxjpzh9np93mx1wa"
    currentChannel={
      Object {
        "id": "owsyt8n43jfxjpzh9np93mx1wa",
        "type": "O",
      }
    }
    currentUserId="zaktnt8bpbgu8mb6ez9k64r7sa"
    draft={
      Object {
        "fileInfos": Array [],
        "message": "",
        "uploadsInProgress": Array [],
      }
    }
    emitTypingEvent={[Function]}
    enableEmojiPicker={true}
    enableGifPicker={true}
    errorClass={null}
    fileUploadRef={
      Object {
        "current": null,
      }
    }
    getFileUploadTarget={[Function]}
    handleBlur={[Function]}
    handleChange={[Function]}
    handleEmojiClick={[Function]}
    handleFileUploadChange={[Function]}
    handleFileUploadComplete={[Function]}
    handleGifClick={[Function]}
    handleKeyDown={[Function]}
    handleMouseUpKeyUp={[Function]}
    handlePostError={[Function]}
    handleSelect={[Function]}
    handleSubmit={[Function]}
    handleUploadError={[Function]}
    handleUploadProgress={[Function]}
    handleUploadStart={[Function]}
    hideEmojiPicker={[Function]}
    isFormattingBarHidden={false}
    location="CENTER"
    maxPostSize={4000}
    message=""
    postId=""
    postMsgKeyPress={[Function]}
    prefillMessage={[Function]}
    removePreview={[Function]}
    serverError={null}
    setShowPreview={[Function]}
    shouldShowPreview={false}
    showEmojiPicker={false}
    showSendTutorialTip={false}
    textboxRef={
      Object {
        "current": null,
      }
    }
    toggleAdvanceTextEditor={[Function]}
    toggleEmojiPicker={[Function]}
    uploadsProgressPercent={Object {}}
    useChannelMentions={true}
  />
</form>
`;

exports[`components/advanced_create_post should match snapshot, init 1`] = `
<form
  className=""
  id="create_post"
  onSubmit={[Function]}
>
  <AdvanceTextEditor
    additionalControls={Array []}
    applyMarkdown={[Function]}
    badConnection={false}
    canPost={true}
    canUploadFiles={true}
    channelId="owsyt8n43jfxjpzh9np93mx1wa"
    currentChannel={
      Object {
        "id": "owsyt8n43jfxjpzh9np93mx1wa",
        "type": "O",
      }
    }
    currentUserId="zaktnt8bpbgu8mb6ez9k64r7sa"
    draft={
      Object {
        "fileInfos": Array [],
        "message": "",
        "uploadsInProgress": Array [],
      }
    }
    emitTypingEvent={[Function]}
    enableEmojiPicker={true}
    enableGifPicker={true}
    errorClass={null}
    fileUploadRef={
      Object {
        "current": null,
      }
    }
    getFileUploadTarget={[Function]}
    handleBlur={[Function]}
    handleChange={[Function]}
    handleEmojiClick={[Function]}
    handleFileUploadChange={[Function]}
    handleFileUploadComplete={[Function]}
    handleGifClick={[Function]}
    handleKeyDown={[Function]}
    handleMouseUpKeyUp={[Function]}
    handlePostError={[Function]}
    handleSelect={[Function]}
    handleSubmit={[Function]}
    handleUploadError={[Function]}
    handleUploadProgress={[Function]}
    handleUploadStart={[Function]}
    hideEmojiPicker={[Function]}
    isFormattingBarHidden={false}
    location="CENTER"
    maxPostSize={4000}
    message=""
    postId=""
    postMsgKeyPress={[Function]}
    prefillMessage={[Function]}
    removePreview={[Function]}
    serverError={null}
    setShowPreview={[Function]}
    shouldShowPreview={false}
    showEmojiPicker={false}
    showSendTutorialTip={false}
    textboxRef={
      Object {
        "current": null,
      }
    }
    toggleAdvanceTextEditor={[Function]}
    toggleEmojiPicker={[Function]}
    uploadsProgressPercent={Object {}}
    useChannelMentions={true}
  />
</form>
`;

exports[`components/advanced_create_post should match snapshot, post priority disabled, with priority important 1`] = `
<form
  className=""
  id="create_post"
  onSubmit={[Function]}
>
  <AdvanceTextEditor
    additionalControls={Array []}
    applyMarkdown={[Function]}
    badConnection={false}
    canPost={true}
    canUploadFiles={true}
    channelId="owsyt8n43jfxjpzh9np93mx1wa"
    currentChannel={
      Object {
        "id": "owsyt8n43jfxjpzh9np93mx1wa",
        "type": "O",
      }
    }
    currentUserId="zaktnt8bpbgu8mb6ez9k64r7sa"
    draft={
      Object {
        "fileInfos": Array [],
        "message": "",
        "metadata": Object {
          "priority": Object {
            "priority": "important",
          },
        },
        "uploadsInProgress": Array [],
      }
    }
    emitTypingEvent={[Function]}
    enableEmojiPicker={true}
    enableGifPicker={true}
    errorClass={null}
    fileUploadRef={
      Object {
        "current": null,
      }
    }
    getFileUploadTarget={[Function]}
    handleBlur={[Function]}
    handleChange={[Function]}
    handleEmojiClick={[Function]}
    handleFileUploadChange={[Function]}
    handleFileUploadComplete={[Function]}
    handleGifClick={[Function]}
    handleKeyDown={[Function]}
    handleMouseUpKeyUp={[Function]}
    handlePostError={[Function]}
    handleSelect={[Function]}
    handleSubmit={[Function]}
    handleUploadError={[Function]}
    handleUploadProgress={[Function]}
    handleUploadStart={[Function]}
    hideEmojiPicker={[Function]}
    isFormattingBarHidden={false}
    location="CENTER"
    maxPostSize={4000}
    message=""
    postId=""
    postMsgKeyPress={[Function]}
    prefillMessage={[Function]}
    removePreview={[Function]}
    serverError={null}
    setShowPreview={[Function]}
    shouldShowPreview={false}
    showEmojiPicker={false}
    showSendTutorialTip={false}
    textboxRef={
      Object {
        "current": null,
      }
    }
    toggleAdvanceTextEditor={[Function]}
    toggleEmojiPicker={[Function]}
    uploadsProgressPercent={Object {}}
    useChannelMentions={true}
  />
</form>
`;

exports[`components/advanced_create_post should match snapshot, post priority enabled 1`] = `
<form
  className=""
  id="create_post"
  onSubmit={[Function]}
>
  <AdvanceTextEditor
    additionalControls={
      Array [
        <React.Fragment>
          <Memo(PostPriorityPickerOverlay)
            defaultHorizontalPosition="left"
            onApply={[Function]}
            onHide={[Function]}
            show={false}
            target={[Function]}
          />
          <OverlayTrigger
            defaultOverlayShown={false}
            delayShow={400}
            overlay={
              <Tooltip
                id="post-priority-picker-tooltip"
              >
                <Memo(KeyboardShortcutSequence)
                  hoistDescription={true}
                  isInsideTooltip={true}
                  shortcut={
                    Object {
                      "default": Object {
                        "defaultMessage": "Message priority",
                        "id": "shortcuts.msgs.formatting_bar.post_priority",
                      },
                      "mac": Object {
                        "defaultMessage": "Message priority",
                        "id": "shortcuts.msgs.formatting_bar.post_priority",
                      },
                    }
                  }
                />
              </Tooltip>
            }
            placement="top"
            trigger={
              Array [
                "hover",
                "focus",
              ]
            }
          >
            <IconContainer
              className="control"
              disabled={false}
              onClick={[Function]}
              type="button"
            >
              <AlertCircleOutlineIcon
                color="currentColor"
                size={18}
              />
            </IconContainer>
          </OverlayTrigger>
        </React.Fragment>,
      ]
    }
    applyMarkdown={[Function]}
    badConnection={false}
    canPost={true}
    canUploadFiles={true}
    channelId="owsyt8n43jfxjpzh9np93mx1wa"
    currentChannel={
      Object {
        "id": "owsyt8n43jfxjpzh9np93mx1wa",
        "type": "O",
      }
    }
    currentUserId="zaktnt8bpbgu8mb6ez9k64r7sa"
    draft={
      Object {
        "fileInfos": Array [],
        "message": "",
        "uploadsInProgress": Array [],
      }
    }
    emitTypingEvent={[Function]}
    enableEmojiPicker={true}
    enableGifPicker={true}
    errorClass={null}
    fileUploadRef={
      Object {
        "current": null,
      }
    }
    getFileUploadTarget={[Function]}
    handleBlur={[Function]}
    handleChange={[Function]}
    handleEmojiClick={[Function]}
    handleFileUploadChange={[Function]}
    handleFileUploadComplete={[Function]}
    handleGifClick={[Function]}
    handleKeyDown={[Function]}
    handleMouseUpKeyUp={[Function]}
    handlePostError={[Function]}
    handleSelect={[Function]}
    handleSubmit={[Function]}
    handleUploadError={[Function]}
    handleUploadProgress={[Function]}
    handleUploadStart={[Function]}
    hideEmojiPicker={[Function]}
    isFormattingBarHidden={false}
    location="CENTER"
    maxPostSize={4000}
    message=""
    postId=""
    postMsgKeyPress={[Function]}
    prefillMessage={[Function]}
    removePreview={[Function]}
    serverError={null}
    setShowPreview={[Function]}
    shouldShowPreview={false}
    showEmojiPicker={false}
    showSendTutorialTip={false}
    textboxRef={
      Object {
        "current": null,
      }
    }
    toggleAdvanceTextEditor={[Function]}
    toggleEmojiPicker={[Function]}
    uploadsProgressPercent={Object {}}
    useChannelMentions={true}
  />
</form>
`;

exports[`components/advanced_create_post should match snapshot, post priority enabled, with priority important 1`] = `
<form
  className=""
  id="create_post"
  onSubmit={[Function]}
>
  <AdvanceTextEditor
    additionalControls={
      Array [
        <React.Fragment>
          <Memo(PostPriorityPickerOverlay)
            defaultHorizontalPosition="left"
            onApply={[Function]}
            onHide={[Function]}
            settings={
              Object {
                "priority": "important",
              }
            }
            show={false}
            target={[Function]}
          />
          <OverlayTrigger
            defaultOverlayShown={false}
            delayShow={400}
            overlay={
              <Tooltip
                id="post-priority-picker-tooltip"
              >
                <Memo(KeyboardShortcutSequence)
                  hoistDescription={true}
                  isInsideTooltip={true}
                  shortcut={
                    Object {
                      "default": Object {
                        "defaultMessage": "Message priority",
                        "id": "shortcuts.msgs.formatting_bar.post_priority",
                      },
                      "mac": Object {
                        "defaultMessage": "Message priority",
                        "id": "shortcuts.msgs.formatting_bar.post_priority",
                      },
                    }
                  }
                />
              </Tooltip>
            }
            placement="top"
            trigger={
              Array [
                "hover",
                "focus",
              ]
            }
          >
            <IconContainer
              className="control"
              disabled={false}
              onClick={[Function]}
              type="button"
            >
              <AlertCircleOutlineIcon
                color="currentColor"
                size={18}
              />
            </IconContainer>
          </OverlayTrigger>
        </React.Fragment>,
      ]
    }
    applyMarkdown={[Function]}
    badConnection={false}
    canPost={true}
    canUploadFiles={true}
    channelId="owsyt8n43jfxjpzh9np93mx1wa"
    currentChannel={
      Object {
        "id": "owsyt8n43jfxjpzh9np93mx1wa",
        "type": "O",
      }
    }
    currentUserId="zaktnt8bpbgu8mb6ez9k64r7sa"
    draft={
      Object {
        "fileInfos": Array [],
        "message": "",
        "metadata": Object {
          "priority": Object {
            "priority": "important",
          },
        },
        "uploadsInProgress": Array [],
      }
    }
    emitTypingEvent={[Function]}
    enableEmojiPicker={true}
    enableGifPicker={true}
    errorClass={null}
    fileUploadRef={
      Object {
        "current": null,
      }
    }
    getFileUploadTarget={[Function]}
    handleBlur={[Function]}
    handleChange={[Function]}
    handleEmojiClick={[Function]}
    handleFileUploadChange={[Function]}
    handleFileUploadComplete={[Function]}
    handleGifClick={[Function]}
    handleKeyDown={[Function]}
    handleMouseUpKeyUp={[Function]}
    handlePostError={[Function]}
    handleSelect={[Function]}
    handleSubmit={[Function]}
    handleUploadError={[Function]}
    handleUploadProgress={[Function]}
    handleUploadStart={[Function]}
    hideEmojiPicker={[Function]}
    isFormattingBarHidden={false}
    labels={
      <div
        className="AdvancedTextEditor__priority"
      >
        <PriorityLabel
          priority="important"
          size="xs"
        />
        <OverlayTrigger
          defaultOverlayShown={false}
          delayShow={400}
          overlay={
            <Tooltip
              id="post-priority-picker-tooltip"
            >
              <Memo(MemoizedFormattedMessage)
                defaultMessage="Remove {priority}"
                id="post_priority.remove"
                values={
                  Object {
                    "priority": "important",
                  }
                }
              />
            </Tooltip>
          }
          placement="top"
          trigger={
            Array [
              "hover",
              "focus",
            ]
          }
        >
          <button
            className="close"
            onClick={[Function]}
            type="button"
          >
            <span
              aria-hidden="true"
            >
              ×
            </span>
            <span
              className="sr-only"
            >
              <Memo(MemoizedFormattedMessage)
                defaultMessage="Remove {priority}"
                id="post_priority.remove"
                values={
                  Object {
                    "priority": "important",
                  }
                }
              />
            </span>
          </button>
        </OverlayTrigger>
      </div>
    }
    location="CENTER"
    maxPostSize={4000}
    message=""
    postId=""
    postMsgKeyPress={[Function]}
    prefillMessage={[Function]}
    removePreview={[Function]}
    serverError={null}
    setShowPreview={[Function]}
    shouldShowPreview={false}
    showEmojiPicker={false}
    showSendTutorialTip={false}
    textboxRef={
      Object {
        "current": null,
      }
    }
    toggleAdvanceTextEditor={[Function]}
    toggleEmojiPicker={[Function]}
    uploadsProgressPercent={Object {}}
    useChannelMentions={true}
  />
</form>
`;
