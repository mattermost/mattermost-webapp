// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/widgets/users/Avatars should fetch missing users 1`] = `
<Memo(Avatars)
  size="xl"
  userIds={
    Array [
      "1",
      "6",
      "7",
      "2",
      "8",
      "9",
    ]
  }
>
  <div
    className="Avatars Avatars___xl"
    onMouseLeave={[Function]}
  >
    <UserAvatar
      disableProfileOverlay={false}
      key="1"
      overlayProps={
        Object {
          "animation": true,
          "delayShow": undefined,
          "onEntered": [Function],
        }
      }
      size="xl"
      style={
        Object {
          "background": "rgb(240, 240, 241)",
        }
      }
      userId="1"
    >
      <OverlayTrigger
        defaultOverlayShown={false}
        disabled={false}
        overlay={
          <Memo(Connect(injectIntl(ProfilePopover)))
            className="user-profile-popover"
            hide={[Function]}
            src="/api/v4/users/1/image?_=0"
            userId="1"
          />
        }
        placement="right"
        rootClose={true}
        trigger="click"
      >
        <OverlayTrigger
          defaultOverlayShown={false}
          overlay={
            <OverlayWrapper
              className="user-profile-popover"
              hide={[Function]}
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "defaultRichTextElements": undefined,
                  "formatDate": [Function],
                  "formatDateTimeRange": [Function],
                  "formatDateToParts": [Function],
                  "formatDisplayName": [Function],
                  "formatList": [Function],
                  "formatListToParts": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatNumberToParts": [Function],
                  "formatPlural": [Function],
                  "formatRelativeTime": [Function],
                  "formatTime": [Function],
                  "formatTimeToParts": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getDisplayNames": [Function],
                    "getListFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralRules": [Function],
                    "getRelativeTimeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": "Etc/UTC",
                  "wrapRichTextChunksInFragment": undefined,
                }
              }
              src="/api/v4/users/1/image?_=0"
              userId="1"
            />
          }
          placement="right"
          rootClose={true}
          trigger="click"
        >
          <SimpleTooltip
            animation={true}
            content="first.last1"
            id="name-1"
            onClick={[Function]}
            onEntered={[Function]}
          >
            <OverlayTrigger
              animation={true}
              defaultOverlayShown={false}
              delayShow={500}
              onClick={[Function]}
              onEntered={[Function]}
              overlay={
                <Tooltip
                  className="hidden-xs"
                  id="name-1"
                  placement="top"
                >
                  first.last1
                </Tooltip>
              }
              placement="top"
              trigger={
                Array [
                  "hover",
                  "focus",
                ]
              }
            >
              <OverlayTrigger
                animation={true}
                defaultOverlayShown={false}
                delayShow={500}
                onClick={[Function]}
                onEntered={[Function]}
                overlay={
                  <OverlayWrapper
                    className="hidden-xs"
                    id="name-1"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "defaultRichTextElements": undefined,
                        "formatDate": [Function],
                        "formatDateTimeRange": [Function],
                        "formatDateToParts": [Function],
                        "formatDisplayName": [Function],
                        "formatList": [Function],
                        "formatListToParts": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatNumberToParts": [Function],
                        "formatPlural": [Function],
                        "formatRelativeTime": [Function],
                        "formatTime": [Function],
                        "formatTimeToParts": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getDisplayNames": [Function],
                          "getListFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralRules": [Function],
                          "getRelativeTimeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": "Etc/UTC",
                        "wrapRichTextChunksInFragment": undefined,
                      }
                    }
                    placement="top"
                  >
                    first.last1
                  </OverlayWrapper>
                }
                placement="top"
                trigger={
                  Array [
                    "hover",
                    "focus",
                  ]
                }
              >
                <RoundButton
                  className="style--none"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                >
                  <button
                    className="RoundButton-dvlhqG gHOQXq style--none"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                  >
                    <Memo(Avatar)
                      size="xl"
                      style={
                        Object {
                          "background": "rgb(240, 240, 241)",
                        }
                      }
                      tabIndex={-1}
                      url="/api/v4/users/1/image?_=1620680333191"
                    >
                      <img
                        alt="user profile image"
                        className="Avatar Avatar-xl"
                        loading="lazy"
                        onError={[Function]}
                        src="/api/v4/users/1/image?_=1620680333191"
                        style={
                          Object {
                            "background": "rgb(240, 240, 241)",
                          }
                        }
                        tabIndex={-1}
                      />
                    </Memo(Avatar)>
                  </button>
                </RoundButton>
              </OverlayTrigger>
            </OverlayTrigger>
          </SimpleTooltip>
        </OverlayTrigger>
      </OverlayTrigger>
    </UserAvatar>
    <UserAvatar
      disableProfileOverlay={false}
      key="6"
      overlayProps={
        Object {
          "animation": true,
          "delayShow": undefined,
          "onEntered": [Function],
        }
      }
      size="xl"
      style={
        Object {
          "background": "rgb(240, 240, 241)",
        }
      }
      userId="6"
    >
      <OverlayTrigger
        defaultOverlayShown={false}
        disabled={false}
        overlay={
          <Memo(Connect(injectIntl(ProfilePopover)))
            className="user-profile-popover"
            hide={[Function]}
            src="/api/v4/users/6/image?_=0"
            userId="6"
          />
        }
        placement="right"
        rootClose={true}
        trigger="click"
      >
        <OverlayTrigger
          defaultOverlayShown={false}
          overlay={
            <OverlayWrapper
              className="user-profile-popover"
              hide={[Function]}
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "defaultRichTextElements": undefined,
                  "formatDate": [Function],
                  "formatDateTimeRange": [Function],
                  "formatDateToParts": [Function],
                  "formatDisplayName": [Function],
                  "formatList": [Function],
                  "formatListToParts": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatNumberToParts": [Function],
                  "formatPlural": [Function],
                  "formatRelativeTime": [Function],
                  "formatTime": [Function],
                  "formatTimeToParts": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getDisplayNames": [Function],
                    "getListFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralRules": [Function],
                    "getRelativeTimeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": "Etc/UTC",
                  "wrapRichTextChunksInFragment": undefined,
                }
              }
              src="/api/v4/users/6/image?_=0"
              userId="6"
            />
          }
          placement="right"
          rootClose={true}
          trigger="click"
        >
          <SimpleTooltip
            animation={true}
            content="Someone"
            id="name-6"
            onClick={[Function]}
            onEntered={[Function]}
          >
            <OverlayTrigger
              animation={true}
              defaultOverlayShown={false}
              delayShow={500}
              onClick={[Function]}
              onEntered={[Function]}
              overlay={
                <Tooltip
                  className="hidden-xs"
                  id="name-6"
                  placement="top"
                >
                  Someone
                </Tooltip>
              }
              placement="top"
              trigger={
                Array [
                  "hover",
                  "focus",
                ]
              }
            >
              <OverlayTrigger
                animation={true}
                defaultOverlayShown={false}
                delayShow={500}
                onClick={[Function]}
                onEntered={[Function]}
                overlay={
                  <OverlayWrapper
                    className="hidden-xs"
                    id="name-6"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "defaultRichTextElements": undefined,
                        "formatDate": [Function],
                        "formatDateTimeRange": [Function],
                        "formatDateToParts": [Function],
                        "formatDisplayName": [Function],
                        "formatList": [Function],
                        "formatListToParts": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatNumberToParts": [Function],
                        "formatPlural": [Function],
                        "formatRelativeTime": [Function],
                        "formatTime": [Function],
                        "formatTimeToParts": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getDisplayNames": [Function],
                          "getListFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralRules": [Function],
                          "getRelativeTimeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": "Etc/UTC",
                        "wrapRichTextChunksInFragment": undefined,
                      }
                    }
                    placement="top"
                  >
                    Someone
                  </OverlayWrapper>
                }
                placement="top"
                trigger={
                  Array [
                    "hover",
                    "focus",
                  ]
                }
              >
                <RoundButton
                  className="style--none"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                >
                  <button
                    className="RoundButton-dvlhqG gHOQXq style--none"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                  >
                    <Memo(Avatar)
                      size="xl"
                      style={
                        Object {
                          "background": "rgb(240, 240, 241)",
                        }
                      }
                      tabIndex={-1}
                      url="/api/v4/users/6/image?_=0"
                    >
                      <img
                        alt="user profile image"
                        className="Avatar Avatar-xl"
                        loading="lazy"
                        onError={[Function]}
                        src="/api/v4/users/6/image?_=0"
                        style={
                          Object {
                            "background": "rgb(240, 240, 241)",
                          }
                        }
                        tabIndex={-1}
                      />
                    </Memo(Avatar)>
                  </button>
                </RoundButton>
              </OverlayTrigger>
            </OverlayTrigger>
          </SimpleTooltip>
        </OverlayTrigger>
      </OverlayTrigger>
    </UserAvatar>
    <UserAvatar
      disableProfileOverlay={false}
      key="7"
      overlayProps={
        Object {
          "animation": true,
          "delayShow": undefined,
          "onEntered": [Function],
        }
      }
      size="xl"
      style={
        Object {
          "background": "rgb(240, 240, 241)",
        }
      }
      userId="7"
    >
      <OverlayTrigger
        defaultOverlayShown={false}
        disabled={false}
        overlay={
          <Memo(Connect(injectIntl(ProfilePopover)))
            className="user-profile-popover"
            hide={[Function]}
            src="/api/v4/users/7/image?_=0"
            userId="7"
          />
        }
        placement="right"
        rootClose={true}
        trigger="click"
      >
        <OverlayTrigger
          defaultOverlayShown={false}
          overlay={
            <OverlayWrapper
              className="user-profile-popover"
              hide={[Function]}
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "defaultRichTextElements": undefined,
                  "formatDate": [Function],
                  "formatDateTimeRange": [Function],
                  "formatDateToParts": [Function],
                  "formatDisplayName": [Function],
                  "formatList": [Function],
                  "formatListToParts": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatNumberToParts": [Function],
                  "formatPlural": [Function],
                  "formatRelativeTime": [Function],
                  "formatTime": [Function],
                  "formatTimeToParts": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getDisplayNames": [Function],
                    "getListFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralRules": [Function],
                    "getRelativeTimeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": "Etc/UTC",
                  "wrapRichTextChunksInFragment": undefined,
                }
              }
              src="/api/v4/users/7/image?_=0"
              userId="7"
            />
          }
          placement="right"
          rootClose={true}
          trigger="click"
        >
          <SimpleTooltip
            animation={true}
            content="Someone"
            id="name-7"
            onClick={[Function]}
            onEntered={[Function]}
          >
            <OverlayTrigger
              animation={true}
              defaultOverlayShown={false}
              delayShow={500}
              onClick={[Function]}
              onEntered={[Function]}
              overlay={
                <Tooltip
                  className="hidden-xs"
                  id="name-7"
                  placement="top"
                >
                  Someone
                </Tooltip>
              }
              placement="top"
              trigger={
                Array [
                  "hover",
                  "focus",
                ]
              }
            >
              <OverlayTrigger
                animation={true}
                defaultOverlayShown={false}
                delayShow={500}
                onClick={[Function]}
                onEntered={[Function]}
                overlay={
                  <OverlayWrapper
                    className="hidden-xs"
                    id="name-7"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "defaultRichTextElements": undefined,
                        "formatDate": [Function],
                        "formatDateTimeRange": [Function],
                        "formatDateToParts": [Function],
                        "formatDisplayName": [Function],
                        "formatList": [Function],
                        "formatListToParts": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatNumberToParts": [Function],
                        "formatPlural": [Function],
                        "formatRelativeTime": [Function],
                        "formatTime": [Function],
                        "formatTimeToParts": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getDisplayNames": [Function],
                          "getListFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralRules": [Function],
                          "getRelativeTimeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": "Etc/UTC",
                        "wrapRichTextChunksInFragment": undefined,
                      }
                    }
                    placement="top"
                  >
                    Someone
                  </OverlayWrapper>
                }
                placement="top"
                trigger={
                  Array [
                    "hover",
                    "focus",
                  ]
                }
              >
                <RoundButton
                  className="style--none"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                >
                  <button
                    className="RoundButton-dvlhqG gHOQXq style--none"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                  >
                    <Memo(Avatar)
                      size="xl"
                      style={
                        Object {
                          "background": "rgb(240, 240, 241)",
                        }
                      }
                      tabIndex={-1}
                      url="/api/v4/users/7/image?_=0"
                    >
                      <img
                        alt="user profile image"
                        className="Avatar Avatar-xl"
                        loading="lazy"
                        onError={[Function]}
                        src="/api/v4/users/7/image?_=0"
                        style={
                          Object {
                            "background": "rgb(240, 240, 241)",
                          }
                        }
                        tabIndex={-1}
                      />
                    </Memo(Avatar)>
                  </button>
                </RoundButton>
              </OverlayTrigger>
            </OverlayTrigger>
          </SimpleTooltip>
        </OverlayTrigger>
      </OverlayTrigger>
    </UserAvatar>
    <SimpleTooltip
      animation={true}
      content="first.last2, Someone, Someone"
      id="names-overflow"
      onEntered={[Function]}
    >
      <OverlayTrigger
        animation={true}
        defaultOverlayShown={false}
        delayShow={500}
        onEntered={[Function]}
        overlay={
          <Tooltip
            className="hidden-xs"
            id="names-overflow"
            placement="top"
          >
            first.last2, Someone, Someone
          </Tooltip>
        }
        placement="top"
        trigger={
          Array [
            "hover",
            "focus",
          ]
        }
      >
        <OverlayTrigger
          animation={true}
          defaultOverlayShown={false}
          delayShow={500}
          onEntered={[Function]}
          overlay={
            <OverlayWrapper
              className="hidden-xs"
              id="names-overflow"
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "defaultRichTextElements": undefined,
                  "formatDate": [Function],
                  "formatDateTimeRange": [Function],
                  "formatDateToParts": [Function],
                  "formatDisplayName": [Function],
                  "formatList": [Function],
                  "formatListToParts": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatNumberToParts": [Function],
                  "formatPlural": [Function],
                  "formatRelativeTime": [Function],
                  "formatTime": [Function],
                  "formatTimeToParts": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getDisplayNames": [Function],
                    "getListFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralRules": [Function],
                    "getRelativeTimeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": "Etc/UTC",
                  "wrapRichTextChunksInFragment": undefined,
                }
              }
              placement="top"
            >
              first.last2, Someone, Someone
            </OverlayWrapper>
          }
          placement="top"
          trigger={
            Array [
              "hover",
              "focus",
            ]
          }
        >
          <Memo(Avatar)
            onBlur={[Function]}
            onClick={null}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            size="xl"
            style={
              Object {
                "background": "rgb(240, 240, 241)",
              }
            }
            tabIndex={0}
            text="+3"
          >
            <div
              className="Avatar Avatar-xl Avatar-plain"
              data-content="+3"
              onBlur={[Function]}
              onClick={null}
              onFocus={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
              style={
                Object {
                  "background": "rgb(240, 240, 241)",
                }
              }
              tabIndex={0}
            />
          </Memo(Avatar)>
        </OverlayTrigger>
      </OverlayTrigger>
    </SimpleTooltip>
  </div>
</Memo(Avatars)>
`;

exports[`components/widgets/users/Avatars should properly count overflow 1`] = `
<Memo(Avatars)
  size="xl"
  userIds={
    Array [
      "1",
      "2",
      "3",
      "4",
      "5",
    ]
  }
>
  <div
    className="Avatars Avatars___xl"
    onMouseLeave={[Function]}
  >
    <UserAvatar
      disableProfileOverlay={false}
      key="1"
      overlayProps={
        Object {
          "animation": true,
          "delayShow": undefined,
          "onEntered": [Function],
        }
      }
      size="xl"
      style={
        Object {
          "background": "rgb(240, 240, 241)",
        }
      }
      userId="1"
    >
      <OverlayTrigger
        defaultOverlayShown={false}
        disabled={false}
        overlay={
          <Memo(Connect(injectIntl(ProfilePopover)))
            className="user-profile-popover"
            hide={[Function]}
            src="/api/v4/users/1/image?_=0"
            userId="1"
          />
        }
        placement="right"
        rootClose={true}
        trigger="click"
      >
        <OverlayTrigger
          defaultOverlayShown={false}
          overlay={
            <OverlayWrapper
              className="user-profile-popover"
              hide={[Function]}
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "defaultRichTextElements": undefined,
                  "formatDate": [Function],
                  "formatDateTimeRange": [Function],
                  "formatDateToParts": [Function],
                  "formatDisplayName": [Function],
                  "formatList": [Function],
                  "formatListToParts": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatNumberToParts": [Function],
                  "formatPlural": [Function],
                  "formatRelativeTime": [Function],
                  "formatTime": [Function],
                  "formatTimeToParts": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getDisplayNames": [Function],
                    "getListFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralRules": [Function],
                    "getRelativeTimeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": "Etc/UTC",
                  "wrapRichTextChunksInFragment": undefined,
                }
              }
              src="/api/v4/users/1/image?_=0"
              userId="1"
            />
          }
          placement="right"
          rootClose={true}
          trigger="click"
        >
          <SimpleTooltip
            animation={true}
            content="first.last1"
            id="name-1"
            onClick={[Function]}
            onEntered={[Function]}
          >
            <OverlayTrigger
              animation={true}
              defaultOverlayShown={false}
              delayShow={500}
              onClick={[Function]}
              onEntered={[Function]}
              overlay={
                <Tooltip
                  className="hidden-xs"
                  id="name-1"
                  placement="top"
                >
                  first.last1
                </Tooltip>
              }
              placement="top"
              trigger={
                Array [
                  "hover",
                  "focus",
                ]
              }
            >
              <OverlayTrigger
                animation={true}
                defaultOverlayShown={false}
                delayShow={500}
                onClick={[Function]}
                onEntered={[Function]}
                overlay={
                  <OverlayWrapper
                    className="hidden-xs"
                    id="name-1"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "defaultRichTextElements": undefined,
                        "formatDate": [Function],
                        "formatDateTimeRange": [Function],
                        "formatDateToParts": [Function],
                        "formatDisplayName": [Function],
                        "formatList": [Function],
                        "formatListToParts": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatNumberToParts": [Function],
                        "formatPlural": [Function],
                        "formatRelativeTime": [Function],
                        "formatTime": [Function],
                        "formatTimeToParts": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getDisplayNames": [Function],
                          "getListFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralRules": [Function],
                          "getRelativeTimeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": "Etc/UTC",
                        "wrapRichTextChunksInFragment": undefined,
                      }
                    }
                    placement="top"
                  >
                    first.last1
                  </OverlayWrapper>
                }
                placement="top"
                trigger={
                  Array [
                    "hover",
                    "focus",
                  ]
                }
              >
                <RoundButton
                  className="style--none"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                >
                  <button
                    className="RoundButton-dvlhqG gHOQXq style--none"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                  >
                    <Memo(Avatar)
                      size="xl"
                      style={
                        Object {
                          "background": "rgb(240, 240, 241)",
                        }
                      }
                      tabIndex={-1}
                      url="/api/v4/users/1/image?_=1620680333191"
                    >
                      <img
                        alt="user profile image"
                        className="Avatar Avatar-xl"
                        loading="lazy"
                        onError={[Function]}
                        src="/api/v4/users/1/image?_=1620680333191"
                        style={
                          Object {
                            "background": "rgb(240, 240, 241)",
                          }
                        }
                        tabIndex={-1}
                      />
                    </Memo(Avatar)>
                  </button>
                </RoundButton>
              </OverlayTrigger>
            </OverlayTrigger>
          </SimpleTooltip>
        </OverlayTrigger>
      </OverlayTrigger>
    </UserAvatar>
    <UserAvatar
      disableProfileOverlay={false}
      key="2"
      overlayProps={
        Object {
          "animation": true,
          "delayShow": undefined,
          "onEntered": [Function],
        }
      }
      size="xl"
      style={
        Object {
          "background": "rgb(240, 240, 241)",
        }
      }
      userId="2"
    >
      <OverlayTrigger
        defaultOverlayShown={false}
        disabled={false}
        overlay={
          <Memo(Connect(injectIntl(ProfilePopover)))
            className="user-profile-popover"
            hide={[Function]}
            src="/api/v4/users/2/image?_=0"
            userId="2"
          />
        }
        placement="right"
        rootClose={true}
        trigger="click"
      >
        <OverlayTrigger
          defaultOverlayShown={false}
          overlay={
            <OverlayWrapper
              className="user-profile-popover"
              hide={[Function]}
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "defaultRichTextElements": undefined,
                  "formatDate": [Function],
                  "formatDateTimeRange": [Function],
                  "formatDateToParts": [Function],
                  "formatDisplayName": [Function],
                  "formatList": [Function],
                  "formatListToParts": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatNumberToParts": [Function],
                  "formatPlural": [Function],
                  "formatRelativeTime": [Function],
                  "formatTime": [Function],
                  "formatTimeToParts": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getDisplayNames": [Function],
                    "getListFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralRules": [Function],
                    "getRelativeTimeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": "Etc/UTC",
                  "wrapRichTextChunksInFragment": undefined,
                }
              }
              src="/api/v4/users/2/image?_=0"
              userId="2"
            />
          }
          placement="right"
          rootClose={true}
          trigger="click"
        >
          <SimpleTooltip
            animation={true}
            content="first.last2"
            id="name-2"
            onClick={[Function]}
            onEntered={[Function]}
          >
            <OverlayTrigger
              animation={true}
              defaultOverlayShown={false}
              delayShow={500}
              onClick={[Function]}
              onEntered={[Function]}
              overlay={
                <Tooltip
                  className="hidden-xs"
                  id="name-2"
                  placement="top"
                >
                  first.last2
                </Tooltip>
              }
              placement="top"
              trigger={
                Array [
                  "hover",
                  "focus",
                ]
              }
            >
              <OverlayTrigger
                animation={true}
                defaultOverlayShown={false}
                delayShow={500}
                onClick={[Function]}
                onEntered={[Function]}
                overlay={
                  <OverlayWrapper
                    className="hidden-xs"
                    id="name-2"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "defaultRichTextElements": undefined,
                        "formatDate": [Function],
                        "formatDateTimeRange": [Function],
                        "formatDateToParts": [Function],
                        "formatDisplayName": [Function],
                        "formatList": [Function],
                        "formatListToParts": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatNumberToParts": [Function],
                        "formatPlural": [Function],
                        "formatRelativeTime": [Function],
                        "formatTime": [Function],
                        "formatTimeToParts": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getDisplayNames": [Function],
                          "getListFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralRules": [Function],
                          "getRelativeTimeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": "Etc/UTC",
                        "wrapRichTextChunksInFragment": undefined,
                      }
                    }
                    placement="top"
                  >
                    first.last2
                  </OverlayWrapper>
                }
                placement="top"
                trigger={
                  Array [
                    "hover",
                    "focus",
                  ]
                }
              >
                <RoundButton
                  className="style--none"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                >
                  <button
                    className="RoundButton-dvlhqG gHOQXq style--none"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                  >
                    <Memo(Avatar)
                      size="xl"
                      style={
                        Object {
                          "background": "rgb(240, 240, 241)",
                        }
                      }
                      tabIndex={-1}
                      url="/api/v4/users/2/image?_=1620680333191"
                    >
                      <img
                        alt="user profile image"
                        className="Avatar Avatar-xl"
                        loading="lazy"
                        onError={[Function]}
                        src="/api/v4/users/2/image?_=1620680333191"
                        style={
                          Object {
                            "background": "rgb(240, 240, 241)",
                          }
                        }
                        tabIndex={-1}
                      />
                    </Memo(Avatar)>
                  </button>
                </RoundButton>
              </OverlayTrigger>
            </OverlayTrigger>
          </SimpleTooltip>
        </OverlayTrigger>
      </OverlayTrigger>
    </UserAvatar>
    <UserAvatar
      disableProfileOverlay={false}
      key="3"
      overlayProps={
        Object {
          "animation": true,
          "delayShow": undefined,
          "onEntered": [Function],
        }
      }
      size="xl"
      style={
        Object {
          "background": "rgb(240, 240, 241)",
        }
      }
      userId="3"
    >
      <OverlayTrigger
        defaultOverlayShown={false}
        disabled={false}
        overlay={
          <Memo(Connect(injectIntl(ProfilePopover)))
            className="user-profile-popover"
            hide={[Function]}
            src="/api/v4/users/3/image?_=0"
            userId="3"
          />
        }
        placement="right"
        rootClose={true}
        trigger="click"
      >
        <OverlayTrigger
          defaultOverlayShown={false}
          overlay={
            <OverlayWrapper
              className="user-profile-popover"
              hide={[Function]}
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "defaultRichTextElements": undefined,
                  "formatDate": [Function],
                  "formatDateTimeRange": [Function],
                  "formatDateToParts": [Function],
                  "formatDisplayName": [Function],
                  "formatList": [Function],
                  "formatListToParts": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatNumberToParts": [Function],
                  "formatPlural": [Function],
                  "formatRelativeTime": [Function],
                  "formatTime": [Function],
                  "formatTimeToParts": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getDisplayNames": [Function],
                    "getListFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralRules": [Function],
                    "getRelativeTimeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": "Etc/UTC",
                  "wrapRichTextChunksInFragment": undefined,
                }
              }
              src="/api/v4/users/3/image?_=0"
              userId="3"
            />
          }
          placement="right"
          rootClose={true}
          trigger="click"
        >
          <SimpleTooltip
            animation={true}
            content="first.last3"
            id="name-3"
            onClick={[Function]}
            onEntered={[Function]}
          >
            <OverlayTrigger
              animation={true}
              defaultOverlayShown={false}
              delayShow={500}
              onClick={[Function]}
              onEntered={[Function]}
              overlay={
                <Tooltip
                  className="hidden-xs"
                  id="name-3"
                  placement="top"
                >
                  first.last3
                </Tooltip>
              }
              placement="top"
              trigger={
                Array [
                  "hover",
                  "focus",
                ]
              }
            >
              <OverlayTrigger
                animation={true}
                defaultOverlayShown={false}
                delayShow={500}
                onClick={[Function]}
                onEntered={[Function]}
                overlay={
                  <OverlayWrapper
                    className="hidden-xs"
                    id="name-3"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "defaultRichTextElements": undefined,
                        "formatDate": [Function],
                        "formatDateTimeRange": [Function],
                        "formatDateToParts": [Function],
                        "formatDisplayName": [Function],
                        "formatList": [Function],
                        "formatListToParts": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatNumberToParts": [Function],
                        "formatPlural": [Function],
                        "formatRelativeTime": [Function],
                        "formatTime": [Function],
                        "formatTimeToParts": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getDisplayNames": [Function],
                          "getListFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralRules": [Function],
                          "getRelativeTimeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": "Etc/UTC",
                        "wrapRichTextChunksInFragment": undefined,
                      }
                    }
                    placement="top"
                  >
                    first.last3
                  </OverlayWrapper>
                }
                placement="top"
                trigger={
                  Array [
                    "hover",
                    "focus",
                  ]
                }
              >
                <RoundButton
                  className="style--none"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                >
                  <button
                    className="RoundButton-dvlhqG gHOQXq style--none"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                  >
                    <Memo(Avatar)
                      size="xl"
                      style={
                        Object {
                          "background": "rgb(240, 240, 241)",
                        }
                      }
                      tabIndex={-1}
                      url="/api/v4/users/3/image?_=1620680333191"
                    >
                      <img
                        alt="user profile image"
                        className="Avatar Avatar-xl"
                        loading="lazy"
                        onError={[Function]}
                        src="/api/v4/users/3/image?_=1620680333191"
                        style={
                          Object {
                            "background": "rgb(240, 240, 241)",
                          }
                        }
                        tabIndex={-1}
                      />
                    </Memo(Avatar)>
                  </button>
                </RoundButton>
              </OverlayTrigger>
            </OverlayTrigger>
          </SimpleTooltip>
        </OverlayTrigger>
      </OverlayTrigger>
    </UserAvatar>
    <SimpleTooltip
      animation={true}
      content="first.last4, first.last5"
      id="names-overflow"
      onEntered={[Function]}
    >
      <OverlayTrigger
        animation={true}
        defaultOverlayShown={false}
        delayShow={500}
        onEntered={[Function]}
        overlay={
          <Tooltip
            className="hidden-xs"
            id="names-overflow"
            placement="top"
          >
            first.last4, first.last5
          </Tooltip>
        }
        placement="top"
        trigger={
          Array [
            "hover",
            "focus",
          ]
        }
      >
        <OverlayTrigger
          animation={true}
          defaultOverlayShown={false}
          delayShow={500}
          onEntered={[Function]}
          overlay={
            <OverlayWrapper
              className="hidden-xs"
              id="names-overflow"
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "defaultRichTextElements": undefined,
                  "formatDate": [Function],
                  "formatDateTimeRange": [Function],
                  "formatDateToParts": [Function],
                  "formatDisplayName": [Function],
                  "formatList": [Function],
                  "formatListToParts": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatNumberToParts": [Function],
                  "formatPlural": [Function],
                  "formatRelativeTime": [Function],
                  "formatTime": [Function],
                  "formatTimeToParts": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getDisplayNames": [Function],
                    "getListFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralRules": [Function],
                    "getRelativeTimeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": "Etc/UTC",
                  "wrapRichTextChunksInFragment": undefined,
                }
              }
              placement="top"
            >
              first.last4, first.last5
            </OverlayWrapper>
          }
          placement="top"
          trigger={
            Array [
              "hover",
              "focus",
            ]
          }
        >
          <Memo(Avatar)
            onBlur={[Function]}
            onClick={null}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            size="xl"
            style={
              Object {
                "background": "rgb(240, 240, 241)",
              }
            }
            tabIndex={0}
            text="+2"
          >
            <div
              className="Avatar Avatar-xl Avatar-plain"
              data-content="+2"
              onBlur={[Function]}
              onClick={null}
              onFocus={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
              style={
                Object {
                  "background": "rgb(240, 240, 241)",
                }
              }
              tabIndex={0}
            />
          </Memo(Avatar)>
        </OverlayTrigger>
      </OverlayTrigger>
    </SimpleTooltip>
  </div>
</Memo(Avatars)>
`;

exports[`components/widgets/users/Avatars should support userIds 1`] = `
<Memo(Avatars)
  size="xl"
  userIds={
    Array [
      "1",
      "2",
      "3",
    ]
  }
>
  <div
    className="Avatars Avatars___xl"
    onMouseLeave={[Function]}
  >
    <UserAvatar
      disableProfileOverlay={false}
      key="1"
      overlayProps={
        Object {
          "animation": true,
          "delayShow": undefined,
          "onEntered": [Function],
        }
      }
      size="xl"
      style={
        Object {
          "background": "rgb(240, 240, 241)",
        }
      }
      userId="1"
    >
      <OverlayTrigger
        defaultOverlayShown={false}
        disabled={false}
        overlay={
          <Memo(Connect(injectIntl(ProfilePopover)))
            className="user-profile-popover"
            hide={[Function]}
            src="/api/v4/users/1/image?_=0"
            userId="1"
          />
        }
        placement="right"
        rootClose={true}
        trigger="click"
      >
        <OverlayTrigger
          defaultOverlayShown={false}
          overlay={
            <OverlayWrapper
              className="user-profile-popover"
              hide={[Function]}
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "defaultRichTextElements": undefined,
                  "formatDate": [Function],
                  "formatDateTimeRange": [Function],
                  "formatDateToParts": [Function],
                  "formatDisplayName": [Function],
                  "formatList": [Function],
                  "formatListToParts": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatNumberToParts": [Function],
                  "formatPlural": [Function],
                  "formatRelativeTime": [Function],
                  "formatTime": [Function],
                  "formatTimeToParts": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getDisplayNames": [Function],
                    "getListFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralRules": [Function],
                    "getRelativeTimeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": "Etc/UTC",
                  "wrapRichTextChunksInFragment": undefined,
                }
              }
              src="/api/v4/users/1/image?_=0"
              userId="1"
            />
          }
          placement="right"
          rootClose={true}
          trigger="click"
        >
          <SimpleTooltip
            animation={true}
            content="first.last1"
            id="name-1"
            onClick={[Function]}
            onEntered={[Function]}
          >
            <OverlayTrigger
              animation={true}
              defaultOverlayShown={false}
              delayShow={500}
              onClick={[Function]}
              onEntered={[Function]}
              overlay={
                <Tooltip
                  className="hidden-xs"
                  id="name-1"
                  placement="top"
                >
                  first.last1
                </Tooltip>
              }
              placement="top"
              trigger={
                Array [
                  "hover",
                  "focus",
                ]
              }
            >
              <OverlayTrigger
                animation={true}
                defaultOverlayShown={false}
                delayShow={500}
                onClick={[Function]}
                onEntered={[Function]}
                overlay={
                  <OverlayWrapper
                    className="hidden-xs"
                    id="name-1"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "defaultRichTextElements": undefined,
                        "formatDate": [Function],
                        "formatDateTimeRange": [Function],
                        "formatDateToParts": [Function],
                        "formatDisplayName": [Function],
                        "formatList": [Function],
                        "formatListToParts": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatNumberToParts": [Function],
                        "formatPlural": [Function],
                        "formatRelativeTime": [Function],
                        "formatTime": [Function],
                        "formatTimeToParts": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getDisplayNames": [Function],
                          "getListFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralRules": [Function],
                          "getRelativeTimeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": "Etc/UTC",
                        "wrapRichTextChunksInFragment": undefined,
                      }
                    }
                    placement="top"
                  >
                    first.last1
                  </OverlayWrapper>
                }
                placement="top"
                trigger={
                  Array [
                    "hover",
                    "focus",
                  ]
                }
              >
                <RoundButton
                  className="style--none"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                >
                  <button
                    className="RoundButton-dvlhqG gHOQXq style--none"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                  >
                    <Memo(Avatar)
                      size="xl"
                      style={
                        Object {
                          "background": "rgb(240, 240, 241)",
                        }
                      }
                      tabIndex={-1}
                      url="/api/v4/users/1/image?_=1620680333191"
                    >
                      <img
                        alt="user profile image"
                        className="Avatar Avatar-xl"
                        loading="lazy"
                        onError={[Function]}
                        src="/api/v4/users/1/image?_=1620680333191"
                        style={
                          Object {
                            "background": "rgb(240, 240, 241)",
                          }
                        }
                        tabIndex={-1}
                      />
                    </Memo(Avatar)>
                  </button>
                </RoundButton>
              </OverlayTrigger>
            </OverlayTrigger>
          </SimpleTooltip>
        </OverlayTrigger>
      </OverlayTrigger>
    </UserAvatar>
    <UserAvatar
      disableProfileOverlay={false}
      key="2"
      overlayProps={
        Object {
          "animation": true,
          "delayShow": undefined,
          "onEntered": [Function],
        }
      }
      size="xl"
      style={
        Object {
          "background": "rgb(240, 240, 241)",
        }
      }
      userId="2"
    >
      <OverlayTrigger
        defaultOverlayShown={false}
        disabled={false}
        overlay={
          <Memo(Connect(injectIntl(ProfilePopover)))
            className="user-profile-popover"
            hide={[Function]}
            src="/api/v4/users/2/image?_=0"
            userId="2"
          />
        }
        placement="right"
        rootClose={true}
        trigger="click"
      >
        <OverlayTrigger
          defaultOverlayShown={false}
          overlay={
            <OverlayWrapper
              className="user-profile-popover"
              hide={[Function]}
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "defaultRichTextElements": undefined,
                  "formatDate": [Function],
                  "formatDateTimeRange": [Function],
                  "formatDateToParts": [Function],
                  "formatDisplayName": [Function],
                  "formatList": [Function],
                  "formatListToParts": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatNumberToParts": [Function],
                  "formatPlural": [Function],
                  "formatRelativeTime": [Function],
                  "formatTime": [Function],
                  "formatTimeToParts": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getDisplayNames": [Function],
                    "getListFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralRules": [Function],
                    "getRelativeTimeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": "Etc/UTC",
                  "wrapRichTextChunksInFragment": undefined,
                }
              }
              src="/api/v4/users/2/image?_=0"
              userId="2"
            />
          }
          placement="right"
          rootClose={true}
          trigger="click"
        >
          <SimpleTooltip
            animation={true}
            content="first.last2"
            id="name-2"
            onClick={[Function]}
            onEntered={[Function]}
          >
            <OverlayTrigger
              animation={true}
              defaultOverlayShown={false}
              delayShow={500}
              onClick={[Function]}
              onEntered={[Function]}
              overlay={
                <Tooltip
                  className="hidden-xs"
                  id="name-2"
                  placement="top"
                >
                  first.last2
                </Tooltip>
              }
              placement="top"
              trigger={
                Array [
                  "hover",
                  "focus",
                ]
              }
            >
              <OverlayTrigger
                animation={true}
                defaultOverlayShown={false}
                delayShow={500}
                onClick={[Function]}
                onEntered={[Function]}
                overlay={
                  <OverlayWrapper
                    className="hidden-xs"
                    id="name-2"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "defaultRichTextElements": undefined,
                        "formatDate": [Function],
                        "formatDateTimeRange": [Function],
                        "formatDateToParts": [Function],
                        "formatDisplayName": [Function],
                        "formatList": [Function],
                        "formatListToParts": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatNumberToParts": [Function],
                        "formatPlural": [Function],
                        "formatRelativeTime": [Function],
                        "formatTime": [Function],
                        "formatTimeToParts": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getDisplayNames": [Function],
                          "getListFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralRules": [Function],
                          "getRelativeTimeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": "Etc/UTC",
                        "wrapRichTextChunksInFragment": undefined,
                      }
                    }
                    placement="top"
                  >
                    first.last2
                  </OverlayWrapper>
                }
                placement="top"
                trigger={
                  Array [
                    "hover",
                    "focus",
                  ]
                }
              >
                <RoundButton
                  className="style--none"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                >
                  <button
                    className="RoundButton-dvlhqG gHOQXq style--none"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                  >
                    <Memo(Avatar)
                      size="xl"
                      style={
                        Object {
                          "background": "rgb(240, 240, 241)",
                        }
                      }
                      tabIndex={-1}
                      url="/api/v4/users/2/image?_=1620680333191"
                    >
                      <img
                        alt="user profile image"
                        className="Avatar Avatar-xl"
                        loading="lazy"
                        onError={[Function]}
                        src="/api/v4/users/2/image?_=1620680333191"
                        style={
                          Object {
                            "background": "rgb(240, 240, 241)",
                          }
                        }
                        tabIndex={-1}
                      />
                    </Memo(Avatar)>
                  </button>
                </RoundButton>
              </OverlayTrigger>
            </OverlayTrigger>
          </SimpleTooltip>
        </OverlayTrigger>
      </OverlayTrigger>
    </UserAvatar>
    <UserAvatar
      disableProfileOverlay={false}
      key="3"
      overlayProps={
        Object {
          "animation": true,
          "delayShow": undefined,
          "onEntered": [Function],
        }
      }
      size="xl"
      style={
        Object {
          "background": "rgb(240, 240, 241)",
        }
      }
      userId="3"
    >
      <OverlayTrigger
        defaultOverlayShown={false}
        disabled={false}
        overlay={
          <Memo(Connect(injectIntl(ProfilePopover)))
            className="user-profile-popover"
            hide={[Function]}
            src="/api/v4/users/3/image?_=0"
            userId="3"
          />
        }
        placement="right"
        rootClose={true}
        trigger="click"
      >
        <OverlayTrigger
          defaultOverlayShown={false}
          overlay={
            <OverlayWrapper
              className="user-profile-popover"
              hide={[Function]}
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "defaultRichTextElements": undefined,
                  "formatDate": [Function],
                  "formatDateTimeRange": [Function],
                  "formatDateToParts": [Function],
                  "formatDisplayName": [Function],
                  "formatList": [Function],
                  "formatListToParts": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatNumberToParts": [Function],
                  "formatPlural": [Function],
                  "formatRelativeTime": [Function],
                  "formatTime": [Function],
                  "formatTimeToParts": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getDisplayNames": [Function],
                    "getListFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralRules": [Function],
                    "getRelativeTimeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": "Etc/UTC",
                  "wrapRichTextChunksInFragment": undefined,
                }
              }
              src="/api/v4/users/3/image?_=0"
              userId="3"
            />
          }
          placement="right"
          rootClose={true}
          trigger="click"
        >
          <SimpleTooltip
            animation={true}
            content="first.last3"
            id="name-3"
            onClick={[Function]}
            onEntered={[Function]}
          >
            <OverlayTrigger
              animation={true}
              defaultOverlayShown={false}
              delayShow={500}
              onClick={[Function]}
              onEntered={[Function]}
              overlay={
                <Tooltip
                  className="hidden-xs"
                  id="name-3"
                  placement="top"
                >
                  first.last3
                </Tooltip>
              }
              placement="top"
              trigger={
                Array [
                  "hover",
                  "focus",
                ]
              }
            >
              <OverlayTrigger
                animation={true}
                defaultOverlayShown={false}
                delayShow={500}
                onClick={[Function]}
                onEntered={[Function]}
                overlay={
                  <OverlayWrapper
                    className="hidden-xs"
                    id="name-3"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "defaultRichTextElements": undefined,
                        "formatDate": [Function],
                        "formatDateTimeRange": [Function],
                        "formatDateToParts": [Function],
                        "formatDisplayName": [Function],
                        "formatList": [Function],
                        "formatListToParts": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatNumberToParts": [Function],
                        "formatPlural": [Function],
                        "formatRelativeTime": [Function],
                        "formatTime": [Function],
                        "formatTimeToParts": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getDisplayNames": [Function],
                          "getListFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralRules": [Function],
                          "getRelativeTimeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": "Etc/UTC",
                        "wrapRichTextChunksInFragment": undefined,
                      }
                    }
                    placement="top"
                  >
                    first.last3
                  </OverlayWrapper>
                }
                placement="top"
                trigger={
                  Array [
                    "hover",
                    "focus",
                  ]
                }
              >
                <RoundButton
                  className="style--none"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                >
                  <button
                    className="RoundButton-dvlhqG gHOQXq style--none"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                  >
                    <Memo(Avatar)
                      size="xl"
                      style={
                        Object {
                          "background": "rgb(240, 240, 241)",
                        }
                      }
                      tabIndex={-1}
                      url="/api/v4/users/3/image?_=1620680333191"
                    >
                      <img
                        alt="user profile image"
                        className="Avatar Avatar-xl"
                        loading="lazy"
                        onError={[Function]}
                        src="/api/v4/users/3/image?_=1620680333191"
                        style={
                          Object {
                            "background": "rgb(240, 240, 241)",
                          }
                        }
                        tabIndex={-1}
                      />
                    </Memo(Avatar)>
                  </button>
                </RoundButton>
              </OverlayTrigger>
            </OverlayTrigger>
          </SimpleTooltip>
        </OverlayTrigger>
      </OverlayTrigger>
    </UserAvatar>
  </div>
</Memo(Avatars)>
`;
