// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/GenericModal should match snapshot for base case 1`] = `
<Modal
  animation={true}
  aria-labelledby="genericModalLabel"
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  dialogClassName="a11y__modal GenericModal"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  id="genericModal"
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onExited={[MockFunction]}
  onHide={[Function]}
  onShow={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  role="dialog"
  show={true}
>
  <FocusTrap
    active={false}
  >
    <div
      className="GenericModal__wrapper-enter-key-press-catcher"
      onKeyDown={[Function]}
      tabIndex={0}
    >
      <ModalHeader
        bsClass="modal-header"
        closeButton={true}
        closeLabel="Close"
      />
      <ModalBody
        bsClass="modal-body"
        componentClass="div"
      >
        <div
          className="GenericModal__header"
        >
          <h1
            id="genericModalLabel"
          >
            Modal Header Text
          </h1>
        </div>
        <div
          className="GenericModal__body"
        />
      </ModalBody>
    </div>
  </FocusTrap>
</Modal>
`;

exports[`components/GenericModal should match snapshot with both buttons 1`] = `
<Modal
  animation={true}
  aria-labelledby="genericModalLabel"
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  dialogClassName="a11y__modal GenericModal"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  id="genericModal"
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onExited={[MockFunction]}
  onHide={[Function]}
  onShow={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  role="dialog"
  show={true}
>
  <FocusTrap
    active={false}
  >
    <div
      className="GenericModal__wrapper-enter-key-press-catcher"
      onKeyDown={[Function]}
      tabIndex={0}
    >
      <ModalHeader
        bsClass="modal-header"
        closeButton={true}
        closeLabel="Close"
      />
      <ModalBody
        bsClass="modal-body"
        componentClass="div"
      >
        <div
          className="GenericModal__header"
        >
          <h1
            id="genericModalLabel"
          >
            Modal Header Text
          </h1>
        </div>
        <div
          className="GenericModal__body"
        />
      </ModalBody>
      <ModalFooter
        bsClass="modal-footer"
        componentClass="div"
      >
        <button
          className="GenericModal__button cancel"
          onClick={[Function]}
          type="button"
        >
          <MemoizedFormattedMessage
            defaultMessage="Cancel"
            id="generic_modal.cancel"
          />
        </button>
        <button
          className="GenericModal__button confirm"
          onClick={[Function]}
          type="submit"
        >
          <MemoizedFormattedMessage
            defaultMessage="Confirm"
            id="generic_modal.confirm"
          />
        </button>
      </ModalFooter>
    </div>
  </FocusTrap>
</Modal>
`;

exports[`components/GenericModal should match snapshot with disabled confirm button 1`] = `
<Modal
  animation={true}
  aria-labelledby="genericModalLabel"
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  dialogClassName="a11y__modal GenericModal"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  id="genericModal"
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onExited={[MockFunction]}
  onHide={[Function]}
  onShow={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  role="dialog"
  show={true}
>
  <FocusTrap
    active={false}
  >
    <div
      className="GenericModal__wrapper-enter-key-press-catcher"
      onKeyDown={[Function]}
      tabIndex={0}
    >
      <ModalHeader
        bsClass="modal-header"
        closeButton={true}
        closeLabel="Close"
      />
      <ModalBody
        bsClass="modal-body"
        componentClass="div"
      >
        <div
          className="GenericModal__header"
        >
          <h1
            id="genericModalLabel"
          >
            Modal Header Text
          </h1>
        </div>
        <div
          className="GenericModal__body"
        />
      </ModalBody>
      <ModalFooter
        bsClass="modal-footer"
        componentClass="div"
      >
        <button
          className="GenericModal__button confirm disabled"
          disabled={true}
          onClick={[Function]}
          type="submit"
        >
          <MemoizedFormattedMessage
            defaultMessage="Confirm"
            id="generic_modal.confirm"
          />
        </button>
      </ModalFooter>
    </div>
  </FocusTrap>
</Modal>
`;
