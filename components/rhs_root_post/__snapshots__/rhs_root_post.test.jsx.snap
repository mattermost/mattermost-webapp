// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/RhsRootPost should match snapshot 1`] = `
<PostAriaLabelDiv
  className="thread__root a11y__section post post--root post--thread current--user post--compact"
  data-a11y-sort-order="0"
  id="rhsPost_id"
  onClick={[Function]}
  onMouseLeave={[Function]}
  onMouseOver={[Function]}
  post={
    Object {
      "channel_id": "channel_id",
      "create_at": 1502715365009,
      "delete_at": 0,
      "edit_at": 1502715372443,
      "id": "id",
      "is_pinned": false,
      "message": "post message",
      "original_id": "",
      "pending_post_id": "",
      "props": Object {},
      "root_id": "",
      "type": "",
      "update_at": 1502715372443,
      "user_id": "user_id",
    }
  }
  role="listitem"
  tabIndex="-1"
>
  <Connect(injectIntl(PostPreHeader))
    channelId="channel_id"
    isFlagged={false}
    isPinned={false}
  />
  <div
    className="post__content"
    role="application"
  >
    <div
      className="post__img"
    >
      <Connect(PostProfilePicture)
        channelId="channel_id"
        compactDisplay={true}
        isBusy={false}
        isRHS={true}
        post={
          Object {
            "channel_id": "channel_id",
            "create_at": 1502715365009,
            "delete_at": 0,
            "edit_at": 1502715372443,
            "id": "id",
            "is_pinned": false,
            "message": "post message",
            "original_id": "",
            "pending_post_id": "",
            "props": Object {},
            "root_id": "",
            "type": "",
            "update_at": 1502715372443,
            "user_id": "user_id",
          }
        }
        userId="user_id"
      />
    </div>
    <div>
      <div
        className="post__header"
      >
        <div
          className="col__name"
        >
          <Connect(UserProfile)
            hasMention={true}
            isBusy={false}
            isRHS={true}
            key="user_id"
            userId="user_id"
          />
          <Memo(CustomStatusEmoji)
            emojiStyle={
              Object {
                "marginLeft": 4,
                "marginTop": 2,
              }
            }
            showTooltip={true}
            userID="user_id"
          />
        </div>
        <div
          className="col d-flex align-items-center"
        >
          <Connect(PostTime)
            eventTime={1502715365009}
            isPermalink={true}
            location="RHS_ROOT"
            postId="id"
          />
        </div>
        <div
          className="col post-menu"
        >
          <Connect(injectIntl(DotMenuClass))
            commentCount={0}
            enableEmojiPicker={true}
            handleAddReactionClick={[Function]}
            handleDropdownOpened={[Function]}
            isFlagged={false}
            isMenuOpen={false}
            isReadOnly={false}
            location="RHS_ROOT"
            post={
              Object {
                "channel_id": "channel_id",
                "create_at": 1502715365009,
                "delete_at": 0,
                "edit_at": 1502715372443,
                "id": "id",
                "is_pinned": false,
                "message": "post message",
                "original_id": "",
                "pending_post_id": "",
                "props": Object {},
                "root_id": "",
                "type": "",
                "update_at": 1502715372443,
                "user_id": "user_id",
              }
            }
          />
          <Connect(PostReaction)
            channelId="channel_id"
            getDotMenuRef={[Function]}
            location="RHS_ROOT"
            postId="id"
            showEmojiPicker={false}
            teamId="team_id"
            toggleEmojiPicker={[Function]}
          />
          <Connect(PostFlagIcon)
            isFlagged={false}
            location="RHS_ROOT"
            postId="id"
          />
          <Connect(injectIntl(ActionMenuClass))
            handleDismissTip={[Function]}
            handleDropdownOpened={[Function]}
            handleNextTip={[Function]}
            handleOpenTip={[Function]}
            isMenuOpen={false}
            location="RHS_ROOT"
            post={
              Object {
                "channel_id": "channel_id",
                "create_at": 1502715365009,
                "delete_at": 0,
                "edit_at": 1502715372443,
                "id": "id",
                "is_pinned": false,
                "message": "post message",
                "original_id": "",
                "pending_post_id": "",
                "props": Object {},
                "root_id": "",
                "type": "",
                "update_at": 1502715372443,
                "user_id": "user_id",
              }
            }
            showTutorialTip={false}
          />
        </div>
      </div>
      <div
        className="post__body"
      >
        <div
          className="post__body--transition post--edited"
        >
          <AutoHeightSwitcher
            onTransitionEnd={[Function]}
            showSlot={1}
            slot1={
              <MessageWithAdditionalContent
                isEmbedVisible={false}
                pluginPostTypes={Object {}}
                post={
                  Object {
                    "channel_id": "channel_id",
                    "create_at": 1502715365009,
                    "delete_at": 0,
                    "edit_at": 1502715372443,
                    "id": "id",
                    "is_pinned": false,
                    "message": "post message",
                    "original_id": "",
                    "pending_post_id": "",
                    "props": Object {},
                    "root_id": "",
                    "type": "",
                    "update_at": 1502715372443,
                    "user_id": "user_id",
                  }
                }
                previewCollapsed=""
                previewEnabled={false}
              />
            }
            slot2={<Memo(Connect(EditPost)) />}
          />
        </div>
        <Connect(ReactionList)
          post={
            Object {
              "channel_id": "channel_id",
              "create_at": 1502715365009,
              "delete_at": 0,
              "edit_at": 1502715372443,
              "id": "id",
              "is_pinned": false,
              "message": "post message",
              "original_id": "",
              "pending_post_id": "",
              "props": Object {},
              "root_id": "",
              "type": "",
              "update_at": 1502715372443,
              "user_id": "user_id",
            }
          }
        />
      </div>
    </div>
  </div>
</PostAriaLabelDiv>
`;

exports[`components/RhsRootPost should match snapshot hovered 1`] = `
<PostAriaLabelDiv
  className="thread__root a11y__section post post--root post--thread current--user post--compact"
  data-a11y-sort-order="0"
  id="rhsPost_id"
  onClick={[Function]}
  onMouseLeave={[Function]}
  onMouseOver={[Function]}
  post={
    Object {
      "channel_id": "channel_id",
      "create_at": 1502715365009,
      "delete_at": 0,
      "edit_at": 1502715372443,
      "id": "id",
      "is_pinned": false,
      "message": "post message",
      "original_id": "",
      "pending_post_id": "",
      "props": Object {},
      "root_id": "",
      "type": "",
      "update_at": 1502715372443,
      "user_id": "user_id",
    }
  }
  role="listitem"
  tabIndex="-1"
>
  <Connect(injectIntl(PostPreHeader))
    channelId="channel_id"
    isFlagged={false}
    isPinned={false}
  />
  <div
    className="post__content"
    role="application"
  >
    <div
      className="post__img"
    >
      <Connect(PostProfilePicture)
        channelId="channel_id"
        compactDisplay={true}
        isBusy={false}
        isRHS={true}
        post={
          Object {
            "channel_id": "channel_id",
            "create_at": 1502715365009,
            "delete_at": 0,
            "edit_at": 1502715372443,
            "id": "id",
            "is_pinned": false,
            "message": "post message",
            "original_id": "",
            "pending_post_id": "",
            "props": Object {},
            "root_id": "",
            "type": "",
            "update_at": 1502715372443,
            "user_id": "user_id",
          }
        }
        userId="user_id"
      />
    </div>
    <div>
      <div
        className="post__header"
      >
        <div
          className="col__name"
        >
          <Connect(UserProfile)
            hasMention={true}
            isBusy={false}
            isRHS={true}
            key="user_id"
            userId="user_id"
          />
          <Memo(CustomStatusEmoji)
            emojiStyle={
              Object {
                "marginLeft": 4,
                "marginTop": 2,
              }
            }
            showTooltip={true}
            userID="user_id"
          />
        </div>
        <div
          className="col d-flex align-items-center"
        >
          <Connect(PostTime)
            eventTime={1502715365009}
            isPermalink={true}
            location="RHS_ROOT"
            postId="id"
          />
        </div>
        <div
          className="col post-menu"
        >
          <Connect(injectIntl(DotMenuClass))
            commentCount={0}
            enableEmojiPicker={true}
            handleAddReactionClick={[Function]}
            handleDropdownOpened={[Function]}
            isFlagged={false}
            isMenuOpen={false}
            isReadOnly={false}
            location="RHS_ROOT"
            post={
              Object {
                "channel_id": "channel_id",
                "create_at": 1502715365009,
                "delete_at": 0,
                "edit_at": 1502715372443,
                "id": "id",
                "is_pinned": false,
                "message": "post message",
                "original_id": "",
                "pending_post_id": "",
                "props": Object {},
                "root_id": "",
                "type": "",
                "update_at": 1502715372443,
                "user_id": "user_id",
              }
            }
          />
          <Connect(PostReaction)
            channelId="channel_id"
            getDotMenuRef={[Function]}
            location="RHS_ROOT"
            postId="id"
            showEmojiPicker={false}
            teamId="team_id"
            toggleEmojiPicker={[Function]}
          />
          <Connect(PostFlagIcon)
            isFlagged={false}
            location="RHS_ROOT"
            postId="id"
          />
          <Connect(injectIntl(ActionMenuClass))
            handleDismissTip={[Function]}
            handleDropdownOpened={[Function]}
            handleNextTip={[Function]}
            handleOpenTip={[Function]}
            isMenuOpen={false}
            location="RHS_ROOT"
            post={
              Object {
                "channel_id": "channel_id",
                "create_at": 1502715365009,
                "delete_at": 0,
                "edit_at": 1502715372443,
                "id": "id",
                "is_pinned": false,
                "message": "post message",
                "original_id": "",
                "pending_post_id": "",
                "props": Object {},
                "root_id": "",
                "type": "",
                "update_at": 1502715372443,
                "user_id": "user_id",
              }
            }
            showTutorialTip={false}
          />
        </div>
      </div>
      <div
        className="post__body"
      >
        <div
          className="post__body--transition post--edited"
        >
          <AutoHeightSwitcher
            onTransitionEnd={[Function]}
            showSlot={1}
            slot1={
              <MessageWithAdditionalContent
                isEmbedVisible={false}
                pluginPostTypes={Object {}}
                post={
                  Object {
                    "channel_id": "channel_id",
                    "create_at": 1502715365009,
                    "delete_at": 0,
                    "edit_at": 1502715372443,
                    "id": "id",
                    "is_pinned": false,
                    "message": "post message",
                    "original_id": "",
                    "pending_post_id": "",
                    "props": Object {},
                    "root_id": "",
                    "type": "",
                    "update_at": 1502715372443,
                    "user_id": "user_id",
                  }
                }
                previewCollapsed=""
                previewEnabled={false}
              />
            }
            slot2={<Memo(Connect(EditPost)) />}
          />
        </div>
        <Connect(ReactionList)
          post={
            Object {
              "channel_id": "channel_id",
              "create_at": 1502715365009,
              "delete_at": 0,
              "edit_at": 1502715372443,
              "id": "id",
              "is_pinned": false,
              "message": "post message",
              "original_id": "",
              "pending_post_id": "",
              "props": Object {},
              "root_id": "",
              "type": "",
              "update_at": 1502715372443,
              "user_id": "user_id",
            }
          }
        />
      </div>
    </div>
  </div>
</PostAriaLabelDiv>
`;

exports[`components/RhsRootPost should match snapshot on CRT enabled 1`] = `
<PostAriaLabelDiv
  className="thread__root a11y__section post post--root post--thread current--user post--compact"
  data-a11y-sort-order="0"
  id="rhsPost_id"
  onClick={[Function]}
  onMouseLeave={[Function]}
  onMouseOver={[Function]}
  post={
    Object {
      "channel_id": "channel_id",
      "create_at": 1502715365009,
      "delete_at": 0,
      "edit_at": 1502715372443,
      "id": "id",
      "is_pinned": false,
      "message": "post message",
      "original_id": "",
      "pending_post_id": "",
      "props": Object {},
      "root_id": "",
      "type": "",
      "update_at": 1502715372443,
      "user_id": "user_id",
    }
  }
  role="listitem"
  tabIndex="-1"
>
  <Connect(injectIntl(PostPreHeader))
    channelId="channel_id"
    isFlagged={false}
    isPinned={false}
  />
  <div
    className="post__content"
    role="application"
  >
    <div
      className="post__img"
    >
      <Connect(PostProfilePicture)
        channelId="channel_id"
        compactDisplay={true}
        isBusy={false}
        isRHS={true}
        post={
          Object {
            "channel_id": "channel_id",
            "create_at": 1502715365009,
            "delete_at": 0,
            "edit_at": 1502715372443,
            "id": "id",
            "is_pinned": false,
            "message": "post message",
            "original_id": "",
            "pending_post_id": "",
            "props": Object {},
            "root_id": "",
            "type": "",
            "update_at": 1502715372443,
            "user_id": "user_id",
          }
        }
        userId="user_id"
      />
    </div>
    <div>
      <div
        className="post__header"
      >
        <div
          className="col__name"
        >
          <Connect(UserProfile)
            hasMention={true}
            isBusy={false}
            isRHS={true}
            key="user_id"
            userId="user_id"
          />
          <Memo(CustomStatusEmoji)
            emojiStyle={
              Object {
                "marginLeft": 4,
                "marginTop": 2,
              }
            }
            showTooltip={true}
            userID="user_id"
          />
        </div>
        <div
          className="col d-flex align-items-center"
        >
          <Connect(PostTime)
            eventTime={1502715365009}
            isPermalink={true}
            location="RHS_ROOT"
            postId="id"
          />
        </div>
        <div
          className="col post-menu"
        >
          <Connect(PostReaction)
            channelId="channel_id"
            getDotMenuRef={[Function]}
            location="RHS_ROOT"
            postId="id"
            showEmojiPicker={false}
            teamId="team_id"
            toggleEmojiPicker={[Function]}
          />
          <Connect(PostFlagIcon)
            isFlagged={false}
            location="RHS_ROOT"
            postId="id"
          />
          <Connect(injectIntl(ActionMenuClass))
            handleDismissTip={[Function]}
            handleDropdownOpened={[Function]}
            handleNextTip={[Function]}
            handleOpenTip={[Function]}
            isMenuOpen={false}
            location="RHS_ROOT"
            post={
              Object {
                "channel_id": "channel_id",
                "create_at": 1502715365009,
                "delete_at": 0,
                "edit_at": 1502715372443,
                "id": "id",
                "is_pinned": false,
                "message": "post message",
                "original_id": "",
                "pending_post_id": "",
                "props": Object {},
                "root_id": "",
                "type": "",
                "update_at": 1502715372443,
                "user_id": "user_id",
              }
            }
            showTutorialTip={false}
          />
          <Connect(injectIntl(DotMenuClass))
            commentCount={0}
            enableEmojiPicker={true}
            handleAddReactionClick={[Function]}
            handleDropdownOpened={[Function]}
            isFlagged={false}
            isMenuOpen={false}
            isReadOnly={false}
            location="RHS_ROOT"
            post={
              Object {
                "channel_id": "channel_id",
                "create_at": 1502715365009,
                "delete_at": 0,
                "edit_at": 1502715372443,
                "id": "id",
                "is_pinned": false,
                "message": "post message",
                "original_id": "",
                "pending_post_id": "",
                "props": Object {},
                "root_id": "",
                "type": "",
                "update_at": 1502715372443,
                "user_id": "user_id",
              }
            }
          />
        </div>
      </div>
      <div
        className="post__body"
      >
        <div
          className="post__body--transition post--edited"
        >
          <AutoHeightSwitcher
            onTransitionEnd={[Function]}
            showSlot={1}
            slot1={
              <MessageWithAdditionalContent
                isEmbedVisible={false}
                pluginPostTypes={Object {}}
                post={
                  Object {
                    "channel_id": "channel_id",
                    "create_at": 1502715365009,
                    "delete_at": 0,
                    "edit_at": 1502715372443,
                    "id": "id",
                    "is_pinned": false,
                    "message": "post message",
                    "original_id": "",
                    "pending_post_id": "",
                    "props": Object {},
                    "root_id": "",
                    "type": "",
                    "update_at": 1502715372443,
                    "user_id": "user_id",
                  }
                }
                previewCollapsed=""
                previewEnabled={false}
              />
            }
            slot2={<Memo(Connect(EditPost)) />}
          />
        </div>
        <Connect(ReactionList)
          post={
            Object {
              "channel_id": "channel_id",
              "create_at": 1502715365009,
              "delete_at": 0,
              "edit_at": 1502715372443,
              "id": "id",
              "is_pinned": false,
              "message": "post message",
              "original_id": "",
              "pending_post_id": "",
              "props": Object {},
              "root_id": "",
              "type": "",
              "update_at": 1502715372443,
              "user_id": "user_id",
            }
          }
        />
      </div>
    </div>
  </div>
</PostAriaLabelDiv>
`;

exports[`components/RhsRootPost should match snapshot on deleted post 1`] = `
<PostAriaLabelDiv
  className="thread__root a11y__section post post--root post--thread current--user post--compact"
  data-a11y-sort-order="0"
  id="rhsPost_id"
  onClick={[Function]}
  onMouseLeave={[Function]}
  onMouseOver={[Function]}
  post={
    Object {
      "channel_id": "channel_id",
      "create_at": 1502715365009,
      "delete_at": 0,
      "edit_at": 1502715372443,
      "id": "id",
      "is_pinned": false,
      "message": "post message",
      "original_id": "",
      "pending_post_id": "",
      "props": Object {},
      "root_id": "",
      "state": "DELETED",
      "type": "",
      "update_at": 1502715372443,
      "user_id": "user_id",
    }
  }
  role="listitem"
  tabIndex="-1"
>
  <Connect(injectIntl(PostPreHeader))
    channelId="channel_id"
    isFlagged={false}
    isPinned={false}
  />
  <div
    className="post__content"
    role="application"
  >
    <div
      className="post__img"
    >
      <Connect(PostProfilePicture)
        channelId="channel_id"
        compactDisplay={true}
        isBusy={false}
        isRHS={true}
        post={
          Object {
            "channel_id": "channel_id",
            "create_at": 1502715365009,
            "delete_at": 0,
            "edit_at": 1502715372443,
            "id": "id",
            "is_pinned": false,
            "message": "post message",
            "original_id": "",
            "pending_post_id": "",
            "props": Object {},
            "root_id": "",
            "state": "DELETED",
            "type": "",
            "update_at": 1502715372443,
            "user_id": "user_id",
          }
        }
        userId="user_id"
      />
    </div>
    <div>
      <div
        className="post__header"
      >
        <div
          className="col__name"
        >
          <Connect(UserProfile)
            hasMention={true}
            isBusy={false}
            isRHS={true}
            key="user_id"
            userId="user_id"
          />
          <Memo(CustomStatusEmoji)
            emojiStyle={
              Object {
                "marginLeft": 4,
                "marginTop": 2,
              }
            }
            showTooltip={true}
            userID="user_id"
          />
        </div>
        <div
          className="col d-flex align-items-center"
        >
          <Connect(PostTime)
            eventTime={1502715365009}
            isPermalink={false}
            location="RHS_ROOT"
            postId="id"
          />
        </div>
      </div>
      <div
        className="post__body"
      >
        <div
          className="post__body--transition post--edited"
        >
          <AutoHeightSwitcher
            onTransitionEnd={[Function]}
            showSlot={1}
            slot1={
              <MessageWithAdditionalContent
                isEmbedVisible={false}
                pluginPostTypes={Object {}}
                post={
                  Object {
                    "channel_id": "channel_id",
                    "create_at": 1502715365009,
                    "delete_at": 0,
                    "edit_at": 1502715372443,
                    "id": "id",
                    "is_pinned": false,
                    "message": "post message",
                    "original_id": "",
                    "pending_post_id": "",
                    "props": Object {},
                    "root_id": "",
                    "state": "DELETED",
                    "type": "",
                    "update_at": 1502715372443,
                    "user_id": "user_id",
                  }
                }
                previewCollapsed=""
                previewEnabled={false}
              />
            }
            slot2={<Memo(Connect(EditPost)) />}
          />
        </div>
        <Connect(ReactionList)
          post={
            Object {
              "channel_id": "channel_id",
              "create_at": 1502715365009,
              "delete_at": 0,
              "edit_at": 1502715372443,
              "id": "id",
              "is_pinned": false,
              "message": "post message",
              "original_id": "",
              "pending_post_id": "",
              "props": Object {},
              "root_id": "",
              "state": "DELETED",
              "type": "",
              "update_at": 1502715372443,
              "user_id": "user_id",
            }
          }
        />
      </div>
    </div>
  </div>
</PostAriaLabelDiv>
`;

exports[`components/RhsRootPost should match snapshot on flagged, deleted post 1`] = `
<PostAriaLabelDiv
  className="thread__root a11y__section post post--root post--thread current--user post--compact"
  data-a11y-sort-order="0"
  id="rhsPost_id"
  onClick={[Function]}
  onMouseLeave={[Function]}
  onMouseOver={[Function]}
  post={
    Object {
      "channel_id": "channel_id",
      "create_at": 1502715365009,
      "delete_at": 0,
      "edit_at": 1502715372443,
      "id": "id",
      "isFlagged": true,
      "is_pinned": false,
      "message": "post message",
      "original_id": "",
      "pending_post_id": "",
      "props": Object {},
      "root_id": "",
      "state": "DELETED",
      "type": "",
      "update_at": 1502715372443,
      "user_id": "user_id",
    }
  }
  role="listitem"
  tabIndex="-1"
>
  <Connect(injectIntl(PostPreHeader))
    channelId="channel_id"
    isFlagged={false}
    isPinned={false}
  />
  <div
    className="post__content"
    role="application"
  >
    <div
      className="post__img"
    >
      <Connect(PostProfilePicture)
        channelId="channel_id"
        compactDisplay={true}
        isBusy={false}
        isRHS={true}
        post={
          Object {
            "channel_id": "channel_id",
            "create_at": 1502715365009,
            "delete_at": 0,
            "edit_at": 1502715372443,
            "id": "id",
            "isFlagged": true,
            "is_pinned": false,
            "message": "post message",
            "original_id": "",
            "pending_post_id": "",
            "props": Object {},
            "root_id": "",
            "state": "DELETED",
            "type": "",
            "update_at": 1502715372443,
            "user_id": "user_id",
          }
        }
        userId="user_id"
      />
    </div>
    <div>
      <div
        className="post__header"
      >
        <div
          className="col__name"
        >
          <Connect(UserProfile)
            hasMention={true}
            isBusy={false}
            isRHS={true}
            key="user_id"
            userId="user_id"
          />
          <Memo(CustomStatusEmoji)
            emojiStyle={
              Object {
                "marginLeft": 4,
                "marginTop": 2,
              }
            }
            showTooltip={true}
            userID="user_id"
          />
        </div>
        <div
          className="col d-flex align-items-center"
        >
          <Connect(PostTime)
            eventTime={1502715365009}
            isPermalink={false}
            location="RHS_ROOT"
            postId="id"
          />
        </div>
      </div>
      <div
        className="post__body"
      >
        <div
          className="post__body--transition post--edited"
        >
          <AutoHeightSwitcher
            onTransitionEnd={[Function]}
            showSlot={1}
            slot1={
              <MessageWithAdditionalContent
                isEmbedVisible={false}
                pluginPostTypes={Object {}}
                post={
                  Object {
                    "channel_id": "channel_id",
                    "create_at": 1502715365009,
                    "delete_at": 0,
                    "edit_at": 1502715372443,
                    "id": "id",
                    "isFlagged": true,
                    "is_pinned": false,
                    "message": "post message",
                    "original_id": "",
                    "pending_post_id": "",
                    "props": Object {},
                    "root_id": "",
                    "state": "DELETED",
                    "type": "",
                    "update_at": 1502715372443,
                    "user_id": "user_id",
                  }
                }
                previewCollapsed=""
                previewEnabled={false}
              />
            }
            slot2={<Memo(Connect(EditPost)) />}
          />
        </div>
        <Connect(ReactionList)
          post={
            Object {
              "channel_id": "channel_id",
              "create_at": 1502715365009,
              "delete_at": 0,
              "edit_at": 1502715372443,
              "id": "id",
              "isFlagged": true,
              "is_pinned": false,
              "message": "post message",
              "original_id": "",
              "pending_post_id": "",
              "props": Object {},
              "root_id": "",
              "state": "DELETED",
              "type": "",
              "update_at": 1502715372443,
              "user_id": "user_id",
            }
          }
        />
      </div>
    </div>
  </div>
</PostAriaLabelDiv>
`;

exports[`components/RhsRootPost should match snapshot when flagged 1`] = `
<PostAriaLabelDiv
  className="thread__root a11y__section post post--root post--thread current--user post--compact"
  data-a11y-sort-order="0"
  id="rhsPost_id"
  onClick={[Function]}
  onMouseLeave={[Function]}
  onMouseOver={[Function]}
  post={
    Object {
      "channel_id": "channel_id",
      "create_at": 1502715365009,
      "delete_at": 0,
      "edit_at": 1502715372443,
      "id": "id",
      "is_pinned": false,
      "message": "post message",
      "original_id": "",
      "pending_post_id": "",
      "props": Object {},
      "root_id": "",
      "type": "",
      "update_at": 1502715372443,
      "user_id": "user_id",
    }
  }
  role="listitem"
  tabIndex="-1"
>
  <Connect(injectIntl(PostPreHeader))
    channelId="channel_id"
    isFlagged={true}
    isPinned={false}
  />
  <div
    className="post__content"
    role="application"
  >
    <div
      className="post__img"
    >
      <Connect(PostProfilePicture)
        channelId="channel_id"
        compactDisplay={true}
        isBusy={false}
        isRHS={true}
        post={
          Object {
            "channel_id": "channel_id",
            "create_at": 1502715365009,
            "delete_at": 0,
            "edit_at": 1502715372443,
            "id": "id",
            "is_pinned": false,
            "message": "post message",
            "original_id": "",
            "pending_post_id": "",
            "props": Object {},
            "root_id": "",
            "type": "",
            "update_at": 1502715372443,
            "user_id": "user_id",
          }
        }
        userId="user_id"
      />
    </div>
    <div>
      <div
        className="post__header"
      >
        <div
          className="col__name"
        >
          <Connect(UserProfile)
            hasMention={true}
            isBusy={false}
            isRHS={true}
            key="user_id"
            userId="user_id"
          />
          <Memo(CustomStatusEmoji)
            emojiStyle={
              Object {
                "marginLeft": 4,
                "marginTop": 2,
              }
            }
            showTooltip={true}
            userID="user_id"
          />
        </div>
        <div
          className="col d-flex align-items-center"
        >
          <Connect(PostTime)
            eventTime={1502715365009}
            isPermalink={true}
            location="RHS_ROOT"
            postId="id"
          />
        </div>
        <div
          className="col post-menu"
        >
          <Connect(injectIntl(DotMenuClass))
            commentCount={0}
            enableEmojiPicker={true}
            handleAddReactionClick={[Function]}
            handleDropdownOpened={[Function]}
            isFlagged={true}
            isMenuOpen={false}
            isReadOnly={false}
            location="RHS_ROOT"
            post={
              Object {
                "channel_id": "channel_id",
                "create_at": 1502715365009,
                "delete_at": 0,
                "edit_at": 1502715372443,
                "id": "id",
                "is_pinned": false,
                "message": "post message",
                "original_id": "",
                "pending_post_id": "",
                "props": Object {},
                "root_id": "",
                "type": "",
                "update_at": 1502715372443,
                "user_id": "user_id",
              }
            }
          />
          <Connect(PostReaction)
            channelId="channel_id"
            getDotMenuRef={[Function]}
            location="RHS_ROOT"
            postId="id"
            showEmojiPicker={false}
            teamId="team_id"
            toggleEmojiPicker={[Function]}
          />
          <Connect(PostFlagIcon)
            isFlagged={true}
            location="RHS_ROOT"
            postId="id"
          />
          <Connect(injectIntl(ActionMenuClass))
            handleDismissTip={[Function]}
            handleDropdownOpened={[Function]}
            handleNextTip={[Function]}
            handleOpenTip={[Function]}
            isMenuOpen={false}
            location="RHS_ROOT"
            post={
              Object {
                "channel_id": "channel_id",
                "create_at": 1502715365009,
                "delete_at": 0,
                "edit_at": 1502715372443,
                "id": "id",
                "is_pinned": false,
                "message": "post message",
                "original_id": "",
                "pending_post_id": "",
                "props": Object {},
                "root_id": "",
                "type": "",
                "update_at": 1502715372443,
                "user_id": "user_id",
              }
            }
            showTutorialTip={false}
          />
        </div>
      </div>
      <div
        className="post__body"
      >
        <div
          className="post__body--transition post--edited"
        >
          <AutoHeightSwitcher
            onTransitionEnd={[Function]}
            showSlot={1}
            slot1={
              <MessageWithAdditionalContent
                isEmbedVisible={false}
                pluginPostTypes={Object {}}
                post={
                  Object {
                    "channel_id": "channel_id",
                    "create_at": 1502715365009,
                    "delete_at": 0,
                    "edit_at": 1502715372443,
                    "id": "id",
                    "is_pinned": false,
                    "message": "post message",
                    "original_id": "",
                    "pending_post_id": "",
                    "props": Object {},
                    "root_id": "",
                    "type": "",
                    "update_at": 1502715372443,
                    "user_id": "user_id",
                  }
                }
                previewCollapsed=""
                previewEnabled={false}
              />
            }
            slot2={<Memo(Connect(EditPost)) />}
          />
        </div>
        <Connect(ReactionList)
          post={
            Object {
              "channel_id": "channel_id",
              "create_at": 1502715365009,
              "delete_at": 0,
              "edit_at": 1502715372443,
              "id": "id",
              "is_pinned": false,
              "message": "post message",
              "original_id": "",
              "pending_post_id": "",
              "props": Object {},
              "root_id": "",
              "type": "",
              "update_at": 1502715372443,
              "user_id": "user_id",
            }
          }
        />
      </div>
    </div>
  </div>
</PostAriaLabelDiv>
`;

exports[`components/RhsRootPost should match snapshot when post priority is enabled 1`] = `
<PostAriaLabelDiv
  className="thread__root a11y__section post post--root post--thread current--user post--compact"
  data-a11y-sort-order="0"
  id="rhsPost_id"
  onClick={[Function]}
  onMouseLeave={[Function]}
  onMouseOver={[Function]}
  post={
    Object {
      "channel_id": "channel_id",
      "create_at": 1502715365009,
      "delete_at": 0,
      "edit_at": 1502715372443,
      "id": "id",
      "is_pinned": false,
      "message": "post message",
      "original_id": "",
      "pending_post_id": "",
      "props": Object {
        "priority": "important",
      },
      "root_id": "",
      "type": "",
      "update_at": 1502715372443,
      "user_id": "user_id",
    }
  }
  role="listitem"
  tabIndex="-1"
>
  <Connect(injectIntl(PostPreHeader))
    channelId="channel_id"
    isFlagged={false}
    isPinned={false}
  />
  <div
    className="post__content"
    role="application"
  >
    <div
      className="post__img"
    >
      <Connect(PostProfilePicture)
        channelId="channel_id"
        compactDisplay={true}
        isBusy={false}
        isRHS={true}
        post={
          Object {
            "channel_id": "channel_id",
            "create_at": 1502715365009,
            "delete_at": 0,
            "edit_at": 1502715372443,
            "id": "id",
            "is_pinned": false,
            "message": "post message",
            "original_id": "",
            "pending_post_id": "",
            "props": Object {
              "priority": "important",
            },
            "root_id": "",
            "type": "",
            "update_at": 1502715372443,
            "user_id": "user_id",
          }
        }
        userId="user_id"
      />
    </div>
    <div>
      <div
        className="post__header"
      >
        <div
          className="col__name"
        >
          <Connect(UserProfile)
            hasMention={true}
            isBusy={false}
            isRHS={true}
            key="user_id"
            userId="user_id"
          />
          <Memo(CustomStatusEmoji)
            emojiStyle={
              Object {
                "marginLeft": 4,
                "marginTop": 2,
              }
            }
            showTooltip={true}
            userID="user_id"
          />
        </div>
        <div
          className="col d-flex align-items-center"
        >
          <Connect(PostTime)
            eventTime={1502715365009}
            isPermalink={true}
            location="RHS_ROOT"
            postId="id"
          />
          <span
            className="d-flex mr-2 ml-1"
          >
            <PriorityLabel
              priority="important"
            />
          </span>
        </div>
        <div
          className="col post-menu"
        >
          <Connect(injectIntl(DotMenuClass))
            commentCount={0}
            enableEmojiPicker={true}
            handleAddReactionClick={[Function]}
            handleDropdownOpened={[Function]}
            isFlagged={false}
            isMenuOpen={false}
            isReadOnly={false}
            location="RHS_ROOT"
            post={
              Object {
                "channel_id": "channel_id",
                "create_at": 1502715365009,
                "delete_at": 0,
                "edit_at": 1502715372443,
                "id": "id",
                "is_pinned": false,
                "message": "post message",
                "original_id": "",
                "pending_post_id": "",
                "props": Object {
                  "priority": "important",
                },
                "root_id": "",
                "type": "",
                "update_at": 1502715372443,
                "user_id": "user_id",
              }
            }
          />
          <Connect(PostReaction)
            channelId="channel_id"
            getDotMenuRef={[Function]}
            location="RHS_ROOT"
            postId="id"
            showEmojiPicker={false}
            teamId="team_id"
            toggleEmojiPicker={[Function]}
          />
          <Connect(PostFlagIcon)
            isFlagged={false}
            location="RHS_ROOT"
            postId="id"
          />
          <Connect(injectIntl(ActionMenuClass))
            handleDismissTip={[Function]}
            handleDropdownOpened={[Function]}
            handleNextTip={[Function]}
            handleOpenTip={[Function]}
            isMenuOpen={false}
            location="RHS_ROOT"
            post={
              Object {
                "channel_id": "channel_id",
                "create_at": 1502715365009,
                "delete_at": 0,
                "edit_at": 1502715372443,
                "id": "id",
                "is_pinned": false,
                "message": "post message",
                "original_id": "",
                "pending_post_id": "",
                "props": Object {
                  "priority": "important",
                },
                "root_id": "",
                "type": "",
                "update_at": 1502715372443,
                "user_id": "user_id",
              }
            }
            showTutorialTip={false}
          />
        </div>
      </div>
      <div
        className="post__body"
      >
        <div
          className="post__body--transition post--edited"
        >
          <AutoHeightSwitcher
            onTransitionEnd={[Function]}
            showSlot={1}
            slot1={
              <MessageWithAdditionalContent
                isEmbedVisible={false}
                pluginPostTypes={Object {}}
                post={
                  Object {
                    "channel_id": "channel_id",
                    "create_at": 1502715365009,
                    "delete_at": 0,
                    "edit_at": 1502715372443,
                    "id": "id",
                    "is_pinned": false,
                    "message": "post message",
                    "original_id": "",
                    "pending_post_id": "",
                    "props": Object {
                      "priority": "important",
                    },
                    "root_id": "",
                    "type": "",
                    "update_at": 1502715372443,
                    "user_id": "user_id",
                  }
                }
                previewCollapsed=""
                previewEnabled={false}
              />
            }
            slot2={<Memo(Connect(EditPost)) />}
          />
        </div>
        <Connect(ReactionList)
          post={
            Object {
              "channel_id": "channel_id",
              "create_at": 1502715365009,
              "delete_at": 0,
              "edit_at": 1502715372443,
              "id": "id",
              "is_pinned": false,
              "message": "post message",
              "original_id": "",
              "pending_post_id": "",
              "props": Object {
                "priority": "important",
              },
              "root_id": "",
              "type": "",
              "update_at": 1502715372443,
              "user_id": "user_id",
            }
          }
        />
      </div>
    </div>
  </div>
</PostAriaLabelDiv>
`;
