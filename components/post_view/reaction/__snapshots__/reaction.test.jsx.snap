// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/post_view/Reaction should apply read-only class if user does not have permission to add reaction 1`] = `
<button
  aria-label="react with smile"
  className="Reaction Reaction--unreacted Reaction--read-only"
  id="postReaction-post_id_1-smile"
  onClick={[Function]}
>
  <OverlayTrigger
    defaultOverlayShown={false}
    delayShow={500}
    onEnter={[Function]}
    overlay={
      <Tooltip
        bsClass="tooltip"
        id="post_id_1-smile-reaction"
        placement="right"
      >
        <FormattedMessage
          defaultMessage="{users} {reactionVerb} with {emoji}"
          id="reaction.reacted"
          values={
            Object {
              "emoji": <b>
                :smile:
              </b>,
              "reactionVerb": <FormattedMessage
                defaultMessage="reacted"
                id="reaction.reactionVerb.users"
              />,
              "users": <b>
                <FormattedMessage
                  defaultMessage="{users} and {otherUsers, number} other {otherUsers, plural, one {user} other {users}}"
                  id="reaction.usersAndOthersReacted"
                  values={
                    Object {
                      "otherUsers": 2,
                      "users": "username_2",
                    }
                  }
                />
              </b>,
            }
          }
        />
        <br />
      </Tooltip>
    }
    placement="top"
    shouldUpdatePosition={true}
    trigger={
      Array [
        "hover",
        "focus",
      ]
    }
  >
    <span
      className="d-flex align-items-center"
    >
      <span
        className="Reaction__emoji emoticon"
        style={
          Object {
            "backgroundImage": "url(emoji_image_url)",
          }
        }
      />
      <span
        className="Reaction__count"
      >
        <span
          className="Reaction__number"
        >
          <span
            className="Reaction__number--display"
          >
            2
          </span>
          <span
            className="Reaction__number--unreacted"
            onAnimationEnd={[Function]}
          >
            2
          </span>
          <span
            className="Reaction__number--reacted"
          >
            3
          </span>
        </span>
      </span>
    </span>
  </OverlayTrigger>
</button>
`;

exports[`components/post_view/Reaction should apply read-only class if user does not have permission to remove reaction 1`] = `
<button
  aria-label="react with smile"
  className="Reaction Reaction--reacted Reaction--read-only"
  id="postReaction-post_id_1-smile"
  onClick={[Function]}
>
  <OverlayTrigger
    defaultOverlayShown={false}
    delayShow={500}
    onEnter={[Function]}
    overlay={
      <Tooltip
        bsClass="tooltip"
        id="post_id_1-smile-reaction"
        placement="right"
      >
        <FormattedMessage
          defaultMessage="{users} {reactionVerb} with {emoji}"
          id="reaction.reacted"
          values={
            Object {
              "emoji": <b>
                :smile:
              </b>,
              "reactionVerb": <FormattedMessage
                defaultMessage="reacted"
                id="reaction.reactionVerb.youAndUsers"
              />,
              "users": <b>
                <FormattedMessage
                  defaultMessage="{users} and {otherUsers, number} other {otherUsers, plural, one {user} other {users}}"
                  id="reaction.usersAndOthersReacted"
                  values={
                    Object {
                      "otherUsers": 2,
                      "users": "You",
                    }
                  }
                />
              </b>,
            }
          }
        />
        <br />
      </Tooltip>
    }
    placement="top"
    shouldUpdatePosition={true}
    trigger={
      Array [
        "hover",
        "focus",
      ]
    }
  >
    <span
      className="d-flex align-items-center"
    >
      <span
        className="Reaction__emoji emoticon"
        style={
          Object {
            "backgroundImage": "url(emoji_image_url)",
          }
        }
      />
      <span
        className="Reaction__count"
      >
        <span
          className="Reaction__number"
        >
          <span
            className="Reaction__number--display"
          >
            2
          </span>
          <span
            className="Reaction__number--unreacted"
            onAnimationEnd={[Function]}
          >
            1
          </span>
          <span
            className="Reaction__number--reacted"
          >
            2
          </span>
        </span>
      </span>
    </span>
  </OverlayTrigger>
</button>
`;

exports[`components/post_view/Reaction should match snapshot 1`] = `
<button
  aria-label="react with smile"
  className="Reaction Reaction--unreacted "
  id="postReaction-post_id_1-smile"
  onClick={[Function]}
>
  <OverlayTrigger
    defaultOverlayShown={false}
    delayShow={500}
    onEnter={[Function]}
    overlay={
      <Tooltip
        bsClass="tooltip"
        id="post_id_1-smile-reaction"
        placement="right"
      >
        <FormattedMessage
          defaultMessage="{users} {reactionVerb} with {emoji}"
          id="reaction.reacted"
          values={
            Object {
              "emoji": <b>
                :smile:
              </b>,
              "reactionVerb": <FormattedMessage
                defaultMessage="reacted"
                id="reaction.reactionVerb.users"
              />,
              "users": <b>
                <FormattedMessage
                  defaultMessage="{users} and {otherUsers, number} other {otherUsers, plural, one {user} other {users}}"
                  id="reaction.usersAndOthersReacted"
                  values={
                    Object {
                      "otherUsers": 2,
                      "users": "username_2",
                    }
                  }
                />
              </b>,
            }
          }
        />
        <br />
        <FormattedMessage
          defaultMessage="(click to add)"
          id="reaction.clickToAdd"
        />
      </Tooltip>
    }
    placement="top"
    shouldUpdatePosition={true}
    trigger={
      Array [
        "hover",
        "focus",
      ]
    }
  >
    <span
      className="d-flex align-items-center"
    >
      <span
        className="Reaction__emoji emoticon"
        style={
          Object {
            "backgroundImage": "url(emoji_image_url)",
          }
        }
      />
      <span
        className="Reaction__count"
      >
        <span
          className="Reaction__number"
        >
          <span
            className="Reaction__number--display"
          >
            2
          </span>
          <span
            className="Reaction__number--unreacted"
            onAnimationEnd={[Function]}
          >
            2
          </span>
          <span
            className="Reaction__number--reacted"
          >
            3
          </span>
        </span>
      </span>
    </span>
  </OverlayTrigger>
</button>
`;

exports[`components/post_view/Reaction should match snapshot when a current user reacted to a post 1`] = `
<button
  aria-label="remove reaction smile"
  className="Reaction Reaction--reacted "
  id="postReaction-post_id_1-smile"
  onClick={[Function]}
>
  <OverlayTrigger
    defaultOverlayShown={false}
    delayShow={500}
    onEnter={[Function]}
    overlay={
      <Tooltip
        bsClass="tooltip"
        id="post_id_1-smile-reaction"
        placement="right"
      >
        <FormattedMessage
          defaultMessage="{users} {reactionVerb} with {emoji}"
          id="reaction.reacted"
          values={
            Object {
              "emoji": <b>
                :smile:
              </b>,
              "reactionVerb": <FormattedMessage
                defaultMessage="reacted"
                id="reaction.reactionVerb.youAndUsers"
              />,
              "users": <b>
                <FormattedMessage
                  defaultMessage="{users} and {otherUsers, number} other {otherUsers, plural, one {user} other {users}}"
                  id="reaction.usersAndOthersReacted"
                  values={
                    Object {
                      "otherUsers": 1,
                      "users": "You",
                    }
                  }
                />
              </b>,
            }
          }
        />
        <br />
        <FormattedMessage
          defaultMessage="(click to remove)"
          id="reaction.clickToRemove"
        />
      </Tooltip>
    }
    placement="top"
    shouldUpdatePosition={true}
    trigger={
      Array [
        "hover",
        "focus",
      ]
    }
  >
    <span
      className="d-flex align-items-center"
    >
      <span
        className="Reaction__emoji emoticon"
        style={
          Object {
            "backgroundImage": "url(emoji_image_url)",
          }
        }
      />
      <span
        className="Reaction__count"
      >
        <span
          className="Reaction__number"
        >
          <span
            className="Reaction__number--display"
          >
            2
          </span>
          <span
            className="Reaction__number--unreacted"
            onAnimationEnd={[Function]}
          >
            1
          </span>
          <span
            className="Reaction__number--reacted"
          >
            2
          </span>
        </span>
      </span>
    </span>
  </OverlayTrigger>
</button>
`;

exports[`components/post_view/Reaction should return null/empty if no emojiImageUrl 1`] = `""`;
