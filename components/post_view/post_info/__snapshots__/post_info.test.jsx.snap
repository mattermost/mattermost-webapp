// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/post_view/PostInfo hideEmojiPicker, should have called props.handleDropdownOpened(false) 1`] = `
<div
  className="post__header--info"
>
  <div
    className="col"
  />
  <div
    className="col col__reply"
  />
</div>
`;

exports[`components/post_view/PostInfo reactEmojiClick, should have called props.actions.addReaction() 1`] = `
<div
  className="post__header--info"
>
  <div
    className="col"
  />
  <div
    className="col col__reply"
  />
</div>
`;

exports[`components/post_view/PostInfo removePost, should have called props.actions.removePost(post) 1`] = `
<div
  className="post__header--info"
>
  <div
    className="col"
  />
  <div
    className="col col__reply"
  />
</div>
`;

exports[`components/post_view/PostInfo should match snapshot 1`] = `
<div
  className="post__header--info"
>
  <div
    className="col"
  />
  <div
    className="col col__reply"
  />
</div>
`;

exports[`components/post_view/PostInfo should match snapshot, compact display 1`] = `
<div
  className="post__header--info"
>
  <div
    className="col"
  />
  <div
    className="col col__reply"
  />
</div>
`;

exports[`components/post_view/PostInfo should match snapshot, enable emoji picker 1`] = `
<div
  className="post__header--info"
>
  <div
    className="col"
  />
  <div
    className="col col__reply"
  />
</div>
`;

exports[`components/post_view/PostInfo should match snapshot, ephemeral deleted post 1`] = `
<div
  className="post__header--info"
>
  <div
    className="col"
  />
  <div
    className="col col__remove"
  >
    <button
      className="post__remove theme color--link style--none"
      onClick={[Function]}
      type="button"
    >
      ×
    </button>
  </div>
</div>
`;

exports[`components/post_view/PostInfo should match snapshot, ephemeral post 1`] = `
<div
  className="post__header--info"
>
  <div
    className="col"
  >
    <span
      className="post__visibility"
    >
      <FormattedMessage
        defaultMessage="(Only visible to you)"
        id="post_info.message.visible"
        values={Object {}}
      />
    </span>
  </div>
  <div
    className="col col__remove"
  >
    <button
      className="post__remove theme color--link style--none"
      onClick={[Function]}
      type="button"
    >
      ×
    </button>
  </div>
</div>
`;

exports[`components/post_view/PostInfo should match snapshot, flagged post 1`] = `
<div
  className="post__header--info"
>
  <div
    className="col"
  >
    <Connect(PostFlagIcon)
      idCount={-1}
      idPrefix="centerPostFlag"
      isEphemeral={false}
      isFlagged={true}
      postId="e584uzbwwpny9kengqayx5ayzw"
    />
  </div>
  <div
    className="col col__reply"
  />
</div>
`;

exports[`components/post_view/PostInfo should match snapshot, hover 1`] = `
<div
  className="post__header--info"
>
  <div
    className="col"
  >
    <Connect(PostTime)
      eventTime={1502715365009}
      isPermalink={true}
      postId="e584uzbwwpny9kengqayx5ayzw"
    />
    <Connect(PostFlagIcon)
      idCount={-1}
      idPrefix="centerPostFlag"
      isEphemeral={false}
      isFlagged={false}
      postId="e584uzbwwpny9kengqayx5ayzw"
    />
  </div>
  <div
    className="col col__reply"
  >
    <Connect(DotMenu)
      commentCount={0}
      handleCommentClick={[MockFunction]}
      handleDropdownOpened={[Function]}
      isFlagged={false}
      location="CENTER"
      post={
        Object {
          "channel_id": "g6139tbospd18cmxroesdk3kkc",
          "create_at": 1502715365009,
          "delete_at": 0,
          "edit_at": 1502715372443,
          "hashtags": "",
          "id": "e584uzbwwpny9kengqayx5ayzw",
          "is_pinned": false,
          "message": "post message",
          "original_id": "",
          "parent_id": "",
          "pending_post_id": "",
          "props": Object {},
          "root_id": "",
          "type": "",
          "update_at": 1502715372443,
          "user_id": "b4pfxi8sn78y8yq7phzxxfor7h",
        }
      }
    />
    <CommentIcon
      commentCount={0}
      extraClass="pull-right"
      handleCommentClick={[MockFunction]}
      id="g6139tbospd18cmxroesdk3kkc_e584uzbwwpny9kengqayx5ayzw"
      idCount={-1}
      idPrefix="commentIcon"
      searchStyle=""
    />
  </div>
</div>
`;

exports[`components/post_view/PostInfo should match snapshot, military time 1`] = `
<div
  className="post__header--info"
>
  <div
    className="col"
  />
  <div
    className="col col__reply"
  />
</div>
`;

exports[`components/post_view/PostInfo should match snapshot, pinned post 1`] = `
<div
  className="post__header--info"
>
  <div
    className="col"
  >
    <span
      className="post__pinned-badge"
    >
      <FormattedMessage
        defaultMessage="Pinned"
        id="post_info.pinned"
        values={Object {}}
      />
    </span>
  </div>
  <div
    className="col col__reply"
  />
</div>
`;

exports[`components/post_view/PostInfo should match snapshot, showTimeWithoutHover 1`] = `
<div
  className="post__header--info"
>
  <div
    className="col"
  >
    <Connect(PostTime)
      eventTime={1502715365009}
      isPermalink={true}
      postId="e584uzbwwpny9kengqayx5ayzw"
    />
  </div>
  <div
    className="col col__reply"
  />
</div>
`;

exports[`components/post_view/PostInfo toggleEmojiPicker, should have called props.handleDropdownOpened 1`] = `
<div
  className="post__header--info"
>
  <div
    className="col"
  />
  <div
    className="col col__reply"
  >
    <Connect(DotMenu)
      commentCount={0}
      handleCommentClick={[MockFunction]}
      handleDropdownOpened={[Function]}
      isFlagged={false}
      location="CENTER"
      post={
        Object {
          "channel_id": "g6139tbospd18cmxroesdk3kkc",
          "create_at": 1502715365009,
          "delete_at": 0,
          "edit_at": 1502715372443,
          "hashtags": "",
          "id": "e584uzbwwpny9kengqayx5ayzw",
          "is_pinned": false,
          "message": "post message",
          "original_id": "",
          "parent_id": "",
          "pending_post_id": "",
          "props": Object {},
          "root_id": "",
          "type": "",
          "update_at": 1502715372443,
          "user_id": "b4pfxi8sn78y8yq7phzxxfor7h",
        }
      }
    />
    <Connect(ChannelPermissionGate)
      channelId="g6139tbospd18cmxroesdk3kkc"
      permissions={
        Array [
          "add_reaction",
        ]
      }
    >
      <div>
        <EmojiPickerOverlay
          container={[MockFunction]}
          enableGifPicker={false}
          onEmojiClick={[Function]}
          onHide={[Function]}
          rightOffset={7}
          show={true}
          spaceRequiredAbove={476}
          spaceRequiredBelow={497}
          target={[Function]}
        />
        <OverlayTrigger
          className="hidden-xs"
          defaultOverlayShown={false}
          delayShow={500}
          overlay={
            <Tooltip
              bsClass="tooltip"
              className="hidden-xs"
              id="reaction-icon-tooltip"
              placement="right"
            >
              <FormattedMessage
                defaultMessage="Add Reaction"
                id="post_info.tooltip.add_reactions"
                values={Object {}}
              />
            </Tooltip>
          }
          placement="top"
          trigger={
            Array [
              "hover",
              "focus",
            ]
          }
        >
          <button
            className="reacticon__container color--link style--none"
            onClick={[Function]}
          >
            <EmojiIcon
              className="icon icon--emoji"
            />
          </button>
        </OverlayTrigger>
      </div>
    </Connect(ChannelPermissionGate)>
    <CommentIcon
      commentCount={0}
      extraClass="pull-right"
      handleCommentClick={[MockFunction]}
      id="g6139tbospd18cmxroesdk3kkc_e584uzbwwpny9kengqayx5ayzw"
      idCount={-1}
      idPrefix="commentIcon"
      searchStyle=""
    />
  </div>
</div>
`;
