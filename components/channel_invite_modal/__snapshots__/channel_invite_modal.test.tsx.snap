// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/channel_invite_modal should match snapshot for channel_invite_modal with profiles 1`] = `
<Modal
  animation={true}
  aria-labelledby="channelInviteModalLabel"
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  dialogClassName="a11y__modal channel-switcher"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  id="addUsersToChannelModal"
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onExited={[MockFunction]}
  onHide={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  role="dialog"
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    closeButton={true}
    closeLabel="Close"
    id="channelInviteModalLabel"
  />
  <ModalBody
    bsClass="modal-body"
    className="overflow--visible"
    componentClass="div"
    role="application"
  >
    <div
      className="channel-switcher__header"
    >
      <h1>
        <FormattedMessage
          defaultMessage="Add people to {channel}"
          id="channel_invite.addNewMembers"
          values={
            Object {
              "channel": "testing",
            }
          }
        />
      </h1>
    </div>
    <div
      className="channel-switcher__content"
    >
      <MultiSelect
        ariaLabelRenderer={[Function]}
        buttonSubmitLoadingText="Adding..."
        buttonSubmitText="Add"
        handleAdd={[Function]}
        handleDelete={[Function]}
        handleInput={[Function]}
        handlePageChange={[Function]}
        handleSubmit={[Function]}
        key="addUsersToChannelKey"
        loading={true}
        maxValues={20}
        optionRenderer={[Function]}
        options={
          Array [
            Object {
              "delete_at": 0,
              "id": "user-1",
              "label": "user-1",
              "value": "user-1",
            },
            Object {
              "delete_at": 0,
              "id": "user-2",
              "label": "user-2",
              "value": "user-2",
            },
          ]
        }
        perPage={50}
        placeholderText="Search for people"
        saveButtonPosition="bottom"
        saving={false}
        selectedItemRef={
          Object {
            "current": null,
          }
        }
        valueWithImage={true}
        values={Array []}
      />
    </div>
  </ModalBody>
</Modal>
`;

exports[`components/channel_invite_modal should match snapshot for channel_invite_modal with userStatuses 1`] = `
<div
  className="more-modal__row clickable more-modal__row--selected"
  onClick={[Function]}
  onMouseMove={[Function]}
>
  <ProfilePicture
    hasMention={false}
    isEmoji={false}
    isRHS={false}
    size="md"
    src="/api/v4/users/user-1/image"
    status="online"
    wrapperClass=""
  />
  <div
    className="more-modal__details"
  >
    <div
      className="more-modal__name"
    >
      <span
        id="displayedUserNameundefined"
      >
        @undefined
        <span
          className="light"
        >
          
        </span>
      </span>
      <BotBadge
        className="badge-popoverlist"
        show={false}
      />
      <GuestBadge
        className="popoverlist"
        show={false}
      />
    </div>
  </div>
  <div
    className="more-modal__actions"
  >
    <div
      className="more-modal__actions--round"
    >
      <AddIcon />
    </div>
  </div>
</div>
`;

exports[`components/channel_invite_modal should match snapshot with exclude and include users 1`] = `
<Modal
  animation={true}
  aria-labelledby="channelInviteModalLabel"
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  dialogClassName="a11y__modal channel-switcher"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  id="addUsersToChannelModal"
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onExited={[MockFunction]}
  onHide={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  role="dialog"
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    closeButton={true}
    closeLabel="Close"
    id="channelInviteModalLabel"
  />
  <ModalBody
    bsClass="modal-body"
    className="overflow--visible"
    componentClass="div"
    role="application"
  >
    <div
      className="channel-switcher__header"
    >
      <h1>
        <FormattedMessage
          defaultMessage="Add people to {channel}"
          id="channel_invite.addNewMembers"
          values={
            Object {
              "channel": "testing",
            }
          }
        />
      </h1>
    </div>
    <div
      className="channel-switcher__content"
    >
      <MultiSelect
        ariaLabelRenderer={[Function]}
        buttonSubmitLoadingText="Adding..."
        buttonSubmitText="Add"
        handleAdd={[Function]}
        handleDelete={[Function]}
        handleInput={[Function]}
        handlePageChange={[Function]}
        handleSubmit={[Function]}
        key="addUsersToChannelKey"
        loading={true}
        maxValues={20}
        optionRenderer={[Function]}
        options={
          Array [
            Object {
              "delete_at": 0,
              "id": "user-2",
              "label": "user-2",
              "value": "user-2",
            },
            Object {
              "delete_at": 0,
              "id": "user-3",
              "label": "user-3",
              "value": "user-3",
            },
          ]
        }
        perPage={50}
        placeholderText="Search for people"
        saveButtonPosition="bottom"
        saving={false}
        selectedItemRef={
          Object {
            "current": null,
          }
        }
        valueWithImage={true}
        values={Array []}
      />
    </div>
  </ModalBody>
</Modal>
`;
