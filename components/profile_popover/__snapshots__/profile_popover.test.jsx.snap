// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/ProfilePopover should hide add-to-channel option if not on team 1`] = `
<Popover
  id="user-profile-popover"
  isInCurrentTeam={false}
  placement="right"
  popoverSize="sm"
  popoverStyle="info"
  title={
    <span
      data-testid="profilePopoverTitle_some_username"
    >
      <span
        className="user-popover__username"
      >
        @some_username
      </span>
    </span>
  }
>
  <Avatar
    key="user-popover-image"
    size="xxl"
    url="src"
    username="some_username"
  />
  <Connect(Pluggable)
    hide={[MockFunction]}
    key="profilePopoverPluggable2"
    pluggableName="PopoverUserAttributes"
    status="offline"
    user={
      Object {
        "name": "some name",
        "username": "some_username",
      }
    }
  />
  <div
    className="popover__row first"
    data-toggle="tooltip"
    key="user-popover-dm"
  >
    <a
      className="text-nowrap user-popover__email"
      href="#"
      onClick={[Function]}
    >
      <LocalizedIcon
        className="fa fa-paper-plane"
        component="i"
        title={
          Object {
            "defaultMessage": "Send Message Icon",
            "id": "user_profile.send.dm.icon",
          }
        }
      />
      <FormattedMessage
        defaultMessage="Send Message"
        id="user_profile.send.dm"
        values={Object {}}
      />
    </a>
  </div>
  <Connect(Pluggable)
    hide={[MockFunction]}
    key="profilePopoverPluggable3"
    pluggableName="PopoverUserActions"
    status="offline"
    user={
      Object {
        "name": "some name",
        "username": "some_username",
      }
    }
  />
</Popover>
`;

exports[`components/ProfilePopover should match snapshot 1`] = `
<Popover
  id="user-profile-popover"
  isInCurrentTeam={true}
  placement="right"
  popoverSize="sm"
  popoverStyle="info"
  title={
    <span
      data-testid="profilePopoverTitle_some_username"
    >
      <span
        className="user-popover__username"
      >
        @some_username
      </span>
    </span>
  }
>
  <Avatar
    key="user-popover-image"
    size="xxl"
    url="src"
    username="some_username"
  />
  <Connect(Pluggable)
    hide={[MockFunction]}
    key="profilePopoverPluggable2"
    pluggableName="PopoverUserAttributes"
    status="offline"
    user={
      Object {
        "name": "some name",
        "username": "some_username",
      }
    }
  />
  <div
    className="popover__row first"
    data-toggle="tooltip"
    key="user-popover-dm"
  >
    <a
      className="text-nowrap user-popover__email"
      href="#"
      onClick={[Function]}
    >
      <LocalizedIcon
        className="fa fa-paper-plane"
        component="i"
        title={
          Object {
            "defaultMessage": "Send Message Icon",
            "id": "user_profile.send.dm.icon",
          }
        }
      />
      <FormattedMessage
        defaultMessage="Send Message"
        id="user_profile.send.dm"
        values={Object {}}
      />
    </a>
  </div>
  <div
    className="popover__row first"
    data-toggle="tooltip"
    key="user-popover-add-to-channel"
  >
    <a
      className="text-nowrap"
      href="#"
    >
      <Connect(InjectIntl(ModalToggleButtonRedux))
        accessibilityLabel="Add to a Channel"
        dialogProps={
          Object {
            "user": Object {
              "name": "some name",
              "username": "some_username",
            },
          }
        }
        dialogType={[Function]}
        modalId="add_user_to_channel"
        onClick={[MockFunction]}
        role="menuitem"
      >
        <LocalizedIcon
          className="fa fa-user-plus"
          component="i"
          title={
            Object {
              "defaultMessage": "Add User to Channel Icon",
              "id": "user_profile.add_user_to_channel.icon",
            }
          }
        />
        Add to a Channel
      </Connect(InjectIntl(ModalToggleButtonRedux))>
    </a>
  </div>
  <Connect(Pluggable)
    hide={[MockFunction]}
    key="profilePopoverPluggable3"
    pluggableName="PopoverUserActions"
    status="offline"
    user={
      Object {
        "name": "some name",
        "username": "some_username",
      }
    }
  />
</Popover>
`;
