// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/ProfilePopover should disable start call button when user is in another call 1`] = `
<Popover
  customStatus={null}
  enableLastActiveTime={true}
  id="user-profile-popover"
  isCallsDefaultEnabledOnAllChannels={true}
  isCallsEnabled={true}
  isCustomStatusEnabled={true}
  isCustomStatusExpired={false}
  isInCurrentTeam={true}
  isMobileView={false}
  isUserInCall={true}
  lastActivityTimestamp={1632146562846}
  placement="right"
  popoverSize="sm"
  popoverStyle="info"
  teammateNameDisplay="username"
  timestampUnits={
    Array [
      "now",
      "minute",
      "hour",
    ]
  }
>
  <span
    onFocus={[Function]}
    tabIndex={0}
  />
  <div
    aria-label="Profile for some_username"
    className="a11y__popup"
    onKeyDown={[Function]}
    role="dialog"
  >
    <div
      className="popover-title popover-title_height"
    >
      <span
        data-testid="profilePopoverTitle_some_username"
      >
        <button
          className="user-popover__close"
          onClick={[Function]}
          tabIndex={-1}
        >
          <CloseIcon
            size={18}
          />
        </button>
      </span>
    </div>
    <div
      className="user-profile-popover__content"
    >
      <div
        className="user-popover-image"
        key="user-popover-image"
      >
        <Memo(Avatar)
          id="userAvatar"
          size="xxl"
          tabIndex={-1}
          url="src"
          username="some_username"
        />
        <StatusIcon
          button={true}
          className="status user-popover-status"
          status="offline"
        />
      </div>
      <div
        className="user-popover-last-active"
        key="user-popover-last-active"
      >
        <MemoizedFormattedMessage
          defaultMessage="Last online {timestamp}"
          id="channel_header.lastActive"
          values={
            Object {
              "timestamp": <Memo(Connect(injectIntl(Timestamp)))
                style="short"
                units={
                  Array [
                    "now",
                    "minute",
                    "hour",
                  ]
                }
                useTime={false}
                value={1632146562846}
              />,
            }
          }
        />
      </div>
      <div
        className="overflow--ellipsis pb-1 user-profile-popover__heading"
        key="user-popover-username"
      >
        @some_username
      </div>
      <hr
        className="divider divider--expanded"
        key="user-popover-hr"
      />
      <Connect(Pluggable)
        hide={[MockFunction]}
        key="profilePopoverPluggable2"
        pluggableName="PopoverUserAttributes"
        status="offline"
        user={
          Object {
            "auth_service": "",
            "bot_description": "",
            "create_at": 0,
            "delete_at": 0,
            "email": "",
            "first_name": "",
            "id": "user_id",
            "is_bot": false,
            "last_activity_at": 0,
            "last_name": "",
            "last_password_update": 0,
            "last_picture_update": 0,
            "locale": "",
            "mfa_active": false,
            "nickname": "",
            "notify_props": Object {
              "channel": "false",
              "comments": "never",
              "desktop": "default",
              "desktop_sound": "false",
              "email": "false",
              "first_name": "false",
              "mark_unread": "mention",
              "mention_keys": "",
              "push": "none",
              "push_status": "offline",
            },
            "password": "",
            "position": "",
            "props": Object {},
            "roles": "",
            "terms_of_service_create_at": 0,
            "terms_of_service_id": "",
            "update_at": 0,
            "username": "some_username",
          }
        }
      />
      <div
        className="popover__row first"
        data-toggle="tooltip"
        key="user-popover-dm"
      >
        <button
          className="btn"
          id="messageButton"
          onClick={[Function]}
          type="button"
        >
          <SendIcon
            aria-label="Send Message Icon"
            size={16}
          />
          <MemoizedFormattedMessage
            defaultMessage="Message"
            id="user_profile.send.dm"
          />
        </button>
        <div
          className="popover_row-controlContainer"
        >
          <OverlayTrigger
            defaultOverlayShown={false}
            delayShow={400}
            overlay={
              <Tooltip
                id="addToChannelTooltip"
              >
                Add to a Channel
              </Tooltip>
            }
            placement="top"
            trigger={
              Array [
                "hover",
                "focus",
              ]
            }
          >
            <a>
              <Connect(ToggleModalButton)
                ariaLabel="Add to a Channel"
                className="btn icon-btn"
                dialogProps={
                  Object {
                    "onExited": [Function],
                    "user": Object {
                      "auth_service": "",
                      "bot_description": "",
                      "create_at": 0,
                      "delete_at": 0,
                      "email": "",
                      "first_name": "",
                      "id": "user_id",
                      "is_bot": false,
                      "last_activity_at": 0,
                      "last_name": "",
                      "last_password_update": 0,
                      "last_picture_update": 0,
                      "locale": "",
                      "mfa_active": false,
                      "nickname": "",
                      "notify_props": Object {
                        "channel": "false",
                        "comments": "never",
                        "desktop": "default",
                        "desktop_sound": "false",
                        "email": "false",
                        "first_name": "false",
                        "mark_unread": "mention",
                        "mention_keys": "",
                        "push": "none",
                        "push_status": "offline",
                      },
                      "password": "",
                      "position": "",
                      "props": Object {},
                      "roles": "",
                      "terms_of_service_create_at": 0,
                      "terms_of_service_id": "",
                      "update_at": 0,
                      "username": "some_username",
                    },
                  }
                }
                dialogType={
                  Object {
                    "$$typeof": Symbol(react.memo),
                    "WrappedComponent": [Function],
                    "compare": null,
                    "displayName": "Connect(AddUserToChannelModal)",
                    "type": [Function],
                  }
                }
                modalId="add_user_to_channel"
                onClick={[Function]}
              >
                <AccountPlusOutlineIcon
                  aria-label="Add User to Channel Icon"
                  size={18}
                />
              </Connect(ToggleModalButton)>
            </a>
          </OverlayTrigger>
          <OverlayTrigger
            defaultOverlayShown={false}
            delayShow={400}
            overlay={
              <Tooltip
                id="startCallTooltip"
              >
                some_username is in another call
              </Tooltip>
            }
            placement="top"
            trigger={
              Array [
                "hover",
                "focus",
              ]
            }
          >
            <button
              className="btn icon-btn icon-btn-disabled"
              id="startCallButton"
              type="button"
            >
              <PhoneInTalkIcon
                aria-label="some_username is in another call"
                size={18}
              />
            </button>
          </OverlayTrigger>
        </div>
      </div>
      <Connect(Pluggable)
        hide={[MockFunction]}
        key="profilePopoverPluggable3"
        pluggableName="PopoverUserActions"
        status="offline"
        user={
          Object {
            "auth_service": "",
            "bot_description": "",
            "create_at": 0,
            "delete_at": 0,
            "email": "",
            "first_name": "",
            "id": "user_id",
            "is_bot": false,
            "last_activity_at": 0,
            "last_name": "",
            "last_password_update": 0,
            "last_picture_update": 0,
            "locale": "",
            "mfa_active": false,
            "nickname": "",
            "notify_props": Object {
              "channel": "false",
              "comments": "never",
              "desktop": "default",
              "desktop_sound": "false",
              "email": "false",
              "first_name": "false",
              "mark_unread": "mention",
              "mention_keys": "",
              "push": "none",
              "push_status": "offline",
            },
            "password": "",
            "position": "",
            "props": Object {},
            "roles": "",
            "terms_of_service_create_at": 0,
            "terms_of_service_id": "",
            "update_at": 0,
            "username": "some_username",
          }
        }
      />
    </div>
  </div>
  <span
    onFocus={[Function]}
    tabIndex={0}
  />
</Popover>
`;

exports[`components/ProfilePopover should disable start call button when user is in another call 2`] = `
<Popover
  customStatus={null}
  enableLastActiveTime={true}
  id="user-profile-popover"
  isCallsDefaultEnabledOnAllChannels={true}
  isCallsEnabled={true}
  isCurrentUserInCall={true}
  isCustomStatusEnabled={true}
  isCustomStatusExpired={false}
  isInCurrentTeam={true}
  isMobileView={false}
  lastActivityTimestamp={1632146562846}
  placement="right"
  popoverSize="sm"
  popoverStyle="info"
  teammateNameDisplay="username"
  timestampUnits={
    Array [
      "now",
      "minute",
      "hour",
    ]
  }
>
  <span
    onFocus={[Function]}
    tabIndex={0}
  />
  <div
    aria-label="Profile for some_username"
    className="a11y__popup"
    onKeyDown={[Function]}
    role="dialog"
  >
    <div
      className="popover-title popover-title_height"
    >
      <span
        data-testid="profilePopoverTitle_some_username"
      >
        <button
          className="user-popover__close"
          onClick={[Function]}
          tabIndex={-1}
        >
          <CloseIcon
            size={18}
          />
        </button>
      </span>
    </div>
    <div
      className="user-profile-popover__content"
    >
      <div
        className="user-popover-image"
        key="user-popover-image"
      >
        <Memo(Avatar)
          id="userAvatar"
          size="xxl"
          tabIndex={-1}
          url="src"
          username="some_username"
        />
        <StatusIcon
          button={true}
          className="status user-popover-status"
          status="offline"
        />
      </div>
      <div
        className="user-popover-last-active"
        key="user-popover-last-active"
      >
        <MemoizedFormattedMessage
          defaultMessage="Last online {timestamp}"
          id="channel_header.lastActive"
          values={
            Object {
              "timestamp": <Memo(Connect(injectIntl(Timestamp)))
                style="short"
                units={
                  Array [
                    "now",
                    "minute",
                    "hour",
                  ]
                }
                useTime={false}
                value={1632146562846}
              />,
            }
          }
        />
      </div>
      <div
        className="overflow--ellipsis pb-1 user-profile-popover__heading"
        key="user-popover-username"
      >
        @some_username
      </div>
      <hr
        className="divider divider--expanded"
        key="user-popover-hr"
      />
      <Connect(Pluggable)
        hide={[MockFunction]}
        key="profilePopoverPluggable2"
        pluggableName="PopoverUserAttributes"
        status="offline"
        user={
          Object {
            "auth_service": "",
            "bot_description": "",
            "create_at": 0,
            "delete_at": 0,
            "email": "",
            "first_name": "",
            "id": "user_id",
            "is_bot": false,
            "last_activity_at": 0,
            "last_name": "",
            "last_password_update": 0,
            "last_picture_update": 0,
            "locale": "",
            "mfa_active": false,
            "nickname": "",
            "notify_props": Object {
              "channel": "false",
              "comments": "never",
              "desktop": "default",
              "desktop_sound": "false",
              "email": "false",
              "first_name": "false",
              "mark_unread": "mention",
              "mention_keys": "",
              "push": "none",
              "push_status": "offline",
            },
            "password": "",
            "position": "",
            "props": Object {},
            "roles": "",
            "terms_of_service_create_at": 0,
            "terms_of_service_id": "",
            "update_at": 0,
            "username": "some_username",
          }
        }
      />
      <div
        className="popover__row first"
        data-toggle="tooltip"
        key="user-popover-dm"
      >
        <button
          className="btn"
          id="messageButton"
          onClick={[Function]}
          type="button"
        >
          <SendIcon
            aria-label="Send Message Icon"
            size={16}
          />
          <MemoizedFormattedMessage
            defaultMessage="Message"
            id="user_profile.send.dm"
          />
        </button>
        <div
          className="popover_row-controlContainer"
        >
          <OverlayTrigger
            defaultOverlayShown={false}
            delayShow={400}
            overlay={
              <Tooltip
                id="addToChannelTooltip"
              >
                Add to a Channel
              </Tooltip>
            }
            placement="top"
            trigger={
              Array [
                "hover",
                "focus",
              ]
            }
          >
            <a>
              <Connect(ToggleModalButton)
                ariaLabel="Add to a Channel"
                className="btn icon-btn"
                dialogProps={
                  Object {
                    "onExited": [Function],
                    "user": Object {
                      "auth_service": "",
                      "bot_description": "",
                      "create_at": 0,
                      "delete_at": 0,
                      "email": "",
                      "first_name": "",
                      "id": "user_id",
                      "is_bot": false,
                      "last_activity_at": 0,
                      "last_name": "",
                      "last_password_update": 0,
                      "last_picture_update": 0,
                      "locale": "",
                      "mfa_active": false,
                      "nickname": "",
                      "notify_props": Object {
                        "channel": "false",
                        "comments": "never",
                        "desktop": "default",
                        "desktop_sound": "false",
                        "email": "false",
                        "first_name": "false",
                        "mark_unread": "mention",
                        "mention_keys": "",
                        "push": "none",
                        "push_status": "offline",
                      },
                      "password": "",
                      "position": "",
                      "props": Object {},
                      "roles": "",
                      "terms_of_service_create_at": 0,
                      "terms_of_service_id": "",
                      "update_at": 0,
                      "username": "some_username",
                    },
                  }
                }
                dialogType={
                  Object {
                    "$$typeof": Symbol(react.memo),
                    "WrappedComponent": [Function],
                    "compare": null,
                    "displayName": "Connect(AddUserToChannelModal)",
                    "type": [Function],
                  }
                }
                modalId="add_user_to_channel"
                onClick={[Function]}
              >
                <AccountPlusOutlineIcon
                  aria-label="Add User to Channel Icon"
                  size={18}
                />
              </Connect(ToggleModalButton)>
            </a>
          </OverlayTrigger>
          <OverlayTrigger
            defaultOverlayShown={false}
            delayShow={400}
            overlay={
              <Tooltip
                id="startCallTooltip"
              >
                Start Call
              </Tooltip>
            }
            placement="top"
            trigger={
              Array [
                "hover",
                "focus",
              ]
            }
          >
            <button
              className="btn icon-btn icon-btn-disabled"
              id="startCallButton"
              type="button"
            >
              <PhoneInTalkIcon
                aria-label="Start Call"
                size={18}
              />
            </button>
          </OverlayTrigger>
        </div>
      </div>
      <Connect(Pluggable)
        hide={[MockFunction]}
        key="profilePopoverPluggable3"
        pluggableName="PopoverUserActions"
        status="offline"
        user={
          Object {
            "auth_service": "",
            "bot_description": "",
            "create_at": 0,
            "delete_at": 0,
            "email": "",
            "first_name": "",
            "id": "user_id",
            "is_bot": false,
            "last_activity_at": 0,
            "last_name": "",
            "last_password_update": 0,
            "last_picture_update": 0,
            "locale": "",
            "mfa_active": false,
            "nickname": "",
            "notify_props": Object {
              "channel": "false",
              "comments": "never",
              "desktop": "default",
              "desktop_sound": "false",
              "email": "false",
              "first_name": "false",
              "mark_unread": "mention",
              "mention_keys": "",
              "push": "none",
              "push_status": "offline",
            },
            "password": "",
            "position": "",
            "props": Object {},
            "roles": "",
            "terms_of_service_create_at": 0,
            "terms_of_service_id": "",
            "update_at": 0,
            "username": "some_username",
          }
        }
      />
    </div>
  </div>
  <span
    onFocus={[Function]}
    tabIndex={0}
  />
</Popover>
`;

exports[`components/ProfilePopover should hide add-to-channel option if not on team 1`] = `
<Popover
  customStatus={null}
  enableLastActiveTime={true}
  id="user-profile-popover"
  isCallsDefaultEnabledOnAllChannels={true}
  isCallsEnabled={true}
  isCustomStatusEnabled={true}
  isCustomStatusExpired={false}
  isInCurrentTeam={false}
  isMobileView={false}
  lastActivityTimestamp={1632146562846}
  placement="right"
  popoverSize="sm"
  popoverStyle="info"
  teammateNameDisplay="username"
  timestampUnits={
    Array [
      "now",
      "minute",
      "hour",
    ]
  }
>
  <span
    onFocus={[Function]}
    tabIndex={0}
  />
  <div
    aria-label="Profile for some_username"
    className="a11y__popup"
    onKeyDown={[Function]}
    role="dialog"
  >
    <div
      className="popover-title popover-title_height"
    >
      <span
        data-testid="profilePopoverTitle_some_username"
      >
        <button
          className="user-popover__close"
          onClick={[Function]}
          tabIndex={-1}
        >
          <CloseIcon
            size={18}
          />
        </button>
      </span>
    </div>
    <div
      className="user-profile-popover__content"
    >
      <div
        className="user-popover-image"
        key="user-popover-image"
      >
        <Memo(Avatar)
          id="userAvatar"
          size="xxl"
          tabIndex={-1}
          url="src"
          username="some_username"
        />
        <StatusIcon
          button={true}
          className="status user-popover-status"
          status="offline"
        />
      </div>
      <div
        className="user-popover-last-active"
        key="user-popover-last-active"
      >
        <MemoizedFormattedMessage
          defaultMessage="Last online {timestamp}"
          id="channel_header.lastActive"
          values={
            Object {
              "timestamp": <Memo(Connect(injectIntl(Timestamp)))
                style="short"
                units={
                  Array [
                    "now",
                    "minute",
                    "hour",
                  ]
                }
                useTime={false}
                value={1632146562846}
              />,
            }
          }
        />
      </div>
      <div
        className="overflow--ellipsis pb-1 user-profile-popover__heading"
        key="user-popover-username"
      >
        @some_username
      </div>
      <hr
        className="divider divider--expanded"
        key="user-popover-hr"
      />
      <Connect(Pluggable)
        hide={[MockFunction]}
        key="profilePopoverPluggable2"
        pluggableName="PopoverUserAttributes"
        status="offline"
        user={
          Object {
            "auth_service": "",
            "bot_description": "",
            "create_at": 0,
            "delete_at": 0,
            "email": "",
            "first_name": "",
            "id": "user_id",
            "is_bot": false,
            "last_activity_at": 0,
            "last_name": "",
            "last_password_update": 0,
            "last_picture_update": 0,
            "locale": "",
            "mfa_active": false,
            "nickname": "",
            "notify_props": Object {
              "channel": "false",
              "comments": "never",
              "desktop": "default",
              "desktop_sound": "false",
              "email": "false",
              "first_name": "false",
              "mark_unread": "mention",
              "mention_keys": "",
              "push": "none",
              "push_status": "offline",
            },
            "password": "",
            "position": "",
            "props": Object {},
            "roles": "",
            "terms_of_service_create_at": 0,
            "terms_of_service_id": "",
            "update_at": 0,
            "username": "some_username",
          }
        }
      />
      <div
        className="popover__row first"
        data-toggle="tooltip"
        key="user-popover-dm"
      >
        <button
          className="btn"
          id="messageButton"
          onClick={[Function]}
          type="button"
        >
          <SendIcon
            aria-label="Send Message Icon"
            size={16}
          />
          <MemoizedFormattedMessage
            defaultMessage="Message"
            id="user_profile.send.dm"
          />
        </button>
        <div
          className="popover_row-controlContainer"
        >
          <Connect(CallButton)
            customButton={
              <OverlayTrigger
                defaultOverlayShown={false}
                delayShow={400}
                overlay={
                  <Tooltip
                    id="startCallTooltip"
                  >
                    Start Call
                  </Tooltip>
                }
                placement="top"
                trigger={
                  Array [
                    "hover",
                    "focus",
                  ]
                }
              >
                <button
                  className="btn icon-btn"
                  id="startCallButton"
                  type="button"
                >
                  <PhoneInTalkIcon
                    aria-label="Start Call"
                    size={18}
                  />
                </button>
              </OverlayTrigger>
            }
          />
        </div>
      </div>
      <Connect(Pluggable)
        hide={[MockFunction]}
        key="profilePopoverPluggable3"
        pluggableName="PopoverUserActions"
        status="offline"
        user={
          Object {
            "auth_service": "",
            "bot_description": "",
            "create_at": 0,
            "delete_at": 0,
            "email": "",
            "first_name": "",
            "id": "user_id",
            "is_bot": false,
            "last_activity_at": 0,
            "last_name": "",
            "last_password_update": 0,
            "last_picture_update": 0,
            "locale": "",
            "mfa_active": false,
            "nickname": "",
            "notify_props": Object {
              "channel": "false",
              "comments": "never",
              "desktop": "default",
              "desktop_sound": "false",
              "email": "false",
              "first_name": "false",
              "mark_unread": "mention",
              "mention_keys": "",
              "push": "none",
              "push_status": "offline",
            },
            "password": "",
            "position": "",
            "props": Object {},
            "roles": "",
            "terms_of_service_create_at": 0,
            "terms_of_service_id": "",
            "update_at": 0,
            "username": "some_username",
          }
        }
      />
    </div>
  </div>
  <span
    onFocus={[Function]}
    tabIndex={0}
  />
</Popover>
`;

exports[`components/ProfilePopover should match snapshot 1`] = `
<Popover
  customStatus={null}
  enableLastActiveTime={true}
  id="user-profile-popover"
  isCallsDefaultEnabledOnAllChannels={true}
  isCallsEnabled={true}
  isCustomStatusEnabled={true}
  isCustomStatusExpired={false}
  isInCurrentTeam={true}
  isMobileView={false}
  lastActivityTimestamp={1632146562846}
  placement="right"
  popoverSize="sm"
  popoverStyle="info"
  teammateNameDisplay="username"
  timestampUnits={
    Array [
      "now",
      "minute",
      "hour",
    ]
  }
>
  <span
    onFocus={[Function]}
    tabIndex={0}
  />
  <div
    aria-label="Profile for some_username"
    className="a11y__popup"
    onKeyDown={[Function]}
    role="dialog"
  >
    <div
      className="popover-title popover-title_height"
    >
      <span
        data-testid="profilePopoverTitle_some_username"
      >
        <button
          className="user-popover__close"
          onClick={[Function]}
          tabIndex={-1}
        >
          <CloseIcon
            size={18}
          />
        </button>
      </span>
    </div>
    <div
      className="user-profile-popover__content"
    >
      <div
        className="user-popover-image"
        key="user-popover-image"
      >
        <Memo(Avatar)
          id="userAvatar"
          size="xxl"
          tabIndex={-1}
          url="src"
          username="some_username"
        />
        <StatusIcon
          button={true}
          className="status user-popover-status"
          status="offline"
        />
      </div>
      <div
        className="user-popover-last-active"
        key="user-popover-last-active"
      >
        <MemoizedFormattedMessage
          defaultMessage="Last online {timestamp}"
          id="channel_header.lastActive"
          values={
            Object {
              "timestamp": <Memo(Connect(injectIntl(Timestamp)))
                style="short"
                units={
                  Array [
                    "now",
                    "minute",
                    "hour",
                  ]
                }
                useTime={false}
                value={1632146562846}
              />,
            }
          }
        />
      </div>
      <div
        className="overflow--ellipsis pb-1 user-profile-popover__heading"
        key="user-popover-username"
      >
        @some_username
      </div>
      <hr
        className="divider divider--expanded"
        key="user-popover-hr"
      />
      <Connect(Pluggable)
        hide={[MockFunction]}
        key="profilePopoverPluggable2"
        pluggableName="PopoverUserAttributes"
        status="offline"
        user={
          Object {
            "auth_service": "",
            "bot_description": "",
            "create_at": 0,
            "delete_at": 0,
            "email": "",
            "first_name": "",
            "id": "user_id",
            "is_bot": false,
            "last_activity_at": 0,
            "last_name": "",
            "last_password_update": 0,
            "last_picture_update": 0,
            "locale": "",
            "mfa_active": false,
            "nickname": "",
            "notify_props": Object {
              "channel": "false",
              "comments": "never",
              "desktop": "default",
              "desktop_sound": "false",
              "email": "false",
              "first_name": "false",
              "mark_unread": "mention",
              "mention_keys": "",
              "push": "none",
              "push_status": "offline",
            },
            "password": "",
            "position": "",
            "props": Object {},
            "roles": "",
            "terms_of_service_create_at": 0,
            "terms_of_service_id": "",
            "update_at": 0,
            "username": "some_username",
          }
        }
      />
      <div
        className="popover__row first"
        data-toggle="tooltip"
        key="user-popover-dm"
      >
        <button
          className="btn"
          id="messageButton"
          onClick={[Function]}
          type="button"
        >
          <SendIcon
            aria-label="Send Message Icon"
            size={16}
          />
          <MemoizedFormattedMessage
            defaultMessage="Message"
            id="user_profile.send.dm"
          />
        </button>
        <div
          className="popover_row-controlContainer"
        >
          <OverlayTrigger
            defaultOverlayShown={false}
            delayShow={400}
            overlay={
              <Tooltip
                id="addToChannelTooltip"
              >
                Add to a Channel
              </Tooltip>
            }
            placement="top"
            trigger={
              Array [
                "hover",
                "focus",
              ]
            }
          >
            <a>
              <Connect(ToggleModalButton)
                ariaLabel="Add to a Channel"
                className="btn icon-btn"
                dialogProps={
                  Object {
                    "onExited": [Function],
                    "user": Object {
                      "auth_service": "",
                      "bot_description": "",
                      "create_at": 0,
                      "delete_at": 0,
                      "email": "",
                      "first_name": "",
                      "id": "user_id",
                      "is_bot": false,
                      "last_activity_at": 0,
                      "last_name": "",
                      "last_password_update": 0,
                      "last_picture_update": 0,
                      "locale": "",
                      "mfa_active": false,
                      "nickname": "",
                      "notify_props": Object {
                        "channel": "false",
                        "comments": "never",
                        "desktop": "default",
                        "desktop_sound": "false",
                        "email": "false",
                        "first_name": "false",
                        "mark_unread": "mention",
                        "mention_keys": "",
                        "push": "none",
                        "push_status": "offline",
                      },
                      "password": "",
                      "position": "",
                      "props": Object {},
                      "roles": "",
                      "terms_of_service_create_at": 0,
                      "terms_of_service_id": "",
                      "update_at": 0,
                      "username": "some_username",
                    },
                  }
                }
                dialogType={
                  Object {
                    "$$typeof": Symbol(react.memo),
                    "WrappedComponent": [Function],
                    "compare": null,
                    "displayName": "Connect(AddUserToChannelModal)",
                    "type": [Function],
                  }
                }
                modalId="add_user_to_channel"
                onClick={[Function]}
              >
                <AccountPlusOutlineIcon
                  aria-label="Add User to Channel Icon"
                  size={18}
                />
              </Connect(ToggleModalButton)>
            </a>
          </OverlayTrigger>
          <Connect(CallButton)
            customButton={
              <OverlayTrigger
                defaultOverlayShown={false}
                delayShow={400}
                overlay={
                  <Tooltip
                    id="startCallTooltip"
                  >
                    Start Call
                  </Tooltip>
                }
                placement="top"
                trigger={
                  Array [
                    "hover",
                    "focus",
                  ]
                }
              >
                <button
                  className="btn icon-btn"
                  id="startCallButton"
                  type="button"
                >
                  <PhoneInTalkIcon
                    aria-label="Start Call"
                    size={18}
                  />
                </button>
              </OverlayTrigger>
            }
          />
        </div>
      </div>
      <Connect(Pluggable)
        hide={[MockFunction]}
        key="profilePopoverPluggable3"
        pluggableName="PopoverUserActions"
        status="offline"
        user={
          Object {
            "auth_service": "",
            "bot_description": "",
            "create_at": 0,
            "delete_at": 0,
            "email": "",
            "first_name": "",
            "id": "user_id",
            "is_bot": false,
            "last_activity_at": 0,
            "last_name": "",
            "last_password_update": 0,
            "last_picture_update": 0,
            "locale": "",
            "mfa_active": false,
            "nickname": "",
            "notify_props": Object {
              "channel": "false",
              "comments": "never",
              "desktop": "default",
              "desktop_sound": "false",
              "email": "false",
              "first_name": "false",
              "mark_unread": "mention",
              "mention_keys": "",
              "push": "none",
              "push_status": "offline",
            },
            "password": "",
            "position": "",
            "props": Object {},
            "roles": "",
            "terms_of_service_create_at": 0,
            "terms_of_service_id": "",
            "update_at": 0,
            "username": "some_username",
          }
        }
      />
    </div>
  </div>
  <span
    onFocus={[Function]}
    tabIndex={0}
  />
</Popover>
`;

exports[`components/ProfilePopover should match snapshot for shared user 1`] = `
<Popover
  customStatus={null}
  enableLastActiveTime={true}
  id="user-profile-popover"
  isCallsDefaultEnabledOnAllChannels={true}
  isCallsEnabled={true}
  isCustomStatusEnabled={true}
  isCustomStatusExpired={false}
  isInCurrentTeam={true}
  isMobileView={false}
  lastActivityTimestamp={1632146562846}
  placement="right"
  popoverSize="sm"
  popoverStyle="info"
  teammateNameDisplay="username"
  timestampUnits={
    Array [
      "now",
      "minute",
      "hour",
    ]
  }
>
  <span
    onFocus={[Function]}
    tabIndex={0}
  />
  <div
    aria-label="Profile for shared_user"
    className="a11y__popup"
    onKeyDown={[Function]}
    role="dialog"
  >
    <div
      className="popover-title popover-title_height"
    >
      <span
        data-testid="profilePopoverTitle_shared_user"
      >
        <button
          className="user-popover__close"
          onClick={[Function]}
          tabIndex={-1}
        >
          <CloseIcon
            size={18}
          />
        </button>
      </span>
    </div>
    <div
      className="user-profile-popover__content"
    >
      <div
        className="user-popover-image"
        key="user-popover-image"
      >
        <Memo(Avatar)
          id="userAvatar"
          size="xxl"
          tabIndex={-1}
          url="src"
          username="shared_user"
        />
        <StatusIcon
          button={true}
          className="status user-popover-status"
          status="offline"
        />
      </div>
      <div
        className="user-popover-last-active"
        key="user-popover-last-active"
      >
        <MemoizedFormattedMessage
          defaultMessage="Last online {timestamp}"
          id="channel_header.lastActive"
          values={
            Object {
              "timestamp": <Memo(Connect(injectIntl(Timestamp)))
                style="short"
                units={
                  Array [
                    "now",
                    "minute",
                    "hour",
                  ]
                }
                useTime={false}
                value={1632146562846}
              />,
            }
          }
        />
      </div>
      <div
        className="overflow--ellipsis pb-1"
        data-testid="popover-fullname-shared_user"
        key="user-popover-fullname"
      >
        <span
          className="user-profile-popover__heading"
        >
          shared
        </span>
        <SharedUserIndicator
          className="shared-user-icon"
          withTooltip={true}
        />
      </div>
      <div
        className="overflow--ellipsis pb-1"
        key="user-popover-username"
      >
        @shared_user
      </div>
      <hr
        className="divider divider--expanded"
        key="user-popover-hr"
      />
      <Connect(Pluggable)
        hide={[MockFunction]}
        key="profilePopoverPluggable2"
        pluggableName="PopoverUserAttributes"
        status="offline"
        user={
          Object {
            "auth_service": "",
            "bot_description": "",
            "create_at": 0,
            "delete_at": 0,
            "email": "",
            "first_name": "shared",
            "id": "user_id",
            "is_bot": false,
            "last_activity_at": 0,
            "last_name": "",
            "last_password_update": 0,
            "last_picture_update": 0,
            "locale": "",
            "mfa_active": false,
            "nickname": "",
            "notify_props": Object {
              "channel": "false",
              "comments": "never",
              "desktop": "default",
              "desktop_sound": "false",
              "email": "false",
              "first_name": "false",
              "mark_unread": "mention",
              "mention_keys": "",
              "push": "none",
              "push_status": "offline",
            },
            "password": "",
            "position": "",
            "props": Object {},
            "remote_id": "fakeuser",
            "roles": "",
            "terms_of_service_create_at": 0,
            "terms_of_service_id": "",
            "update_at": 0,
            "username": "shared_user",
          }
        }
      />
      <div
        className="popover__row first"
        data-toggle="tooltip"
        key="user-popover-dm"
      >
        <button
          className="btn"
          id="messageButton"
          onClick={[Function]}
          type="button"
        >
          <SendIcon
            aria-label="Send Message Icon"
            size={16}
          />
          <MemoizedFormattedMessage
            defaultMessage="Message"
            id="user_profile.send.dm"
          />
        </button>
        <div
          className="popover_row-controlContainer"
        >
          <OverlayTrigger
            defaultOverlayShown={false}
            delayShow={400}
            overlay={
              <Tooltip
                id="addToChannelTooltip"
              >
                Add to a Channel
              </Tooltip>
            }
            placement="top"
            trigger={
              Array [
                "hover",
                "focus",
              ]
            }
          >
            <a>
              <Connect(ToggleModalButton)
                ariaLabel="Add to a Channel"
                className="btn icon-btn"
                dialogProps={
                  Object {
                    "onExited": [Function],
                    "user": Object {
                      "auth_service": "",
                      "bot_description": "",
                      "create_at": 0,
                      "delete_at": 0,
                      "email": "",
                      "first_name": "shared",
                      "id": "user_id",
                      "is_bot": false,
                      "last_activity_at": 0,
                      "last_name": "",
                      "last_password_update": 0,
                      "last_picture_update": 0,
                      "locale": "",
                      "mfa_active": false,
                      "nickname": "",
                      "notify_props": Object {
                        "channel": "false",
                        "comments": "never",
                        "desktop": "default",
                        "desktop_sound": "false",
                        "email": "false",
                        "first_name": "false",
                        "mark_unread": "mention",
                        "mention_keys": "",
                        "push": "none",
                        "push_status": "offline",
                      },
                      "password": "",
                      "position": "",
                      "props": Object {},
                      "remote_id": "fakeuser",
                      "roles": "",
                      "terms_of_service_create_at": 0,
                      "terms_of_service_id": "",
                      "update_at": 0,
                      "username": "shared_user",
                    },
                  }
                }
                dialogType={
                  Object {
                    "$$typeof": Symbol(react.memo),
                    "WrappedComponent": [Function],
                    "compare": null,
                    "displayName": "Connect(AddUserToChannelModal)",
                    "type": [Function],
                  }
                }
                modalId="add_user_to_channel"
                onClick={[Function]}
              >
                <AccountPlusOutlineIcon
                  aria-label="Add User to Channel Icon"
                  size={18}
                />
              </Connect(ToggleModalButton)>
            </a>
          </OverlayTrigger>
          <Connect(CallButton)
            customButton={
              <OverlayTrigger
                defaultOverlayShown={false}
                delayShow={400}
                overlay={
                  <Tooltip
                    id="startCallTooltip"
                  >
                    Start Call
                  </Tooltip>
                }
                placement="top"
                trigger={
                  Array [
                    "hover",
                    "focus",
                  ]
                }
              >
                <button
                  className="btn icon-btn"
                  id="startCallButton"
                  type="button"
                >
                  <PhoneInTalkIcon
                    aria-label="Start Call"
                    size={18}
                  />
                </button>
              </OverlayTrigger>
            }
          />
        </div>
      </div>
      <Connect(Pluggable)
        hide={[MockFunction]}
        key="profilePopoverPluggable3"
        pluggableName="PopoverUserActions"
        status="offline"
        user={
          Object {
            "auth_service": "",
            "bot_description": "",
            "create_at": 0,
            "delete_at": 0,
            "email": "",
            "first_name": "shared",
            "id": "user_id",
            "is_bot": false,
            "last_activity_at": 0,
            "last_name": "",
            "last_password_update": 0,
            "last_picture_update": 0,
            "locale": "",
            "mfa_active": false,
            "nickname": "",
            "notify_props": Object {
              "channel": "false",
              "comments": "never",
              "desktop": "default",
              "desktop_sound": "false",
              "email": "false",
              "first_name": "false",
              "mark_unread": "mention",
              "mention_keys": "",
              "push": "none",
              "push_status": "offline",
            },
            "password": "",
            "position": "",
            "props": Object {},
            "remote_id": "fakeuser",
            "roles": "",
            "terms_of_service_create_at": 0,
            "terms_of_service_id": "",
            "update_at": 0,
            "username": "shared_user",
          }
        }
      />
    </div>
  </div>
  <span
    onFocus={[Function]}
    tabIndex={0}
  />
</Popover>
`;

exports[`components/ProfilePopover should match snapshot when calls are disabled 1`] = `
<Popover
  customStatus={null}
  enableLastActiveTime={true}
  id="user-profile-popover"
  isCallsDefaultEnabledOnAllChannels={true}
  isCallsEnabled={false}
  isCustomStatusEnabled={true}
  isCustomStatusExpired={false}
  isInCurrentTeam={true}
  isMobileView={false}
  lastActivityTimestamp={1632146562846}
  placement="right"
  popoverSize="sm"
  popoverStyle="info"
  teammateNameDisplay="username"
  timestampUnits={
    Array [
      "now",
      "minute",
      "hour",
    ]
  }
>
  <span
    onFocus={[Function]}
    tabIndex={0}
  />
  <div
    aria-label="Profile for some_username"
    className="a11y__popup"
    onKeyDown={[Function]}
    role="dialog"
  >
    <div
      className="popover-title popover-title_height"
    >
      <span
        data-testid="profilePopoverTitle_some_username"
      >
        <button
          className="user-popover__close"
          onClick={[Function]}
          tabIndex={-1}
        >
          <CloseIcon
            size={18}
          />
        </button>
      </span>
    </div>
    <div
      className="user-profile-popover__content"
    >
      <div
        className="user-popover-image"
        key="user-popover-image"
      >
        <Memo(Avatar)
          id="userAvatar"
          size="xxl"
          tabIndex={-1}
          url="src"
          username="some_username"
        />
        <StatusIcon
          button={true}
          className="status user-popover-status"
          status="offline"
        />
      </div>
      <div
        className="user-popover-last-active"
        key="user-popover-last-active"
      >
        <MemoizedFormattedMessage
          defaultMessage="Last online {timestamp}"
          id="channel_header.lastActive"
          values={
            Object {
              "timestamp": <Memo(Connect(injectIntl(Timestamp)))
                style="short"
                units={
                  Array [
                    "now",
                    "minute",
                    "hour",
                  ]
                }
                useTime={false}
                value={1632146562846}
              />,
            }
          }
        />
      </div>
      <div
        className="overflow--ellipsis pb-1 user-profile-popover__heading"
        key="user-popover-username"
      >
        @some_username
      </div>
      <hr
        className="divider divider--expanded"
        key="user-popover-hr"
      />
      <Connect(Pluggable)
        hide={[MockFunction]}
        key="profilePopoverPluggable2"
        pluggableName="PopoverUserAttributes"
        status="offline"
        user={
          Object {
            "auth_service": "",
            "bot_description": "",
            "create_at": 0,
            "delete_at": 0,
            "email": "",
            "first_name": "",
            "id": "user_id",
            "is_bot": false,
            "last_activity_at": 0,
            "last_name": "",
            "last_password_update": 0,
            "last_picture_update": 0,
            "locale": "",
            "mfa_active": false,
            "nickname": "",
            "notify_props": Object {
              "channel": "false",
              "comments": "never",
              "desktop": "default",
              "desktop_sound": "false",
              "email": "false",
              "first_name": "false",
              "mark_unread": "mention",
              "mention_keys": "",
              "push": "none",
              "push_status": "offline",
            },
            "password": "",
            "position": "",
            "props": Object {},
            "roles": "",
            "terms_of_service_create_at": 0,
            "terms_of_service_id": "",
            "update_at": 0,
            "username": "some_username",
          }
        }
      />
      <div
        className="popover__row first"
        data-toggle="tooltip"
        key="user-popover-dm"
      >
        <button
          className="btn"
          id="messageButton"
          onClick={[Function]}
          type="button"
        >
          <SendIcon
            aria-label="Send Message Icon"
            size={16}
          />
          <MemoizedFormattedMessage
            defaultMessage="Message"
            id="user_profile.send.dm"
          />
        </button>
        <div
          className="popover_row-controlContainer"
        >
          <OverlayTrigger
            defaultOverlayShown={false}
            delayShow={400}
            overlay={
              <Tooltip
                id="addToChannelTooltip"
              >
                Add to a Channel
              </Tooltip>
            }
            placement="top"
            trigger={
              Array [
                "hover",
                "focus",
              ]
            }
          >
            <a>
              <Connect(ToggleModalButton)
                ariaLabel="Add to a Channel"
                className="btn icon-btn"
                dialogProps={
                  Object {
                    "onExited": [Function],
                    "user": Object {
                      "auth_service": "",
                      "bot_description": "",
                      "create_at": 0,
                      "delete_at": 0,
                      "email": "",
                      "first_name": "",
                      "id": "user_id",
                      "is_bot": false,
                      "last_activity_at": 0,
                      "last_name": "",
                      "last_password_update": 0,
                      "last_picture_update": 0,
                      "locale": "",
                      "mfa_active": false,
                      "nickname": "",
                      "notify_props": Object {
                        "channel": "false",
                        "comments": "never",
                        "desktop": "default",
                        "desktop_sound": "false",
                        "email": "false",
                        "first_name": "false",
                        "mark_unread": "mention",
                        "mention_keys": "",
                        "push": "none",
                        "push_status": "offline",
                      },
                      "password": "",
                      "position": "",
                      "props": Object {},
                      "roles": "",
                      "terms_of_service_create_at": 0,
                      "terms_of_service_id": "",
                      "update_at": 0,
                      "username": "some_username",
                    },
                  }
                }
                dialogType={
                  Object {
                    "$$typeof": Symbol(react.memo),
                    "WrappedComponent": [Function],
                    "compare": null,
                    "displayName": "Connect(AddUserToChannelModal)",
                    "type": [Function],
                  }
                }
                modalId="add_user_to_channel"
                onClick={[Function]}
              >
                <AccountPlusOutlineIcon
                  aria-label="Add User to Channel Icon"
                  size={18}
                />
              </Connect(ToggleModalButton)>
            </a>
          </OverlayTrigger>
        </div>
      </div>
      <Connect(Pluggable)
        hide={[MockFunction]}
        key="profilePopoverPluggable3"
        pluggableName="PopoverUserActions"
        status="offline"
        user={
          Object {
            "auth_service": "",
            "bot_description": "",
            "create_at": 0,
            "delete_at": 0,
            "email": "",
            "first_name": "",
            "id": "user_id",
            "is_bot": false,
            "last_activity_at": 0,
            "last_name": "",
            "last_password_update": 0,
            "last_picture_update": 0,
            "locale": "",
            "mfa_active": false,
            "nickname": "",
            "notify_props": Object {
              "channel": "false",
              "comments": "never",
              "desktop": "default",
              "desktop_sound": "false",
              "email": "false",
              "first_name": "false",
              "mark_unread": "mention",
              "mention_keys": "",
              "push": "none",
              "push_status": "offline",
            },
            "password": "",
            "position": "",
            "props": Object {},
            "roles": "",
            "terms_of_service_create_at": 0,
            "terms_of_service_id": "",
            "update_at": 0,
            "username": "some_username",
          }
        }
      />
    </div>
  </div>
  <span
    onFocus={[Function]}
    tabIndex={0}
  />
</Popover>
`;

exports[`components/ProfilePopover should match snapshot with custom status 1`] = `
<Popover
  customStatus={
    Object {
      "duration": "today",
      "emoji": "calendar",
      "expires_at": "2021-05-03T23:59:59.000Z",
      "text": "In a meeting",
    }
  }
  enableLastActiveTime={true}
  id="user-profile-popover"
  isCallsDefaultEnabledOnAllChannels={true}
  isCallsEnabled={true}
  isCustomStatusEnabled={true}
  isCustomStatusExpired={false}
  isInCurrentTeam={true}
  isMobileView={false}
  lastActivityTimestamp={1632146562846}
  placement="right"
  popoverSize="sm"
  popoverStyle="info"
  teammateNameDisplay="username"
  timestampUnits={
    Array [
      "now",
      "minute",
      "hour",
    ]
  }
>
  <span
    onFocus={[Function]}
    tabIndex={0}
  />
  <div
    aria-label="Profile for some_username"
    className="a11y__popup"
    onKeyDown={[Function]}
    role="dialog"
  >
    <div
      className="popover-title popover-title_height"
    >
      <span
        data-testid="profilePopoverTitle_some_username"
      >
        <button
          className="user-popover__close"
          onClick={[Function]}
          tabIndex={-1}
        >
          <CloseIcon
            size={18}
          />
        </button>
      </span>
    </div>
    <div
      className="user-profile-popover__content"
    >
      <div
        className="user-popover-image"
        key="user-popover-image"
      >
        <Memo(Avatar)
          id="userAvatar"
          size="xxl"
          tabIndex={-1}
          url="src"
          username="some_username"
        />
        <StatusIcon
          button={true}
          className="status user-popover-status"
          status="offline"
        />
      </div>
      <div
        className="user-popover-last-active"
        key="user-popover-last-active"
      >
        <MemoizedFormattedMessage
          defaultMessage="Last online {timestamp}"
          id="channel_header.lastActive"
          values={
            Object {
              "timestamp": <Memo(Connect(injectIntl(Timestamp)))
                style="short"
                units={
                  Array [
                    "now",
                    "minute",
                    "hour",
                  ]
                }
                useTime={false}
                value={1632146562846}
              />,
            }
          }
        />
      </div>
      <div
        className="overflow--ellipsis pb-1 user-profile-popover__heading"
        key="user-popover-username"
      >
        @some_username
      </div>
      <hr
        className="divider divider--expanded"
        key="user-popover-hr"
      />
      <Connect(Pluggable)
        hide={[MockFunction]}
        key="profilePopoverPluggable2"
        pluggableName="PopoverUserAttributes"
        status="offline"
        user={
          Object {
            "auth_service": "",
            "bot_description": "",
            "create_at": 0,
            "delete_at": 0,
            "email": "",
            "first_name": "",
            "id": "user_id",
            "is_bot": false,
            "last_activity_at": 0,
            "last_name": "",
            "last_password_update": 0,
            "last_picture_update": 0,
            "locale": "",
            "mfa_active": false,
            "nickname": "",
            "notify_props": Object {
              "channel": "false",
              "comments": "never",
              "desktop": "default",
              "desktop_sound": "false",
              "email": "false",
              "first_name": "false",
              "mark_unread": "mention",
              "mention_keys": "",
              "push": "none",
              "push_status": "offline",
            },
            "password": "",
            "position": "",
            "props": Object {},
            "roles": "",
            "terms_of_service_create_at": 0,
            "terms_of_service_id": "",
            "update_at": 0,
            "username": "some_username",
          }
        }
      />
      <div
        className="user-popover__time-status-container"
        id="user-popover-status"
        key="user-popover-status"
      >
        <span
          className="user-popover__subtitle"
        >
          <MemoizedFormattedMessage
            defaultMessage="Status"
            id="user_profile.custom_status"
          />
          <Memo(ExpiryTime)
            className="ml-1"
            time="2021-05-03T23:59:59.000Z"
            withinBrackets={true}
          />
        </span>
        <div
          className="d-flex align-items-center"
        >
          <Memo(CustomStatusEmoji)
            emojiStyle={
              Object {
                "marginRight": 4,
                "marginTop": 1,
              }
            }
            showTooltip={false}
            userID="user_id"
          />
          <CustomStatusText
            className="user-popover__email"
            text="In a meeting"
            tooltipDirection="top"
          />
        </div>
      </div>
      <div
        className="popover__row first"
        data-toggle="tooltip"
        key="user-popover-dm"
      >
        <button
          className="btn"
          id="messageButton"
          onClick={[Function]}
          type="button"
        >
          <SendIcon
            aria-label="Send Message Icon"
            size={16}
          />
          <MemoizedFormattedMessage
            defaultMessage="Message"
            id="user_profile.send.dm"
          />
        </button>
        <div
          className="popover_row-controlContainer"
        >
          <OverlayTrigger
            defaultOverlayShown={false}
            delayShow={400}
            overlay={
              <Tooltip
                id="addToChannelTooltip"
              >
                Add to a Channel
              </Tooltip>
            }
            placement="top"
            trigger={
              Array [
                "hover",
                "focus",
              ]
            }
          >
            <a>
              <Connect(ToggleModalButton)
                ariaLabel="Add to a Channel"
                className="btn icon-btn"
                dialogProps={
                  Object {
                    "onExited": [Function],
                    "user": Object {
                      "auth_service": "",
                      "bot_description": "",
                      "create_at": 0,
                      "delete_at": 0,
                      "email": "",
                      "first_name": "",
                      "id": "user_id",
                      "is_bot": false,
                      "last_activity_at": 0,
                      "last_name": "",
                      "last_password_update": 0,
                      "last_picture_update": 0,
                      "locale": "",
                      "mfa_active": false,
                      "nickname": "",
                      "notify_props": Object {
                        "channel": "false",
                        "comments": "never",
                        "desktop": "default",
                        "desktop_sound": "false",
                        "email": "false",
                        "first_name": "false",
                        "mark_unread": "mention",
                        "mention_keys": "",
                        "push": "none",
                        "push_status": "offline",
                      },
                      "password": "",
                      "position": "",
                      "props": Object {},
                      "roles": "",
                      "terms_of_service_create_at": 0,
                      "terms_of_service_id": "",
                      "update_at": 0,
                      "username": "some_username",
                    },
                  }
                }
                dialogType={
                  Object {
                    "$$typeof": Symbol(react.memo),
                    "WrappedComponent": [Function],
                    "compare": null,
                    "displayName": "Connect(AddUserToChannelModal)",
                    "type": [Function],
                  }
                }
                modalId="add_user_to_channel"
                onClick={[Function]}
              >
                <AccountPlusOutlineIcon
                  aria-label="Add User to Channel Icon"
                  size={18}
                />
              </Connect(ToggleModalButton)>
            </a>
          </OverlayTrigger>
          <Connect(CallButton)
            customButton={
              <OverlayTrigger
                defaultOverlayShown={false}
                delayShow={400}
                overlay={
                  <Tooltip
                    id="startCallTooltip"
                  >
                    Start Call
                  </Tooltip>
                }
                placement="top"
                trigger={
                  Array [
                    "hover",
                    "focus",
                  ]
                }
              >
                <button
                  className="btn icon-btn"
                  id="startCallButton"
                  type="button"
                >
                  <PhoneInTalkIcon
                    aria-label="Start Call"
                    size={18}
                  />
                </button>
              </OverlayTrigger>
            }
          />
        </div>
      </div>
      <Connect(Pluggable)
        hide={[MockFunction]}
        key="profilePopoverPluggable3"
        pluggableName="PopoverUserActions"
        status="offline"
        user={
          Object {
            "auth_service": "",
            "bot_description": "",
            "create_at": 0,
            "delete_at": 0,
            "email": "",
            "first_name": "",
            "id": "user_id",
            "is_bot": false,
            "last_activity_at": 0,
            "last_name": "",
            "last_password_update": 0,
            "last_picture_update": 0,
            "locale": "",
            "mfa_active": false,
            "nickname": "",
            "notify_props": Object {
              "channel": "false",
              "comments": "never",
              "desktop": "default",
              "desktop_sound": "false",
              "email": "false",
              "first_name": "false",
              "mark_unread": "mention",
              "mention_keys": "",
              "push": "none",
              "push_status": "offline",
            },
            "password": "",
            "position": "",
            "props": Object {},
            "roles": "",
            "terms_of_service_create_at": 0,
            "terms_of_service_id": "",
            "update_at": 0,
            "username": "some_username",
          }
        }
      />
    </div>
  </div>
  <span
    onFocus={[Function]}
    tabIndex={0}
  />
</Popover>
`;

exports[`components/ProfilePopover should match snapshot with custom status expired 1`] = `
<Popover
  customStatus={
    Object {
      "duration": "today",
      "emoji": "calendar",
      "expires_at": "2021-05-03T23:59:59.000Z",
      "text": "In a meeting",
    }
  }
  enableLastActiveTime={true}
  id="user-profile-popover"
  isCallsDefaultEnabledOnAllChannels={true}
  isCallsEnabled={true}
  isCustomStatusEnabled={true}
  isCustomStatusExpired={true}
  isInCurrentTeam={true}
  isMobileView={false}
  lastActivityTimestamp={1632146562846}
  placement="right"
  popoverSize="sm"
  popoverStyle="info"
  teammateNameDisplay="username"
  timestampUnits={
    Array [
      "now",
      "minute",
      "hour",
    ]
  }
>
  <span
    onFocus={[Function]}
    tabIndex={0}
  />
  <div
    aria-label="Profile for some_username"
    className="a11y__popup"
    onKeyDown={[Function]}
    role="dialog"
  >
    <div
      className="popover-title popover-title_height"
    >
      <span
        data-testid="profilePopoverTitle_some_username"
      >
        <button
          className="user-popover__close"
          onClick={[Function]}
          tabIndex={-1}
        >
          <CloseIcon
            size={18}
          />
        </button>
      </span>
    </div>
    <div
      className="user-profile-popover__content"
    >
      <div
        className="user-popover-image"
        key="user-popover-image"
      >
        <Memo(Avatar)
          id="userAvatar"
          size="xxl"
          tabIndex={-1}
          url="src"
          username="some_username"
        />
        <StatusIcon
          button={true}
          className="status user-popover-status"
          status="offline"
        />
      </div>
      <div
        className="user-popover-last-active"
        key="user-popover-last-active"
      >
        <MemoizedFormattedMessage
          defaultMessage="Last online {timestamp}"
          id="channel_header.lastActive"
          values={
            Object {
              "timestamp": <Memo(Connect(injectIntl(Timestamp)))
                style="short"
                units={
                  Array [
                    "now",
                    "minute",
                    "hour",
                  ]
                }
                useTime={false}
                value={1632146562846}
              />,
            }
          }
        />
      </div>
      <div
        className="overflow--ellipsis pb-1 user-profile-popover__heading"
        key="user-popover-username"
      >
        @some_username
      </div>
      <hr
        className="divider divider--expanded"
        key="user-popover-hr"
      />
      <Connect(Pluggable)
        hide={[MockFunction]}
        key="profilePopoverPluggable2"
        pluggableName="PopoverUserAttributes"
        status="offline"
        user={
          Object {
            "auth_service": "",
            "bot_description": "",
            "create_at": 0,
            "delete_at": 0,
            "email": "",
            "first_name": "",
            "id": "user_id",
            "is_bot": false,
            "last_activity_at": 0,
            "last_name": "",
            "last_password_update": 0,
            "last_picture_update": 0,
            "locale": "",
            "mfa_active": false,
            "nickname": "",
            "notify_props": Object {
              "channel": "false",
              "comments": "never",
              "desktop": "default",
              "desktop_sound": "false",
              "email": "false",
              "first_name": "false",
              "mark_unread": "mention",
              "mention_keys": "",
              "push": "none",
              "push_status": "offline",
            },
            "password": "",
            "position": "",
            "props": Object {},
            "roles": "",
            "terms_of_service_create_at": 0,
            "terms_of_service_id": "",
            "update_at": 0,
            "username": "some_username",
          }
        }
      />
      <div
        className="popover__row first"
        data-toggle="tooltip"
        key="user-popover-dm"
      >
        <button
          className="btn"
          id="messageButton"
          onClick={[Function]}
          type="button"
        >
          <SendIcon
            aria-label="Send Message Icon"
            size={16}
          />
          <MemoizedFormattedMessage
            defaultMessage="Message"
            id="user_profile.send.dm"
          />
        </button>
        <div
          className="popover_row-controlContainer"
        >
          <OverlayTrigger
            defaultOverlayShown={false}
            delayShow={400}
            overlay={
              <Tooltip
                id="addToChannelTooltip"
              >
                Add to a Channel
              </Tooltip>
            }
            placement="top"
            trigger={
              Array [
                "hover",
                "focus",
              ]
            }
          >
            <a>
              <Connect(ToggleModalButton)
                ariaLabel="Add to a Channel"
                className="btn icon-btn"
                dialogProps={
                  Object {
                    "onExited": [Function],
                    "user": Object {
                      "auth_service": "",
                      "bot_description": "",
                      "create_at": 0,
                      "delete_at": 0,
                      "email": "",
                      "first_name": "",
                      "id": "user_id",
                      "is_bot": false,
                      "last_activity_at": 0,
                      "last_name": "",
                      "last_password_update": 0,
                      "last_picture_update": 0,
                      "locale": "",
                      "mfa_active": false,
                      "nickname": "",
                      "notify_props": Object {
                        "channel": "false",
                        "comments": "never",
                        "desktop": "default",
                        "desktop_sound": "false",
                        "email": "false",
                        "first_name": "false",
                        "mark_unread": "mention",
                        "mention_keys": "",
                        "push": "none",
                        "push_status": "offline",
                      },
                      "password": "",
                      "position": "",
                      "props": Object {},
                      "roles": "",
                      "terms_of_service_create_at": 0,
                      "terms_of_service_id": "",
                      "update_at": 0,
                      "username": "some_username",
                    },
                  }
                }
                dialogType={
                  Object {
                    "$$typeof": Symbol(react.memo),
                    "WrappedComponent": [Function],
                    "compare": null,
                    "displayName": "Connect(AddUserToChannelModal)",
                    "type": [Function],
                  }
                }
                modalId="add_user_to_channel"
                onClick={[Function]}
              >
                <AccountPlusOutlineIcon
                  aria-label="Add User to Channel Icon"
                  size={18}
                />
              </Connect(ToggleModalButton)>
            </a>
          </OverlayTrigger>
          <Connect(CallButton)
            customButton={
              <OverlayTrigger
                defaultOverlayShown={false}
                delayShow={400}
                overlay={
                  <Tooltip
                    id="startCallTooltip"
                  >
                    Start Call
                  </Tooltip>
                }
                placement="top"
                trigger={
                  Array [
                    "hover",
                    "focus",
                  ]
                }
              >
                <button
                  className="btn icon-btn"
                  id="startCallButton"
                  type="button"
                >
                  <PhoneInTalkIcon
                    aria-label="Start Call"
                    size={18}
                  />
                </button>
              </OverlayTrigger>
            }
          />
        </div>
      </div>
      <Connect(Pluggable)
        hide={[MockFunction]}
        key="profilePopoverPluggable3"
        pluggableName="PopoverUserActions"
        status="offline"
        user={
          Object {
            "auth_service": "",
            "bot_description": "",
            "create_at": 0,
            "delete_at": 0,
            "email": "",
            "first_name": "",
            "id": "user_id",
            "is_bot": false,
            "last_activity_at": 0,
            "last_name": "",
            "last_password_update": 0,
            "last_picture_update": 0,
            "locale": "",
            "mfa_active": false,
            "nickname": "",
            "notify_props": Object {
              "channel": "false",
              "comments": "never",
              "desktop": "default",
              "desktop_sound": "false",
              "email": "false",
              "first_name": "false",
              "mark_unread": "mention",
              "mention_keys": "",
              "push": "none",
              "push_status": "offline",
            },
            "password": "",
            "position": "",
            "props": Object {},
            "roles": "",
            "terms_of_service_create_at": 0,
            "terms_of_service_id": "",
            "update_at": 0,
            "username": "some_username",
          }
        }
      />
    </div>
  </div>
  <span
    onFocus={[Function]}
    tabIndex={0}
  />
</Popover>
`;

exports[`components/ProfilePopover should match snapshot with custom status not set but can set 1`] = `
<Popover
  customStatus={null}
  enableLastActiveTime={true}
  id="user-profile-popover"
  isCallsDefaultEnabledOnAllChannels={true}
  isCallsEnabled={true}
  isCustomStatusEnabled={true}
  isCustomStatusExpired={false}
  isInCurrentTeam={true}
  isMobileView={false}
  lastActivityTimestamp={1632146562846}
  placement="right"
  popoverSize="sm"
  popoverStyle="info"
  teammateNameDisplay="username"
  timestampUnits={
    Array [
      "now",
      "minute",
      "hour",
    ]
  }
>
  <span
    onFocus={[Function]}
    tabIndex={0}
  />
  <div
    aria-label="Profile for some_username"
    className="a11y__popup"
    onKeyDown={[Function]}
    role="dialog"
  >
    <div
      className="popover-title popover-title_height"
    >
      <span
        data-testid="profilePopoverTitle_some_username"
      >
        <button
          className="user-popover__close"
          onClick={[Function]}
          tabIndex={-1}
        >
          <CloseIcon
            size={18}
          />
        </button>
      </span>
    </div>
    <div
      className="user-profile-popover__content"
    >
      <div
        className="user-popover-image"
        key="user-popover-image"
      >
        <Memo(Avatar)
          id="userAvatar"
          size="xxl"
          tabIndex={-1}
          url="src"
          username="some_username"
        />
        <StatusIcon
          button={true}
          className="status user-popover-status"
          status="offline"
        />
      </div>
      <div
        className="user-popover-last-active"
        key="user-popover-last-active"
      >
        <MemoizedFormattedMessage
          defaultMessage="Last online {timestamp}"
          id="channel_header.lastActive"
          values={
            Object {
              "timestamp": <Memo(Connect(injectIntl(Timestamp)))
                style="short"
                units={
                  Array [
                    "now",
                    "minute",
                    "hour",
                  ]
                }
                useTime={false}
                value={1632146562846}
              />,
            }
          }
        />
      </div>
      <div
        className="overflow--ellipsis pb-1 user-profile-popover__heading"
        key="user-popover-username"
      >
        @some_username
      </div>
      <hr
        className="divider divider--expanded"
        key="user-popover-hr"
      />
      <Connect(Pluggable)
        hide={[MockFunction]}
        key="profilePopoverPluggable2"
        pluggableName="PopoverUserAttributes"
        status="offline"
        user={
          Object {
            "auth_service": "",
            "bot_description": "",
            "create_at": 0,
            "delete_at": 0,
            "email": "",
            "first_name": "",
            "id": "",
            "is_bot": false,
            "last_activity_at": 0,
            "last_name": "",
            "last_password_update": 0,
            "last_picture_update": 0,
            "locale": "",
            "mfa_active": false,
            "nickname": "",
            "notify_props": Object {
              "channel": "false",
              "comments": "never",
              "desktop": "default",
              "desktop_sound": "false",
              "email": "false",
              "first_name": "false",
              "mark_unread": "mention",
              "mention_keys": "",
              "push": "none",
              "push_status": "offline",
            },
            "password": "",
            "position": "",
            "props": Object {},
            "roles": "",
            "terms_of_service_create_at": 0,
            "terms_of_service_id": "",
            "update_at": 0,
            "username": "some_username",
          }
        }
      />
      <div
        className="user-popover__time-status-container"
        id="user-popover-status"
        key="user-popover-status"
      >
        <span
          className="user-popover__subtitle"
        >
          <MemoizedFormattedMessage
            defaultMessage="Status"
            id="user_profile.custom_status"
          />
        </span>
        <button
          className="user-popover__set-custom-status-btn"
          onClick={[Function]}
        >
          <EmoticonHappyOutlineIcon
            size={14}
          />
          <MemoizedFormattedMessage
            defaultMessage="Set a status"
            id="user_profile.custom_status.set_status"
          />
        </button>
      </div>
      <div
        className="popover__row first"
        data-toggle="tooltip"
        key="user-popover-settings"
      >
        <button
          className="btn"
          id="editProfileButton"
          onClick={[Function]}
          type="button"
        >
          <AccountOutlineIcon
            aria-label={
              Object {
                "defaultMessage": "Edit Icon",
                "id": "generic_icons.edit",
              }
            }
            size={16}
          />
          <MemoizedFormattedMessage
            defaultMessage="Edit Profile"
            id="user_profile.account.editProfile"
          />
        </button>
        <OverlayTrigger
          defaultOverlayShown={false}
          delayShow={400}
          overlay={
            <Tooltip
              id="sendMessageTooltip"
            >
              <Memo(MemoizedFormattedMessage)
                defaultMessage="Send yourself a message"
                id="user_profile.send.dm.yourself"
              />
            </Tooltip>
          }
          placement="top"
          trigger={
            Array [
              "hover",
              "focus",
            ]
          }
        >
          <button
            className="btn icon-btn"
            onClick={[Function]}
            type="button"
          >
            <SendIcon
              aria-label="Send Message Icon"
              size={18}
            />
          </button>
        </OverlayTrigger>
      </div>
      <Connect(Pluggable)
        hide={[MockFunction]}
        key="profilePopoverPluggable3"
        pluggableName="PopoverUserActions"
        status="offline"
        user={
          Object {
            "auth_service": "",
            "bot_description": "",
            "create_at": 0,
            "delete_at": 0,
            "email": "",
            "first_name": "",
            "id": "",
            "is_bot": false,
            "last_activity_at": 0,
            "last_name": "",
            "last_password_update": 0,
            "last_picture_update": 0,
            "locale": "",
            "mfa_active": false,
            "nickname": "",
            "notify_props": Object {
              "channel": "false",
              "comments": "never",
              "desktop": "default",
              "desktop_sound": "false",
              "email": "false",
              "first_name": "false",
              "mark_unread": "mention",
              "mention_keys": "",
              "push": "none",
              "push_status": "offline",
            },
            "password": "",
            "position": "",
            "props": Object {},
            "roles": "",
            "terms_of_service_create_at": 0,
            "terms_of_service_id": "",
            "update_at": 0,
            "username": "some_username",
          }
        }
      />
    </div>
  </div>
  <span
    onFocus={[Function]}
    tabIndex={0}
  />
</Popover>
`;

exports[`components/ProfilePopover should match snapshot with last active display 1`] = `
<Popover
  customStatus={null}
  enableLastActiveTime={true}
  id="user-profile-popover"
  isCallsDefaultEnabledOnAllChannels={true}
  isCallsEnabled={true}
  isCustomStatusEnabled={true}
  isCustomStatusExpired={false}
  isInCurrentTeam={true}
  isMobileView={false}
  lastActivityTimestamp={1632146562846}
  placement="right"
  popoverSize="sm"
  popoverStyle="info"
  teammateNameDisplay="username"
  timestampUnits={
    Array [
      "now",
      "minute",
      "hour",
    ]
  }
>
  <span
    onFocus={[Function]}
    tabIndex={0}
  />
  <div
    aria-label="Profile for some_username"
    className="a11y__popup"
    onKeyDown={[Function]}
    role="dialog"
  >
    <div
      className="popover-title popover-title_height"
    >
      <span
        data-testid="profilePopoverTitle_some_username"
      >
        <button
          className="user-popover__close"
          onClick={[Function]}
          tabIndex={-1}
        >
          <CloseIcon
            size={18}
          />
        </button>
      </span>
    </div>
    <div
      className="user-profile-popover__content"
    >
      <div
        className="user-popover-image"
        key="user-popover-image"
      >
        <Memo(Avatar)
          id="userAvatar"
          size="xxl"
          tabIndex={-1}
          url="src"
          username="some_username"
        />
        <StatusIcon
          button={true}
          className="status user-popover-status"
          status="offline"
        />
      </div>
      <div
        className="user-popover-last-active"
        key="user-popover-last-active"
      >
        <MemoizedFormattedMessage
          defaultMessage="Last online {timestamp}"
          id="channel_header.lastActive"
          values={
            Object {
              "timestamp": <Memo(Connect(injectIntl(Timestamp)))
                style="short"
                units={
                  Array [
                    "now",
                    "minute",
                    "hour",
                  ]
                }
                useTime={false}
                value={1632146562846}
              />,
            }
          }
        />
      </div>
      <div
        className="overflow--ellipsis pb-1 user-profile-popover__heading"
        key="user-popover-username"
      >
        @some_username
      </div>
      <hr
        className="divider divider--expanded"
        key="user-popover-hr"
      />
      <Connect(Pluggable)
        hide={[MockFunction]}
        key="profilePopoverPluggable2"
        pluggableName="PopoverUserAttributes"
        status="offline"
        user={
          Object {
            "auth_service": "",
            "bot_description": "",
            "create_at": 0,
            "delete_at": 0,
            "email": "",
            "first_name": "",
            "id": "user_id",
            "is_bot": false,
            "last_activity_at": 0,
            "last_name": "",
            "last_password_update": 0,
            "last_picture_update": 0,
            "locale": "",
            "mfa_active": false,
            "nickname": "",
            "notify_props": Object {
              "channel": "false",
              "comments": "never",
              "desktop": "default",
              "desktop_sound": "false",
              "email": "false",
              "first_name": "false",
              "mark_unread": "mention",
              "mention_keys": "",
              "push": "none",
              "push_status": "offline",
            },
            "password": "",
            "position": "",
            "props": Object {},
            "roles": "",
            "terms_of_service_create_at": 0,
            "terms_of_service_id": "",
            "update_at": 0,
            "username": "some_username",
          }
        }
      />
      <div
        className="popover__row first"
        data-toggle="tooltip"
        key="user-popover-dm"
      >
        <button
          className="btn"
          id="messageButton"
          onClick={[Function]}
          type="button"
        >
          <SendIcon
            aria-label="Send Message Icon"
            size={16}
          />
          <MemoizedFormattedMessage
            defaultMessage="Message"
            id="user_profile.send.dm"
          />
        </button>
        <div
          className="popover_row-controlContainer"
        >
          <OverlayTrigger
            defaultOverlayShown={false}
            delayShow={400}
            overlay={
              <Tooltip
                id="addToChannelTooltip"
              >
                Add to a Channel
              </Tooltip>
            }
            placement="top"
            trigger={
              Array [
                "hover",
                "focus",
              ]
            }
          >
            <a>
              <Connect(ToggleModalButton)
                ariaLabel="Add to a Channel"
                className="btn icon-btn"
                dialogProps={
                  Object {
                    "onExited": [Function],
                    "user": Object {
                      "auth_service": "",
                      "bot_description": "",
                      "create_at": 0,
                      "delete_at": 0,
                      "email": "",
                      "first_name": "",
                      "id": "user_id",
                      "is_bot": false,
                      "last_activity_at": 0,
                      "last_name": "",
                      "last_password_update": 0,
                      "last_picture_update": 0,
                      "locale": "",
                      "mfa_active": false,
                      "nickname": "",
                      "notify_props": Object {
                        "channel": "false",
                        "comments": "never",
                        "desktop": "default",
                        "desktop_sound": "false",
                        "email": "false",
                        "first_name": "false",
                        "mark_unread": "mention",
                        "mention_keys": "",
                        "push": "none",
                        "push_status": "offline",
                      },
                      "password": "",
                      "position": "",
                      "props": Object {},
                      "roles": "",
                      "terms_of_service_create_at": 0,
                      "terms_of_service_id": "",
                      "update_at": 0,
                      "username": "some_username",
                    },
                  }
                }
                dialogType={
                  Object {
                    "$$typeof": Symbol(react.memo),
                    "WrappedComponent": [Function],
                    "compare": null,
                    "displayName": "Connect(AddUserToChannelModal)",
                    "type": [Function],
                  }
                }
                modalId="add_user_to_channel"
                onClick={[Function]}
              >
                <AccountPlusOutlineIcon
                  aria-label="Add User to Channel Icon"
                  size={18}
                />
              </Connect(ToggleModalButton)>
            </a>
          </OverlayTrigger>
          <Connect(CallButton)
            customButton={
              <OverlayTrigger
                defaultOverlayShown={false}
                delayShow={400}
                overlay={
                  <Tooltip
                    id="startCallTooltip"
                  >
                    Start Call
                  </Tooltip>
                }
                placement="top"
                trigger={
                  Array [
                    "hover",
                    "focus",
                  ]
                }
              >
                <button
                  className="btn icon-btn"
                  id="startCallButton"
                  type="button"
                >
                  <PhoneInTalkIcon
                    aria-label="Start Call"
                    size={18}
                  />
                </button>
              </OverlayTrigger>
            }
          />
        </div>
      </div>
      <Connect(Pluggable)
        hide={[MockFunction]}
        key="profilePopoverPluggable3"
        pluggableName="PopoverUserActions"
        status="offline"
        user={
          Object {
            "auth_service": "",
            "bot_description": "",
            "create_at": 0,
            "delete_at": 0,
            "email": "",
            "first_name": "",
            "id": "user_id",
            "is_bot": false,
            "last_activity_at": 0,
            "last_name": "",
            "last_password_update": 0,
            "last_picture_update": 0,
            "locale": "",
            "mfa_active": false,
            "nickname": "",
            "notify_props": Object {
              "channel": "false",
              "comments": "never",
              "desktop": "default",
              "desktop_sound": "false",
              "email": "false",
              "first_name": "false",
              "mark_unread": "mention",
              "mention_keys": "",
              "push": "none",
              "push_status": "offline",
            },
            "password": "",
            "position": "",
            "props": Object {},
            "roles": "",
            "terms_of_service_create_at": 0,
            "terms_of_service_id": "",
            "update_at": 0,
            "username": "some_username",
          }
        }
      />
    </div>
  </div>
  <span
    onFocus={[Function]}
    tabIndex={0}
  />
</Popover>
`;

exports[`components/ProfilePopover should match snapshot with no last active display because it is disabled 1`] = `
<Popover
  customStatus={null}
  enableLastActiveTime={false}
  id="user-profile-popover"
  isCallsDefaultEnabledOnAllChannels={true}
  isCallsEnabled={true}
  isCustomStatusEnabled={true}
  isCustomStatusExpired={false}
  isInCurrentTeam={true}
  isMobileView={false}
  lastActivityTimestamp={1632146562846}
  placement="right"
  popoverSize="sm"
  popoverStyle="info"
  teammateNameDisplay="username"
  timestampUnits={
    Array [
      "now",
      "minute",
      "hour",
    ]
  }
>
  <span
    onFocus={[Function]}
    tabIndex={0}
  />
  <div
    aria-label="Profile for some_username"
    className="a11y__popup"
    onKeyDown={[Function]}
    role="dialog"
  >
    <div
      className="popover-title popover-title_height"
    >
      <span
        data-testid="profilePopoverTitle_some_username"
      >
        <button
          className="user-popover__close"
          onClick={[Function]}
          tabIndex={-1}
        >
          <CloseIcon
            size={18}
          />
        </button>
      </span>
    </div>
    <div
      className="user-profile-popover__content"
    >
      <div
        className="user-popover-image"
        key="user-popover-image"
      >
        <Memo(Avatar)
          id="userAvatar"
          size="xxl"
          tabIndex={-1}
          url="src"
          username="some_username"
        />
        <StatusIcon
          button={true}
          className="status user-popover-status"
          status="offline"
        />
      </div>
      <div
        className="overflow--ellipsis pb-1 user-profile-popover__heading"
        key="user-popover-username"
      >
        @some_username
      </div>
      <hr
        className="divider divider--expanded"
        key="user-popover-hr"
      />
      <Connect(Pluggable)
        hide={[MockFunction]}
        key="profilePopoverPluggable2"
        pluggableName="PopoverUserAttributes"
        status="offline"
        user={
          Object {
            "auth_service": "",
            "bot_description": "",
            "create_at": 0,
            "delete_at": 0,
            "email": "",
            "first_name": "",
            "id": "user_id",
            "is_bot": false,
            "last_activity_at": 0,
            "last_name": "",
            "last_password_update": 0,
            "last_picture_update": 0,
            "locale": "",
            "mfa_active": false,
            "nickname": "",
            "notify_props": Object {
              "channel": "false",
              "comments": "never",
              "desktop": "default",
              "desktop_sound": "false",
              "email": "false",
              "first_name": "false",
              "mark_unread": "mention",
              "mention_keys": "",
              "push": "none",
              "push_status": "offline",
            },
            "password": "",
            "position": "",
            "props": Object {},
            "roles": "",
            "terms_of_service_create_at": 0,
            "terms_of_service_id": "",
            "update_at": 0,
            "username": "some_username",
          }
        }
      />
      <div
        className="popover__row first"
        data-toggle="tooltip"
        key="user-popover-dm"
      >
        <button
          className="btn"
          id="messageButton"
          onClick={[Function]}
          type="button"
        >
          <SendIcon
            aria-label="Send Message Icon"
            size={16}
          />
          <MemoizedFormattedMessage
            defaultMessage="Message"
            id="user_profile.send.dm"
          />
        </button>
        <div
          className="popover_row-controlContainer"
        >
          <OverlayTrigger
            defaultOverlayShown={false}
            delayShow={400}
            overlay={
              <Tooltip
                id="addToChannelTooltip"
              >
                Add to a Channel
              </Tooltip>
            }
            placement="top"
            trigger={
              Array [
                "hover",
                "focus",
              ]
            }
          >
            <a>
              <Connect(ToggleModalButton)
                ariaLabel="Add to a Channel"
                className="btn icon-btn"
                dialogProps={
                  Object {
                    "onExited": [Function],
                    "user": Object {
                      "auth_service": "",
                      "bot_description": "",
                      "create_at": 0,
                      "delete_at": 0,
                      "email": "",
                      "first_name": "",
                      "id": "user_id",
                      "is_bot": false,
                      "last_activity_at": 0,
                      "last_name": "",
                      "last_password_update": 0,
                      "last_picture_update": 0,
                      "locale": "",
                      "mfa_active": false,
                      "nickname": "",
                      "notify_props": Object {
                        "channel": "false",
                        "comments": "never",
                        "desktop": "default",
                        "desktop_sound": "false",
                        "email": "false",
                        "first_name": "false",
                        "mark_unread": "mention",
                        "mention_keys": "",
                        "push": "none",
                        "push_status": "offline",
                      },
                      "password": "",
                      "position": "",
                      "props": Object {},
                      "roles": "",
                      "terms_of_service_create_at": 0,
                      "terms_of_service_id": "",
                      "update_at": 0,
                      "username": "some_username",
                    },
                  }
                }
                dialogType={
                  Object {
                    "$$typeof": Symbol(react.memo),
                    "WrappedComponent": [Function],
                    "compare": null,
                    "displayName": "Connect(AddUserToChannelModal)",
                    "type": [Function],
                  }
                }
                modalId="add_user_to_channel"
                onClick={[Function]}
              >
                <AccountPlusOutlineIcon
                  aria-label="Add User to Channel Icon"
                  size={18}
                />
              </Connect(ToggleModalButton)>
            </a>
          </OverlayTrigger>
          <Connect(CallButton)
            customButton={
              <OverlayTrigger
                defaultOverlayShown={false}
                delayShow={400}
                overlay={
                  <Tooltip
                    id="startCallTooltip"
                  >
                    Start Call
                  </Tooltip>
                }
                placement="top"
                trigger={
                  Array [
                    "hover",
                    "focus",
                  ]
                }
              >
                <button
                  className="btn icon-btn"
                  id="startCallButton"
                  type="button"
                >
                  <PhoneInTalkIcon
                    aria-label="Start Call"
                    size={18}
                  />
                </button>
              </OverlayTrigger>
            }
          />
        </div>
      </div>
      <Connect(Pluggable)
        hide={[MockFunction]}
        key="profilePopoverPluggable3"
        pluggableName="PopoverUserActions"
        status="offline"
        user={
          Object {
            "auth_service": "",
            "bot_description": "",
            "create_at": 0,
            "delete_at": 0,
            "email": "",
            "first_name": "",
            "id": "user_id",
            "is_bot": false,
            "last_activity_at": 0,
            "last_name": "",
            "last_password_update": 0,
            "last_picture_update": 0,
            "locale": "",
            "mfa_active": false,
            "nickname": "",
            "notify_props": Object {
              "channel": "false",
              "comments": "never",
              "desktop": "default",
              "desktop_sound": "false",
              "email": "false",
              "first_name": "false",
              "mark_unread": "mention",
              "mention_keys": "",
              "push": "none",
              "push_status": "offline",
            },
            "password": "",
            "position": "",
            "props": Object {},
            "roles": "",
            "terms_of_service_create_at": 0,
            "terms_of_service_id": "",
            "update_at": 0,
            "username": "some_username",
          }
        }
      />
    </div>
  </div>
  <span
    onFocus={[Function]}
    tabIndex={0}
  />
</Popover>
`;

exports[`components/ProfilePopover should not show the start call button when isCallsDefaultEnabledOnAllChannels is false 1`] = `
<Popover
  customStatus={null}
  enableLastActiveTime={true}
  id="user-profile-popover"
  isCallsDefaultEnabledOnAllChannels={false}
  isCallsEnabled={true}
  isCustomStatusEnabled={true}
  isCustomStatusExpired={false}
  isInCurrentTeam={true}
  isMobileView={false}
  isUserInCall={true}
  lastActivityTimestamp={1632146562846}
  placement="right"
  popoverSize="sm"
  popoverStyle="info"
  teammateNameDisplay="username"
  timestampUnits={
    Array [
      "now",
      "minute",
      "hour",
    ]
  }
>
  <span
    onFocus={[Function]}
    tabIndex={0}
  />
  <div
    aria-label="Profile for some_username"
    className="a11y__popup"
    onKeyDown={[Function]}
    role="dialog"
  >
    <div
      className="popover-title popover-title_height"
    >
      <span
        data-testid="profilePopoverTitle_some_username"
      >
        <button
          className="user-popover__close"
          onClick={[Function]}
          tabIndex={-1}
        >
          <CloseIcon
            size={18}
          />
        </button>
      </span>
    </div>
    <div
      className="user-profile-popover__content"
    >
      <div
        className="user-popover-image"
        key="user-popover-image"
      >
        <Memo(Avatar)
          id="userAvatar"
          size="xxl"
          tabIndex={-1}
          url="src"
          username="some_username"
        />
        <StatusIcon
          button={true}
          className="status user-popover-status"
          status="offline"
        />
      </div>
      <div
        className="user-popover-last-active"
        key="user-popover-last-active"
      >
        <MemoizedFormattedMessage
          defaultMessage="Last online {timestamp}"
          id="channel_header.lastActive"
          values={
            Object {
              "timestamp": <Memo(Connect(injectIntl(Timestamp)))
                style="short"
                units={
                  Array [
                    "now",
                    "minute",
                    "hour",
                  ]
                }
                useTime={false}
                value={1632146562846}
              />,
            }
          }
        />
      </div>
      <div
        className="overflow--ellipsis pb-1 user-profile-popover__heading"
        key="user-popover-username"
      >
        @some_username
      </div>
      <hr
        className="divider divider--expanded"
        key="user-popover-hr"
      />
      <Connect(Pluggable)
        hide={[MockFunction]}
        key="profilePopoverPluggable2"
        pluggableName="PopoverUserAttributes"
        status="offline"
        user={
          Object {
            "auth_service": "",
            "bot_description": "",
            "create_at": 0,
            "delete_at": 0,
            "email": "",
            "first_name": "",
            "id": "user_id",
            "is_bot": false,
            "last_activity_at": 0,
            "last_name": "",
            "last_password_update": 0,
            "last_picture_update": 0,
            "locale": "",
            "mfa_active": false,
            "nickname": "",
            "notify_props": Object {
              "channel": "false",
              "comments": "never",
              "desktop": "default",
              "desktop_sound": "false",
              "email": "false",
              "first_name": "false",
              "mark_unread": "mention",
              "mention_keys": "",
              "push": "none",
              "push_status": "offline",
            },
            "password": "",
            "position": "",
            "props": Object {},
            "roles": "",
            "terms_of_service_create_at": 0,
            "terms_of_service_id": "",
            "update_at": 0,
            "username": "some_username",
          }
        }
      />
      <div
        className="popover__row first"
        data-toggle="tooltip"
        key="user-popover-dm"
      >
        <button
          className="btn"
          id="messageButton"
          onClick={[Function]}
          type="button"
        >
          <SendIcon
            aria-label="Send Message Icon"
            size={16}
          />
          <MemoizedFormattedMessage
            defaultMessage="Message"
            id="user_profile.send.dm"
          />
        </button>
        <div
          className="popover_row-controlContainer"
        >
          <OverlayTrigger
            defaultOverlayShown={false}
            delayShow={400}
            overlay={
              <Tooltip
                id="addToChannelTooltip"
              >
                Add to a Channel
              </Tooltip>
            }
            placement="top"
            trigger={
              Array [
                "hover",
                "focus",
              ]
            }
          >
            <a>
              <Connect(ToggleModalButton)
                ariaLabel="Add to a Channel"
                className="btn icon-btn"
                dialogProps={
                  Object {
                    "onExited": [Function],
                    "user": Object {
                      "auth_service": "",
                      "bot_description": "",
                      "create_at": 0,
                      "delete_at": 0,
                      "email": "",
                      "first_name": "",
                      "id": "user_id",
                      "is_bot": false,
                      "last_activity_at": 0,
                      "last_name": "",
                      "last_password_update": 0,
                      "last_picture_update": 0,
                      "locale": "",
                      "mfa_active": false,
                      "nickname": "",
                      "notify_props": Object {
                        "channel": "false",
                        "comments": "never",
                        "desktop": "default",
                        "desktop_sound": "false",
                        "email": "false",
                        "first_name": "false",
                        "mark_unread": "mention",
                        "mention_keys": "",
                        "push": "none",
                        "push_status": "offline",
                      },
                      "password": "",
                      "position": "",
                      "props": Object {},
                      "roles": "",
                      "terms_of_service_create_at": 0,
                      "terms_of_service_id": "",
                      "update_at": 0,
                      "username": "some_username",
                    },
                  }
                }
                dialogType={
                  Object {
                    "$$typeof": Symbol(react.memo),
                    "WrappedComponent": [Function],
                    "compare": null,
                    "displayName": "Connect(AddUserToChannelModal)",
                    "type": [Function],
                  }
                }
                modalId="add_user_to_channel"
                onClick={[Function]}
              >
                <AccountPlusOutlineIcon
                  aria-label="Add User to Channel Icon"
                  size={18}
                />
              </Connect(ToggleModalButton)>
            </a>
          </OverlayTrigger>
        </div>
      </div>
      <Connect(Pluggable)
        hide={[MockFunction]}
        key="profilePopoverPluggable3"
        pluggableName="PopoverUserActions"
        status="offline"
        user={
          Object {
            "auth_service": "",
            "bot_description": "",
            "create_at": 0,
            "delete_at": 0,
            "email": "",
            "first_name": "",
            "id": "user_id",
            "is_bot": false,
            "last_activity_at": 0,
            "last_name": "",
            "last_password_update": 0,
            "last_picture_update": 0,
            "locale": "",
            "mfa_active": false,
            "nickname": "",
            "notify_props": Object {
              "channel": "false",
              "comments": "never",
              "desktop": "default",
              "desktop_sound": "false",
              "email": "false",
              "first_name": "false",
              "mark_unread": "mention",
              "mention_keys": "",
              "push": "none",
              "push_status": "offline",
            },
            "password": "",
            "position": "",
            "props": Object {},
            "roles": "",
            "terms_of_service_create_at": 0,
            "terms_of_service_id": "",
            "update_at": 0,
            "username": "some_username",
          }
        }
      />
    </div>
  </div>
  <span
    onFocus={[Function]}
    tabIndex={0}
  />
</Popover>
`;
