// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/ProfilePopover should hide add-to-channel option if not on team 1`] = `
<Popover
  customStatus={null}
  id="user-profile-popover"
  isCustomStatusEnabled={true}
  isInCurrentTeam={false}
  placement="right"
  popoverSize="sm"
  popoverStyle="info"
  title={
    <span
      data-testid="profilePopoverTitle_some_username"
    >
      <span
        className="user-popover__username"
      >
        @some_username
      </span>
    </span>
  }
>
  <div
    className="user-popover-image"
    key="user-popover-image"
  >
    <Memo(Avatar)
      size="xxl"
      url="src"
      username="some_username"
    />
    <StatusIcon
      button={true}
      className="status user-popover-status"
      status="offline"
    />
  </div>
  <Connect(Pluggable)
    hide={[MockFunction]}
    key="profilePopoverPluggable2"
    pluggableName="PopoverUserAttributes"
    status="offline"
    user={
      Object {
        "name": "some name",
        "username": "some_username",
      }
    }
  />
  <div
    className="popover__row first"
    data-toggle="tooltip"
    key="user-popover-dm"
  >
    <a
      className="text-nowrap user-popover__email"
      href="#"
      onClick={[Function]}
    >
      <LocalizedIcon
        className="fa fa-paper-plane"
        title={
          Object {
            "defaultMessage": "Send Message Icon",
            "id": "user_profile.send.dm.icon",
          }
        }
      />
      <FormattedMessage
        defaultMessage="Send Message"
        id="user_profile.send.dm"
      />
    </a>
  </div>
  <Connect(Pluggable)
    hide={[MockFunction]}
    key="profilePopoverPluggable3"
    pluggableName="PopoverUserActions"
    status="offline"
    user={
      Object {
        "name": "some name",
        "username": "some_username",
      }
    }
  />
</Popover>
`;

exports[`components/ProfilePopover should match snapshot 1`] = `
<Popover
  customStatus={null}
  id="user-profile-popover"
  isCustomStatusEnabled={true}
  isInCurrentTeam={true}
  placement="right"
  popoverSize="sm"
  popoverStyle="info"
  title={
    <span
      data-testid="profilePopoverTitle_some_username"
    >
      <span
        className="user-popover__username"
      >
        @some_username
      </span>
    </span>
  }
>
  <div
    className="user-popover-image"
    key="user-popover-image"
  >
    <Memo(Avatar)
      size="xxl"
      url="src"
      username="some_username"
    />
    <StatusIcon
      button={true}
      className="status user-popover-status"
      status="offline"
    />
  </div>
  <Connect(Pluggable)
    hide={[MockFunction]}
    key="profilePopoverPluggable2"
    pluggableName="PopoverUserAttributes"
    status="offline"
    user={
      Object {
        "name": "some name",
        "username": "some_username",
      }
    }
  />
  <div
    className="popover__row first"
    data-toggle="tooltip"
    key="user-popover-dm"
  >
    <a
      className="text-nowrap user-popover__email"
      href="#"
      onClick={[Function]}
    >
      <LocalizedIcon
        className="fa fa-paper-plane"
        title={
          Object {
            "defaultMessage": "Send Message Icon",
            "id": "user_profile.send.dm.icon",
          }
        }
      />
      <FormattedMessage
        defaultMessage="Send Message"
        id="user_profile.send.dm"
      />
    </a>
  </div>
  <div
    className="popover__row first"
    data-toggle="tooltip"
    key="user-popover-add-to-channel"
  >
    <a
      className="text-nowrap"
      href="#"
      onClick={[Function]}
    >
      <Connect(injectIntl(ModalToggleButtonRedux))
        accessibilityLabel="Add to a Channel"
        dialogProps={
          Object {
            "user": Object {
              "name": "some name",
              "username": "some_username",
            },
          }
        }
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "displayName": "Connect(AddUserToChannelModal)",
            "type": [Function],
          }
        }
        modalId="add_user_to_channel"
        onClick={[MockFunction]}
        role="menuitem"
      >
        <LocalizedIcon
          className="fa fa-user-plus"
          title={
            Object {
              "defaultMessage": "Add User to Channel Icon",
              "id": "user_profile.add_user_to_channel.icon",
            }
          }
        />
        Add to a Channel
      </Connect(injectIntl(ModalToggleButtonRedux))>
    </a>
  </div>
  <Connect(Pluggable)
    hide={[MockFunction]}
    key="profilePopoverPluggable3"
    pluggableName="PopoverUserActions"
    status="offline"
    user={
      Object {
        "name": "some name",
        "username": "some_username",
      }
    }
  />
</Popover>
`;

exports[`components/ProfilePopover should match snapshot for shared user 1`] = `
<Popover
  customStatus={null}
  id="user-profile-popover"
  isCustomStatusEnabled={true}
  isInCurrentTeam={true}
  placement="right"
  popoverSize="sm"
  popoverStyle="info"
  title={
    <span
      data-testid="profilePopoverTitle_shared_user"
    >
      <span
        className="user-popover__username"
      >
        @shared_user
      </span>
    </span>
  }
>
  <div
    className="user-popover-image"
    key="user-popover-image"
  >
    <Memo(Avatar)
      size="xxl"
      url="src"
      username="shared_user"
    />
    <StatusIcon
      button={true}
      className="status user-popover-status"
      status="offline"
    />
  </div>
  <hr
    className="divider divider--expanded"
    key="user-popover-hr"
  />
  <div
    className="overflow--ellipsis text-nowrap"
    data-testId="popover-fullname-shared_user"
    key="user-popover-fullname"
  >
    <OverlayTrigger
      defaultOverlayShown={false}
      delayShow={400}
      overlay={
        <Tooltip
          bsClass="tooltip"
          id="fullNameTooltip"
          placement="right"
        >
          shared
        </Tooltip>
      }
      placement="top"
      trigger={
        Array [
          "hover",
          "focus",
        ]
      }
    >
      <span
        className="user-profile-popover__heading"
      >
        shared
      </span>
    </OverlayTrigger>
    <SharedUserIndicator
      className="shared-user-icon"
      withTooltip={true}
    />
  </div>
  <Connect(Pluggable)
    hide={[MockFunction]}
    key="profilePopoverPluggable2"
    pluggableName="PopoverUserAttributes"
    status="offline"
    user={
      Object {
        "first_name": "shared",
        "name": "shared user",
        "remote_id": "fakeuser",
        "username": "shared_user",
      }
    }
  />
  <div
    className="popover__row first"
    data-toggle="tooltip"
    key="user-popover-dm"
  >
    <a
      className="text-nowrap user-popover__email"
      href="#"
      onClick={[Function]}
    >
      <LocalizedIcon
        className="fa fa-paper-plane"
        title={
          Object {
            "defaultMessage": "Send Message Icon",
            "id": "user_profile.send.dm.icon",
          }
        }
      />
      <FormattedMessage
        defaultMessage="Send Message"
        id="user_profile.send.dm"
      />
    </a>
  </div>
  <div
    className="popover__row first"
    data-toggle="tooltip"
    key="user-popover-add-to-channel"
  >
    <a
      className="text-nowrap"
      href="#"
      onClick={[Function]}
    >
      <Connect(injectIntl(ModalToggleButtonRedux))
        accessibilityLabel="Add to a Channel"
        dialogProps={
          Object {
            "user": Object {
              "first_name": "shared",
              "name": "shared user",
              "remote_id": "fakeuser",
              "username": "shared_user",
            },
          }
        }
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "displayName": "Connect(AddUserToChannelModal)",
            "type": [Function],
          }
        }
        modalId="add_user_to_channel"
        onClick={[MockFunction]}
        role="menuitem"
      >
        <LocalizedIcon
          className="fa fa-user-plus"
          title={
            Object {
              "defaultMessage": "Add User to Channel Icon",
              "id": "user_profile.add_user_to_channel.icon",
            }
          }
        />
        Add to a Channel
      </Connect(injectIntl(ModalToggleButtonRedux))>
    </a>
  </div>
  <Connect(Pluggable)
    hide={[MockFunction]}
    key="profilePopoverPluggable3"
    pluggableName="PopoverUserActions"
    status="offline"
    user={
      Object {
        "first_name": "shared",
        "name": "shared user",
        "remote_id": "fakeuser",
        "username": "shared_user",
      }
    }
  />
</Popover>
`;
