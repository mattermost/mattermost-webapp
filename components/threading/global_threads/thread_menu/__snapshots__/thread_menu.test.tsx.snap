// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/threading/common/thread_menu should match snapshot 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(Component)
    hasUnreads={false}
    isFollowing={false}
    threadId="1y8hpek81byspd4enyk9mp1ncw"
    unreadTimestamp={1610486901110}
  >
    <Memo(ThreadMenu)
      actions={
        Object {
          "getPostThread": [Function],
        }
      }
      hasUnreads={false}
      isFollowing={false}
      postsInThread={Array []}
      threadId="1y8hpek81byspd4enyk9mp1ncw"
      unreadTimestamp={1610486901110}
    >
      <ThreadMenu
        actions={
          Object {
            "getPostThread": [Function],
          }
        }
        hasUnreads={false}
        isFollowing={false}
        postsInThread={Array []}
        threadId="1y8hpek81byspd4enyk9mp1ncw"
        unreadTimestamp={1610486901110}
      >
        <MenuWrapper
          animationComponent={[Function]}
          className=""
          stopPropagationOnToggle={true}
        >
          <div
            className="MenuWrapper "
            onClick={[Function]}
          >
            <button>
              test
            </button>
            <MenuWrapperAnimation
              show={false}
            >
              <CSSTransition
                classNames="MenuWrapperAnimation"
                enter={true}
                exit={true}
                in={false}
                mountOnEnter={true}
                timeout={80}
                unmountOnExit={true}
              >
                <Transition
                  appear={false}
                  enter={true}
                  exit={true}
                  in={false}
                  mountOnEnter={true}
                  onEnter={[Function]}
                  onEntered={[Function]}
                  onEntering={[Function]}
                  onExit={[Function]}
                  onExited={[Function]}
                  onExiting={[Function]}
                  timeout={80}
                  unmountOnExit={true}
                />
              </CSSTransition>
            </MenuWrapperAnimation>
          </div>
        </MenuWrapper>
      </ThreadMenu>
    </Memo(ThreadMenu)>
  </Connect(Component)>
</Provider>
`;

exports[`components/threading/common/thread_menu should match snapshot after opening 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(Component)
    hasUnreads={false}
    isFollowing={false}
    threadId="1y8hpek81byspd4enyk9mp1ncw"
    unreadTimestamp={1610486901110}
  >
    <Memo(ThreadMenu)
      actions={
        Object {
          "getPostThread": [Function],
        }
      }
      hasUnreads={false}
      isFollowing={false}
      postsInThread={Array []}
      threadId="1y8hpek81byspd4enyk9mp1ncw"
      unreadTimestamp={1610486901110}
    >
      <ThreadMenu
        actions={
          Object {
            "getPostThread": [Function],
          }
        }
        hasUnreads={false}
        isFollowing={false}
        postsInThread={Array []}
        threadId="1y8hpek81byspd4enyk9mp1ncw"
        unreadTimestamp={1610486901110}
      >
        <MenuWrapper
          animationComponent={[Function]}
          className=""
          stopPropagationOnToggle={true}
        >
          <div
            className="MenuWrapper  MenuWrapper--open"
            onClick={[Function]}
          >
            <button>
              test
            </button>
            <MenuWrapperAnimation
              show={true}
            >
              <CSSTransition
                classNames="MenuWrapperAnimation"
                enter={true}
                exit={true}
                in={true}
                mountOnEnter={true}
                timeout={80}
                unmountOnExit={true}
              >
                <Transition
                  appear={false}
                  enter={true}
                  exit={true}
                  in={true}
                  mountOnEnter={true}
                  onEnter={[Function]}
                  onEntered={[Function]}
                  onEntering={[Function]}
                  onExit={[Function]}
                  onExited={[Function]}
                  onExiting={[Function]}
                  timeout={80}
                  unmountOnExit={true}
                >
                  <Menu
                    ariaLabel=""
                    openLeft={true}
                  >
                    <div
                      aria-label=""
                      className="a11y__popup Menu"
                      role="menu"
                    >
                      <ul
                        className="Menu__content dropdown-menu"
                        onClick={[Function]}
                        style={
                          Object {
                            "left": "inherit",
                            "right": 0,
                          }
                        }
                      >
                        <MenuItemAction
                          extraText="You will be notified about replies"
                          onClick={[Function]}
                          show={true}
                          text="Follow thread"
                        >
                          <li
                            className="MenuItem"
                            role="menuitem"
                          >
                            <MenuItemActionImpl
                              ariaLabel="Follow thread"
                              extraText="You will be notified about replies"
                              onClick={[Function]}
                              text="Follow thread"
                            >
                              <button
                                aria-label="Follow thread"
                                className="style--none MenuItem__with-help"
                                onClick={[Function]}
                              >
                                <span
                                  className="MenuItem__primary-text"
                                >
                                  Follow thread
                                </span>
                                <span
                                  className="MenuItem__help-text"
                                >
                                  You will be notified about replies
                                </span>
                              </button>
                            </MenuItemActionImpl>
                          </li>
                        </MenuItemAction>
                        <MenuItemAction
                          onClick={[Function]}
                          show={true}
                          text="Open in channel"
                        >
                          <li
                            className="MenuItem"
                            role="menuitem"
                          >
                            <MenuItemActionImpl
                              ariaLabel="Open in channel"
                              onClick={[Function]}
                              text="Open in channel"
                            >
                              <button
                                aria-label="Open in channel"
                                className="style--none"
                                onClick={[Function]}
                              >
                                <span
                                  className="MenuItem__primary-text"
                                >
                                  Open in channel
                                </span>
                              </button>
                            </MenuItemActionImpl>
                          </li>
                        </MenuItemAction>
                        <MenuItemAction
                          onClick={[Function]}
                          show={true}
                          text="Mark as unread"
                        >
                          <li
                            className="MenuItem"
                            role="menuitem"
                          >
                            <MenuItemActionImpl
                              ariaLabel="Mark as unread"
                              onClick={[Function]}
                              text="Mark as unread"
                            >
                              <button
                                aria-label="Mark as unread"
                                className="style--none"
                                onClick={[Function]}
                              >
                                <span
                                  className="MenuItem__primary-text"
                                >
                                  Mark as unread
                                </span>
                              </button>
                            </MenuItemActionImpl>
                          </li>
                        </MenuItemAction>
                        <MenuItemAction
                          onClick={[Function]}
                          show={true}
                          text="Save"
                        >
                          <li
                            className="MenuItem"
                            role="menuitem"
                          >
                            <MenuItemActionImpl
                              ariaLabel="Save"
                              onClick={[Function]}
                              text="Save"
                            >
                              <button
                                aria-label="Save"
                                className="style--none"
                                onClick={[Function]}
                              >
                                <span
                                  className="MenuItem__primary-text"
                                >
                                  Save
                                </span>
                              </button>
                            </MenuItemActionImpl>
                          </li>
                        </MenuItemAction>
                        <MenuItemAction
                          onClick={[Function]}
                          show={true}
                          text="Copy link"
                        >
                          <li
                            className="MenuItem"
                            role="menuitem"
                          >
                            <MenuItemActionImpl
                              ariaLabel="Copy link"
                              onClick={[Function]}
                              text="Copy link"
                            >
                              <button
                                aria-label="Copy link"
                                className="style--none"
                                onClick={[Function]}
                              >
                                <span
                                  className="MenuItem__primary-text"
                                >
                                  Copy link
                                </span>
                              </button>
                            </MenuItemActionImpl>
                          </li>
                        </MenuItemAction>
                      </ul>
                    </div>
                  </Menu>
                </Transition>
              </CSSTransition>
            </MenuWrapperAnimation>
          </div>
        </MenuWrapper>
      </ThreadMenu>
    </Memo(ThreadMenu)>
  </Connect(Component)>
</Provider>
`;
