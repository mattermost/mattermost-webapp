{"version":3,"file":"808.16a154e04d187d8f5192.js","mappings":"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","sources":["webpack://@mattermost/webapp/./components/common/back_button.tsx","webpack://@mattermost/webapp/./components/common/site_name_and_description.tsx","webpack://@mattermost/webapp/./components/common/infinite_scroll.tsx","webpack://@mattermost/webapp/./components/widgets/icons/team_info_icon.tsx","webpack://@mattermost/webapp/./components/select_team/components/select_team_item.tsx","webpack://@mattermost/webapp/./components/select_team/select_team.tsx","webpack://@mattermost/webapp/./components/select_team/index.ts","webpack://@mattermost/webapp/./components/widgets/icons/fa_logout_icon.tsx","webpack://@mattermost/webapp/./images/logo.png"],"sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage, useIntl} from 'react-intl';\nimport {Link} from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n\n    /**\n     * URL to return to\n     */\n    url: string;\n\n    className?: string;\n\n    /**\n     * onClick handler when user clicks back button\n     */\n    onClick?: React.EventHandler<React.MouseEvent>;\n}\n\nconst BackButton = ({url, className, onClick}: Props): JSX.Element => {\n    const {formatMessage} = useIntl();\n\n    return (\n        <div\n            id='back_button'\n            className={classNames('signup-header', className)}\n        >\n            <Link\n                onClick={onClick}\n                to={url}\n            >\n                <span\n                    id='back_button_icon'\n                    className='fa fa-1x fa-angle-left'\n                    title={formatMessage({id: 'generic_icons.back', defaultMessage: 'Back Icon'})}\n                />\n                <FormattedMessage\n                    id='web.header.back'\n                    defaultMessage='Back'\n                />\n            </Link>\n        </div>\n    );\n};\nBackButton.defaultProps = {\n    url: '/',\n};\n\nexport default BackButton;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\ntype Props = {\n    customDescriptionText?: string;\n    siteName: string;\n}\n\nexport default class SiteNameAndDescription extends React.PureComponent<Props> {\n    public static defaultProps: Partial<Props> = {\n        siteName: 'Mattermost',\n    }\n\n    public render(): JSX.Element {\n        const {\n            customDescriptionText,\n            siteName,\n        } = this.props;\n        let description = null;\n        if (customDescriptionText) {\n            description = customDescriptionText;\n        } else {\n            description = (\n                <FormattedMessage\n                    id='web.root.signup_info'\n                    defaultMessage='All team communication in one place, searchable and accessible anywhere'\n                />\n            );\n        }\n\n        return (\n            <React.Fragment>\n                <h1 id='site_name'>{siteName}</h1>\n                <h3\n                    id='site_description'\n                    className='color--light'\n                >\n                    {description}\n                </h3>\n            </React.Fragment>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {CSSProperties} from 'react';\nimport debounce from 'lodash/debounce';\n\nimport LoadingScreen from 'components/loading_screen';\n\nconst SCROLL_BUFFER = 100;\nconst DEBOUNCE_WAIT_TIME = 200;\n\ntype Props = {\n    children: React.ReactNode;\n\n    /**\n     * Function that is called to load more items\n     */\n    callBack: () => void;\n\n    /**\n     * Message to display when all the data has been scrolled through\n     */\n    endOfDataMessage?: string;\n\n    /**\n     * A wrapper class to define styling of the infinite scroll\n     */\n    styleClass?: string;\n\n    /**\n     * A number that determines how far the scroll is near the bottom before\n     * loading more items. The bigger this value the more items will be loaded\n     * much earlier as you scroll to the bottom.\n     */\n    bufferValue: number;\n\n    /**\n     * The total number of items to be scrolled through\n     */\n    totalItems: number;\n\n    /**\n     * The number of items to load in a single fetch\n     */\n    itemsPerPage: number;\n\n    /**\n     * The current page that has been scrolled to\n     */\n    pageNumber: number;\n\n    /**\n     * Optional style object that's passed on to the underlying loader\n     * component\n     */\n\n    loaderStyle?: CSSProperties;\n};\n\ntype State = {\n    isFetching: boolean;\n    isEndofData: boolean;\n};\n\nexport default class InfiniteScroll extends React.PureComponent<Props, State> {\n    node: React.RefObject<HTMLDivElement>;\n\n    static defaultProps = {\n        bufferValue: SCROLL_BUFFER,\n        endOfDataMessage: '',\n        styleClass: '',\n        loaderStyle: {},\n    };\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            isFetching: false,\n            isEndofData: false,\n        };\n        this.node = React.createRef();\n    }\n\n    componentDidMount(): void {\n        this.node.current?.addEventListener('scroll', this.debounceHandleScroll);\n    }\n\n    componentWillUnmount(): void {\n        this.node.current?.removeEventListener('scroll', this.debounceHandleScroll);\n    }\n\n    validateBuffer = (buffer: number): number => {\n        if (buffer < SCROLL_BUFFER) {\n            return SCROLL_BUFFER;\n        }\n        return Math.abs(buffer);\n    }\n\n    getAmountOfPages = (total: number, freq: number): number => {\n        return Math.ceil(total / freq);\n    }\n\n    handleScroll = (): void => {\n        const {isFetching, isEndofData} = this.state;\n        const {callBack, bufferValue, totalItems, itemsPerPage, pageNumber} = this.props;\n\n        const node = this.node.current;\n        const validBuffer = this.validateBuffer(bufferValue);\n\n        const toScroll = node!.scrollHeight - node!.clientHeight - validBuffer;\n        const nearBottom = node!.scrollTop > toScroll;\n\n        if (nearBottom && !isEndofData && !isFetching) {\n            this.setState({isFetching: true},\n                async () => {\n                    await callBack();\n\n                    this.setState({\n                        isFetching: false,\n                    });\n\n                    if (totalItems === 0) {\n                        this.setState({\n                            isEndofData: true,\n                        });\n                        return;\n                    }\n\n                    const amountOfPages = this.getAmountOfPages(totalItems, itemsPerPage);\n\n                    if (pageNumber === amountOfPages) {\n                        this.setState({\n                            isEndofData: true,\n                        });\n                    }\n                });\n        }\n    }\n\n    debounceHandleScroll = debounce(this.handleScroll, DEBOUNCE_WAIT_TIME);\n\n    render(): React.ReactNode {\n        const {children, endOfDataMessage, styleClass, loaderStyle} = this.props;\n        const {isEndofData, isFetching} = this.state;\n        const showLoader = !isEndofData && isFetching; // show loader if fetching and end of data is not reached.\n        return (\n            <>\n                <div\n                    className={`infinite-scroll ${styleClass}`}\n                    ref={this.node}\n                >\n                    {children}\n                    {showLoader && (\n                        <LoadingScreen\n                            style={loaderStyle}\n                            message=' '\n                        />\n                    )}\n                    {!showLoader && endOfDataMessage}\n                </div>\n            </>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {CSSProperties} from 'react';\nimport {useIntl} from 'react-intl';\n\nexport default function TeamInfoIcon(props: React.HTMLAttributes<HTMLSpanElement>) {\n    const {formatMessage} = useIntl();\n    return (\n        <span {...props}>\n            <svg\n                width='100%'\n                height='100%'\n                viewBox='0 0 20 20'\n                style={style}\n                role='img'\n                aria-label={formatMessage({id: 'generic_icons.info', defaultMessage: 'Info Icon'})}\n            >\n                <g transform='matrix(1.17647,0,0,1.17647,-1.55431e-15,-1.00573e-14)'>\n                    <path d='M8.5,0C3.797,0 0,3.797 0,8.5C0,13.203 3.797,17 8.5,17C13.203,17 17,13.203 17,8.5C17,3.797 13.203,0 8.5,0ZM10,8.5C10,7.672 9.328,7 8.5,7C7.672,7 7,7.672 7,8.5L7,12.45C7,13.278 7.672,13.95 8.5,13.95C9.328,13.95 10,13.278 10,12.45L10,8.5ZM8.5,3C9.328,3 10,3.672 10,4.5C10,5.328 9.328,6 8.5,6C7.672,6 7,5.328 7,4.5C7,3.672 7.672,3 8.5,3Z'/>\n                </g>\n            </svg>\n        </span>\n    );\n}\n\nconst style: CSSProperties = {\n    fillRule: 'evenodd',\n    clipRule: 'evenodd',\n    strokeLinejoin: 'round',\n    strokeMiterlimit: 1.41421,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {ReactNode, MouseEvent} from 'react';\n\nimport {Team} from 'mattermost-redux/types/teams';\n\nimport LocalizedIcon from 'components/localized_icon';\nimport OverlayTrigger from 'components/overlay_trigger';\nimport Tooltip from 'components/tooltip';\nimport TeamInfoIcon from 'components/widgets/icons/team_info_icon';\n\nimport {t} from 'utils/i18n';\nimport * as Utils from 'utils/utils';\n\ntype Props = {\n    team: Team;\n    onTeamClick: (team: Team) => void;\n    loading: boolean;\n    canJoinPublicTeams: boolean;\n    canJoinPrivateTeams: boolean;\n};\n\nexport default class SelectTeamItem extends React.PureComponent<Props> {\n    handleTeamClick = (e: MouseEvent): void => {\n        e.preventDefault();\n        this.props.onTeamClick(this.props.team);\n    }\n\n    renderDescriptionTooltip = (): ReactNode => {\n        const team = this.props.team;\n        if (!team.description) {\n            return null;\n        }\n\n        const descriptionTooltip = (\n            <Tooltip id='team-description__tooltip'>\n                {team.description}\n            </Tooltip>\n        );\n\n        return (\n            <OverlayTrigger\n                delayShow={1000}\n                placement='top'\n                overlay={descriptionTooltip}\n                rootClose={true}\n                container={this}\n            >\n                <TeamInfoIcon className='icon icon--info'/>\n            </OverlayTrigger>\n        );\n    }\n\n    render() {\n        const {canJoinPublicTeams, canJoinPrivateTeams, loading, team} = this.props;\n        let icon;\n        if (loading) {\n            icon = (\n                <LocalizedIcon\n                    className='fa fa-refresh fa-spin right signup-team__icon'\n                    component='span'\n                    title={{id: t('generic_icons.loading'), defaultMessage: 'Loading Icon'}}\n                />\n            );\n        } else {\n            icon = (\n                <LocalizedIcon\n                    className='fa fa-angle-right right signup-team__icon'\n                    component='span'\n                    title={{id: t('select_team.join.icon'), defaultMessage: 'Join Team Icon'}}\n                />\n            );\n        }\n\n        const canJoin = (team.allow_open_invite && canJoinPublicTeams) || (!team.allow_open_invite && canJoinPrivateTeams);\n\n        return (\n            <div className='signup-team-dir'>\n                {this.renderDescriptionTooltip()}\n                <a\n                    href='#'\n                    id={Utils.createSafeId(team.display_name)}\n                    onClick={canJoin ? this.handleTeamClick : undefined}\n                    className={canJoin ? '' : 'disabled'}\n                >\n                    <span className='signup-team-dir__name'>{team.display_name}</span>\n                    {!team.allow_open_invite &&\n                        <LocalizedIcon\n                            className='fa fa-lock light'\n                            title={{id: t('select_team.private.icon'), defaultMessage: 'Private team'}}\n                        />}\n                    {canJoin && icon}\n                </a>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {ReactNode, MouseEvent} from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport {Team} from 'mattermost-redux/types/teams';\n\nimport {emitUserLoggedOutEvent} from 'actions/global_actions';\nimport {trackEvent} from 'actions/telemetry_actions.jsx';\n\nimport * as UserAgent from 'utils/user_agent';\nimport Constants from 'utils/constants';\n\nimport logoImage from 'images/logo.png';\n\nimport AnnouncementBar from 'components/announcement_bar';\n\nimport BackButton from 'components/common/back_button';\nimport LoadingScreen from 'components/loading_screen';\n\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\nimport SiteNameAndDescription from 'components/common/site_name_and_description';\nimport LogoutIcon from 'components/widgets/icons/fa_logout_icon';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nimport InfiniteScroll from '../common/infinite_scroll';\n\nimport SelectTeamItem from './components/select_team_item';\n\nexport const TEAMS_PER_PAGE = 30;\nconst TEAM_MEMBERSHIP_DENIAL_ERROR_ID = 'api.team.add_members.user_denied';\n\ntype Actions = {\n    getTeams: (page?: number, perPage?: number, includeTotalCount?: boolean) => any;\n    loadRolesIfNeeded: (roles: Iterable<string>) => any;\n    addUserToTeam: (teamId: string, userId?: string) => any;\n}\n\ntype Props = {\n    currentUserId: string;\n    currentUserRoles: string;\n    currentUserIsGuest?: boolean;\n    customDescriptionText?: string;\n    isMemberOfTeam: boolean;\n    listableTeams: Team[];\n    siteName?: string;\n    canCreateTeams: boolean;\n    canManageSystem: boolean;\n    canJoinPublicTeams: boolean;\n    canJoinPrivateTeams: boolean;\n    history?: any;\n    siteURL?: string;\n    actions: Actions;\n    totalTeamsCount: number;\n};\n\ntype State = {\n    loadingTeamId?: string;\n    error: any;\n    endofTeamsData: boolean;\n    currentPage: number;\n    currentListableTeams: Team[];\n}\n\nexport default class SelectTeam extends React.PureComponent<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            loadingTeamId: '',\n            error: null,\n            endofTeamsData: false,\n            currentPage: 0,\n            currentListableTeams: [],\n        };\n    }\n\n    static getDerivedStateFromProps(props: Props, state: State) {\n        if (props.listableTeams.length !== state.currentListableTeams.length) {\n            return {\n                currentListableTeams: props.listableTeams.slice(0, TEAMS_PER_PAGE * state.currentPage),\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        trackEvent('signup', 'signup_select_team', {userId: this.props.currentUserId});\n        this.fetchMoreTeams();\n        if (this.props.currentUserRoles !== undefined) {\n            this.props.actions.loadRolesIfNeeded(this.props.currentUserRoles.split(' '));\n        }\n    }\n\n    fetchMoreTeams = async () => {\n        const {currentPage} = this.state;\n        const {actions} = this.props;\n\n        const response = await actions.getTeams(currentPage, TEAMS_PER_PAGE, true);\n\n        // We don't want to increase the page number if no data came back previously\n        if (!response.error && !(response.error instanceof Error)) {\n            this.setState((prevState) => (\n                {\n                    currentPage: prevState.currentPage + 1,\n                }\n            ),\n            );\n        }\n    }\n\n    handleTeamClick = async (team: Team) => {\n        const {siteURL, currentUserRoles} = this.props;\n        this.setState({loadingTeamId: team.id});\n\n        const {data, error} = await this.props.actions.addUserToTeam(team.id, this.props.currentUserId);\n        if (data && this.props.history !== undefined) {\n            this.props.history.push(`/${team.name}/channels/${Constants.DEFAULT_CHANNEL}`);\n        } else if (error) {\n            let errorMsg = error.message;\n\n            if (error.server_error_id === TEAM_MEMBERSHIP_DENIAL_ERROR_ID) {\n                if (currentUserRoles !== undefined && currentUserRoles.includes(Constants.PERMISSIONS_SYSTEM_ADMIN)) {\n                    errorMsg = (\n                        <FormattedMarkdownMessage\n                            id='join_team_group_constrained_denied_admin'\n                            defaultMessage={`You need to be a member of a linked group to join this team. You can add a group to this team [here](${siteURL}/admin_console/user_management/groups).`}\n                            values={{siteURL}}\n                        />\n                    );\n                } else {\n                    errorMsg = (\n                        <FormattedMarkdownMessage\n                            id='join_team_group_constrained_denied'\n                            defaultMessage='You need to be a member of a linked group to join this team.'\n                        />\n                    );\n                }\n            }\n\n            this.setState({\n                error: errorMsg,\n                loadingTeamId: '',\n            });\n        }\n    };\n\n    handleLogoutClick = (e: MouseEvent): void => {\n        e.preventDefault();\n        trackEvent('select_team', 'click_logout');\n        emitUserLoggedOutEvent('/login');\n    };\n\n    clearError = (e: MouseEvent): void => {\n        e.preventDefault();\n\n        this.setState({\n            error: null,\n        });\n    };\n\n    render(): ReactNode {\n        const {currentPage, currentListableTeams} = this.state;\n        const {\n            currentUserIsGuest,\n            canManageSystem,\n            customDescriptionText,\n            isMemberOfTeam,\n            siteName,\n            canCreateTeams,\n            canJoinPublicTeams,\n            canJoinPrivateTeams,\n            totalTeamsCount,\n        } = this.props;\n\n        let openContent;\n        if (this.state.loadingTeamId) {\n            openContent = <LoadingScreen/>;\n        } else if (this.state.error) {\n            openContent = (\n                <div className='signup__content'>\n                    <div className={'form-group has-error'}>\n                        <label className='control-label'>{this.state.error}</label>\n                    </div>\n                </div>\n            );\n        } else if (currentUserIsGuest) {\n            openContent = (\n                <div className='signup__content'>\n                    <div className={'form-group has-error'}>\n                        <label className='control-label'>\n                            <FormattedMessage\n                                id='signup_team.guest_without_channels'\n                                defaultMessage='Your guest account has no channels assigned. Please contact an administrator.'\n                            />\n                        </label>\n                    </div>\n                </div>\n            );\n        } else {\n            let joinableTeamContents: any = [];\n            currentListableTeams.forEach((listableTeam) => {\n                if ((listableTeam.allow_open_invite && canJoinPublicTeams) || (!listableTeam.allow_open_invite && canJoinPrivateTeams)) {\n                    joinableTeamContents.push(\n                        <SelectTeamItem\n                            key={'team_' + listableTeam.name}\n                            team={listableTeam}\n                            onTeamClick={this.handleTeamClick}\n                            loading={this.state.loadingTeamId === listableTeam.id}\n                            canJoinPublicTeams={canJoinPublicTeams}\n                            canJoinPrivateTeams={canJoinPrivateTeams}\n                        />,\n                    );\n                }\n            });\n\n            if (joinableTeamContents.length === 0 && (canCreateTeams || canManageSystem)) {\n                joinableTeamContents = (\n                    <div className='signup-team-dir-err'>\n                        <div>\n                            <FormattedMessage\n                                id='signup_team.no_open_teams_canCreate'\n                                defaultMessage='No teams are available to join. Please create a new team or ask your administrator for an invite.'\n                            />\n                        </div>\n                    </div>\n                );\n            } else if (joinableTeamContents.length === 0) {\n                joinableTeamContents = (\n                    <div className='signup-team-dir-err'>\n                        <div>\n                            <SystemPermissionGate permissions={[Permissions.CREATE_TEAM]}>\n                                <FormattedMessage\n                                    id='signup_team.no_open_teams_canCreate'\n                                    defaultMessage='No teams are available to join. Please create a new team or ask your administrator for an invite.'\n                                />\n                            </SystemPermissionGate>\n                            <SystemPermissionGate\n                                permissions={[Permissions.CREATE_TEAM]}\n                                invert={true}\n                            >\n                                <FormattedMessage\n                                    id='signup_team.no_open_teams'\n                                    defaultMessage='No teams are available to join. Please ask your administrator for an invite.'\n                                />\n                            </SystemPermissionGate>\n                        </div>\n                    </div>\n                );\n            }\n\n            openContent = (\n                <div\n                    id='teamsYouCanJoinContent'\n                    className='signup__content'\n                >\n                    <h4>\n                        <FormattedMessage\n                            id='signup_team.join_open'\n                            defaultMessage='Teams you can join: '\n                        />\n                    </h4>\n                    <InfiniteScroll\n                        callBack={this.fetchMoreTeams}\n                        styleClass='signup-team-all'\n                        totalItems={totalTeamsCount}\n                        itemsPerPage={TEAMS_PER_PAGE}\n                        bufferValue={280}\n                        pageNumber={currentPage}\n                        loaderStyle={{padding: '0px', height: '40px'}}\n                    >\n                        {joinableTeamContents}\n                    </InfiniteScroll>\n                </div>\n            );\n        }\n\n        const teamSignUp = (\n            <SystemPermissionGate permissions={[Permissions.CREATE_TEAM]}>\n                <div\n                    className='margin--extra'\n                    style={{marginTop: '0.5em'}}\n                >\n                    <Link\n                        id='createNewTeamLink'\n                        to='/create_team'\n                        onClick={() => trackEvent('select_team', 'click_create_team')}\n                        className='signup-team-login'\n                    >\n                        <FormattedMessage\n                            id='login.createTeam'\n                            defaultMessage='Create a team'\n                        />\n                    </Link>\n                </div>\n            </SystemPermissionGate>\n        );\n\n        let adminConsoleLink;\n        if (!UserAgent.isMobileApp()) {\n            adminConsoleLink = (\n                <SystemPermissionGate permissions={[Permissions.MANAGE_SYSTEM]}>\n                    <div className='mt-8 hidden-xs'>\n                        <Link\n                            to='/admin_console'\n                            className='signup-team-login'\n                            onClick={() => trackEvent('select_team', 'click_system_console')}\n                        >\n                            <FormattedMessage\n                                id='signup_team_system_console'\n                                defaultMessage='Go to System Console'\n                            />\n                        </Link>\n                    </div>\n                </SystemPermissionGate>\n            );\n        }\n\n        let headerButton;\n        if (this.state.error) {\n            headerButton = <BackButton onClick={this.clearError}/>;\n        } else if (isMemberOfTeam) {\n            headerButton = <BackButton/>;\n        } else {\n            headerButton = (\n                <div className='signup-header'>\n                    <a\n                        href='#'\n                        id='logout'\n                        onClick={this.handleLogoutClick}\n                    >\n                        <LogoutIcon/>\n                        <FormattedMessage\n                            id='web.header.logout'\n                            defaultMessage='Logout'\n                        />\n                    </a>\n                </div>\n            );\n        }\n        return (\n            <div>\n                <AnnouncementBar/>\n                {headerButton}\n                <div className='col-sm-12'>\n                    <div\n                        className={'select-team__container signup-team__container'}\n                    >\n                        <img\n                            alt={'signup team logo'}\n                            className='signup-team-logo'\n                            src={logoImage}\n                        />\n                        <SiteNameAndDescription\n                            customDescriptionText={customDescriptionText}\n                            siteName={siteName}\n                        />\n                        {openContent}\n                        {teamSignUp}\n                        {adminConsoleLink}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch} from 'redux';\nimport {withRouter} from 'react-router-dom';\n\nimport {getTeams} from 'mattermost-redux/actions/teams';\nimport {loadRolesIfNeeded} from 'mattermost-redux/actions/roles';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {Permissions} from 'mattermost-redux/constants';\nimport {haveISystemPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {getSortedListableTeams, getTeamMemberships} from 'mattermost-redux/selectors/entities/teams';\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\n\nimport {GlobalState} from 'types/store';\n\nimport {addUserToTeam} from 'actions/team_actions';\nimport {isGuest} from 'mattermost-redux/utils/user_utils';\n\nimport SelectTeam from './select_team';\n\nfunction mapStateToProps(state: GlobalState) {\n    const config = getConfig(state);\n    const currentUser = getCurrentUser(state);\n    const myTeamMemberships = Object.values(getTeamMemberships(state));\n\n    return {\n        currentUserId: currentUser.id,\n        currentUserRoles: currentUser.roles || '',\n        currentUserIsGuest: isGuest(currentUser.roles),\n        customDescriptionText: config.CustomDescriptionText,\n        isMemberOfTeam: myTeamMemberships && myTeamMemberships.length > 0,\n        listableTeams: getSortedListableTeams(state, currentUser.locale),\n        siteName: config.SiteName,\n        canCreateTeams: haveISystemPermission(state, {permission: Permissions.CREATE_TEAM}),\n        canManageSystem: haveISystemPermission(state, {permission: Permissions.MANAGE_SYSTEM}),\n        canJoinPublicTeams: haveISystemPermission(state, {permission: Permissions.JOIN_PUBLIC_TEAMS}),\n        canJoinPrivateTeams: haveISystemPermission(state, {permission: Permissions.JOIN_PRIVATE_TEAMS}),\n        siteURL: config.SiteURL,\n        totalTeamsCount: state.entities.teams.totalCount || 0,\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        actions: bindActionCreators({\n            getTeams,\n            loadRolesIfNeeded,\n            addUserToTeam,\n        }, dispatch),\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SelectTeam));\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {useIntl} from 'react-intl';\n\nexport default function LogoutIcon() {\n    const {formatMessage} = useIntl();\n    return (\n        <i\n            className='fa fa-1x fa-angle-left'\n            title={formatMessage({id: 'generic_icons.logout', defaultMessage: 'Logout Icon'})}\n        />\n    );\n}\n","export default __webpack_public_path__ + \"files/ab8aa80cba445eb0fb75e6611c292567.png\";"],"names":["BackButton","url","className","onClick","formatMessage","useIntl","id","classNames","Link","to","title","defaultMessage","defaultProps","SiteNameAndDescription","React","render","customDescriptionText","siteName","this","props","description","InfiniteScroll","constructor","super","buffer","Math","abs","total","freq","ceil","isFetching","isEndofData","state","callBack","bufferValue","totalItems","itemsPerPage","pageNumber","node","current","validBuffer","validateBuffer","toScroll","scrollHeight","clientHeight","scrollTop","setState","async","amountOfPages","getAmountOfPages","debounce","handleScroll","componentDidMount","addEventListener","debounceHandleScroll","componentWillUnmount","removeEventListener","children","endOfDataMessage","styleClass","loaderStyle","showLoader","ref","style","message","TeamInfoIcon","width","height","viewBox","role","aria-label","transform","d","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","SelectTeamItem","e","preventDefault","onTeamClick","team","descriptionTooltip","delayShow","placement","overlay","rootClose","container","canJoinPublicTeams","canJoinPrivateTeams","loading","icon","component","t","canJoin","allow_open_invite","renderDescriptionTooltip","href","Utils","display_name","handleTeamClick","undefined","SelectTeam","currentPage","actions","response","getTeams","error","Error","prevState","siteURL","currentUserRoles","loadingTeamId","data","addUserToTeam","currentUserId","history","push","name","Constants","errorMsg","server_error_id","includes","values","trackEvent","emitUserLoggedOutEvent","endofTeamsData","currentListableTeams","listableTeams","length","slice","userId","fetchMoreTeams","loadRolesIfNeeded","split","currentUserIsGuest","canManageSystem","isMemberOfTeam","canCreateTeams","totalTeamsCount","openContent","joinableTeamContents","forEach","listableTeam","key","permissions","Permissions","invert","padding","teamSignUp","marginTop","adminConsoleLink","headerButton","UserAgent","clearError","handleLogoutClick","alt","src","logoImage","withRouter","connect","config","getConfig","currentUser","getCurrentUser","myTeamMemberships","Object","getTeamMemberships","roles","isGuest","CustomDescriptionText","getSortedListableTeams","locale","SiteName","haveISystemPermission","permission","SiteURL","entities","teams","totalCount","dispatch","bindActionCreators","LogoutIcon"],"sourceRoot":""}