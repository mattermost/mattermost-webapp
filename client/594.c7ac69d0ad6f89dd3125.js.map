{"version":3,"file":"594.c7ac69d0ad6f89dd3125.js","mappings":"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","sources":["webpack://@mattermost/webapp/./components/common/back_button.tsx","webpack://@mattermost/webapp/./components/common/site_name_and_description.tsx","webpack://@mattermost/webapp/./components/create_team/components/display_name.tsx","webpack://@mattermost/webapp/./components/create_team/components/team_url/team_url.tsx","webpack://@mattermost/webapp/./components/create_team/components/team_url/index.ts","webpack://@mattermost/webapp/./components/create_team/create_team.tsx","webpack://@mattermost/webapp/./components/create_team/index.js","webpack://@mattermost/webapp/./images/logo.png"],"sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage, useIntl} from 'react-intl';\nimport {Link} from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n\n    /**\n     * URL to return to\n     */\n    url: string;\n\n    className?: string;\n\n    /**\n     * onClick handler when user clicks back button\n     */\n    onClick?: React.EventHandler<React.MouseEvent>;\n}\n\nconst BackButton = ({url, className, onClick}: Props): JSX.Element => {\n    const {formatMessage} = useIntl();\n\n    return (\n        <div\n            id='back_button'\n            className={classNames('signup-header', className)}\n        >\n            <Link\n                onClick={onClick}\n                to={url}\n            >\n                <span\n                    id='back_button_icon'\n                    className='fa fa-1x fa-angle-left'\n                    title={formatMessage({id: 'generic_icons.back', defaultMessage: 'Back Icon'})}\n                />\n                <FormattedMessage\n                    id='web.header.back'\n                    defaultMessage='Back'\n                />\n            </Link>\n        </div>\n    );\n};\nBackButton.defaultProps = {\n    url: '/',\n};\n\nexport default BackButton;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\ntype Props = {\n    customDescriptionText?: string;\n    siteName: string;\n}\n\nexport default class SiteNameAndDescription extends React.PureComponent<Props> {\n    public static defaultProps: Partial<Props> = {\n        siteName: 'Mattermost',\n    }\n\n    public render(): JSX.Element {\n        const {\n            customDescriptionText,\n            siteName,\n        } = this.props;\n        let description = null;\n        if (customDescriptionText) {\n            description = customDescriptionText;\n        } else {\n            description = (\n                <FormattedMessage\n                    id='web.root.signup_info'\n                    defaultMessage='All team communication in one place, searchable and accessible anywhere'\n                />\n            );\n        }\n\n        return (\n            <React.Fragment>\n                <h1 id='site_name'>{siteName}</h1>\n                <h3\n                    id='site_description'\n                    className='color--light'\n                >\n                    {description}\n                </h3>\n            </React.Fragment>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n/* eslint-disable react/no-string-refs */\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Team} from 'mattermost-redux/types/teams';\n\nimport {trackEvent} from 'actions/telemetry_actions.jsx';\nimport Constants from 'utils/constants';\nimport {cleanUpUrlable} from 'utils/url';\nimport logoImage from 'images/logo.png';\nimport NextIcon from 'components/widgets/icons/fa_next_icon';\n\ntype CreateTeamState = {\n    team?: Partial<Team>;\n    wizard: string;\n};\n\ntype Props = {\n\n    /*\n     * Object containing team's display_name and name\n     */\n    state: CreateTeamState;\n\n    /*\n     * Function that updates parent component with state props\n     */\n    updateParent: (state: CreateTeamState) => void;\n}\n\ntype State = {\n    teamDisplayName: string;\n    nameError?: React.ReactNode;\n}\n\nexport default class TeamSignupDisplayNamePage extends React.PureComponent<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            teamDisplayName: this.props.state.team?.display_name || '', // eslint-disable-line camelcase\n        };\n    }\n\n    componentDidMount(): void {\n        trackEvent('signup', 'signup_team_01_name');\n    }\n\n    submitNext = (e: React.MouseEvent): void => {\n        e.preventDefault();\n        trackEvent('display_name', 'click_next');\n        const displayName = this.state.teamDisplayName.trim();\n        if (!displayName) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.display_name.required'\n                    defaultMessage='This field is required'\n                />),\n            });\n            return;\n        } else if (displayName.length < Constants.MIN_TEAMNAME_LENGTH || displayName.length > Constants.MAX_TEAMNAME_LENGTH) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.display_name.charLength'\n                    defaultMessage='Name must be {min} or more characters up to a maximum of {max}. You can add a longer team description later.'\n                    values={{\n                        min: Constants.MIN_TEAMNAME_LENGTH,\n                        max: Constants.MAX_TEAMNAME_LENGTH,\n                    }}\n                />),\n            });\n            return;\n        }\n\n        const newState = this.props.state;\n        newState.wizard = 'team_url';\n        newState.team!.display_name = displayName;\n        newState.team!.name = cleanUpUrlable(displayName);\n        this.props.updateParent(newState);\n    }\n\n    handleFocus = (e: React.FocusEvent<HTMLInputElement>): void => {\n        e.preventDefault();\n        e.currentTarget.select();\n    }\n\n    handleDisplayNameChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        this.setState({teamDisplayName: e.target.value});\n    }\n\n    render(): React.ReactNode {\n        let nameError = null;\n        let nameDivClass = 'form-group';\n        if (this.state.nameError) {\n            nameError = <label className='control-label'>{this.state.nameError}</label>;\n            nameDivClass += ' has-error';\n        }\n\n        return (\n            <div>\n                <form>\n                    <img\n                        alt={'signup logo'}\n                        className='signup-team-logo'\n                        src={logoImage}\n                    />\n                    <h5>\n                        <FormattedMessage\n                            id='create_team.display_name.teamName'\n                            tagName='strong'\n                            defaultMessage='Team Name'\n                        />\n                    </h5>\n                    <div className={nameDivClass}>\n                        <div className='row'>\n                            <div className='col-sm-9'>\n                                <input\n                                    id='teamNameInput'\n                                    type='text'\n                                    className='form-control'\n                                    placeholder=''\n                                    maxLength={128}\n                                    value={this.state.teamDisplayName}\n                                    autoFocus={true}\n                                    onFocus={this.handleFocus}\n                                    onChange={this.handleDisplayNameChange}\n                                    spellCheck='false'\n                                />\n                            </div>\n                        </div>\n                        {nameError}\n                    </div>\n                    <div>\n                        <FormattedMessage\n                            id='create_team.display_name.nameHelp'\n                            defaultMessage='Name your team in any language. Your team name shows in menus and headings.'\n                        />\n                    </div>\n                    <button\n                        id='teamNameNextButton'\n                        type='submit'\n                        className='btn btn-primary mt-8'\n                        onClick={this.submitNext}\n                    >\n                        <FormattedMessage\n                            id='create_team.display_name.next'\n                            defaultMessage='Next'\n                        />\n                        <NextIcon/>\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}\n/* eslint-disable react/no-string-refs */\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n/* eslint-disable react/no-string-refs */\n\nimport React from 'react';\nimport {Button} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Team} from 'mattermost-redux/types/teams';\nimport {Client4Error} from 'mattermost-redux/types/client4';\n\nimport {trackEvent} from 'actions/telemetry_actions.jsx';\n\nimport Constants from 'utils/constants';\nimport * as URL from 'utils/url';\nimport logoImage from 'images/logo.png';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport OverlayTrigger from 'components/overlay_trigger';\nimport Tooltip from 'components/tooltip';\n\ntype State = {\n    isLoading: boolean;\n    nameError: string | JSX.Element;\n    teamURL?: string;\n}\n\ntype Props = {\n\n    /*\n     * Object containing team's display_name and name\n     */\n    state: {team?: Partial<Team>; wizard: string};\n\n    /*\n     * Function that updates parent component with state props\n     */\n    updateParent: (state: Props['state']) => void;\n\n    /*\n     * Object with redux action creators\n     */\n    actions: {\n\n        /*\n         * Action creator to check if a team already exists\n         */\n        checkIfTeamExists: (teamName: string) => Promise<{exists: boolean}>;\n\n        /*\n     * Action creator to create a new team\n     */\n        createTeam: (team: Team) => Promise<{data: Team; error: Client4Error}>;\n    };\n    history: {\n        push(path: string): void;\n    };\n}\n\nexport default class TeamUrl extends React.PureComponent<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            nameError: '',\n            isLoading: false,\n            teamURL: props.state.team?.name,\n        };\n    }\n\n    public componentDidMount() {\n        trackEvent('signup', 'signup_team_02_url');\n    }\n\n    public submitBack = (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n        e.preventDefault();\n        trackEvent('signup', 'click_back');\n        const newState = this.props.state;\n        newState.wizard = 'display_name';\n        this.props.updateParent(newState);\n    }\n\n    public submitNext = async (e: React.MouseEvent<Button, MouseEvent>) => {\n        e.preventDefault();\n        trackEvent('signup', 'click_finish');\n\n        const name = this.state.teamURL!.trim();\n        const cleanedName = URL.cleanUpUrlable(name);\n        const urlRegex = /^[a-z]+([a-z\\-0-9]+|(__)?)[a-z0-9]+$/g;\n        const {actions: {checkIfTeamExists, createTeam}} = this.props;\n\n        if (!name) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.team_url.required'\n                    defaultMessage='This field is required'\n                />),\n            });\n            return;\n        }\n\n        if (cleanedName.length < Constants.MIN_TEAMNAME_LENGTH || cleanedName.length > Constants.MAX_TEAMNAME_LENGTH) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.team_url.charLength'\n                    defaultMessage='Name must be {min} or more characters up to a maximum of {max}'\n                    values={{\n                        min: Constants.MIN_TEAMNAME_LENGTH,\n                        max: Constants.MAX_TEAMNAME_LENGTH,\n                    }}\n                />),\n            });\n            return;\n        }\n\n        if (cleanedName !== name || !urlRegex.test(name)) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.team_url.regex'\n                    defaultMessage=\"Use only lower case letters, numbers and dashes. Must start with a letter and can't end in a dash.\"\n                />),\n            });\n            return;\n        }\n\n        for (let index = 0; index < Constants.RESERVED_TEAM_NAMES.length; index++) {\n            if (cleanedName.indexOf(Constants.RESERVED_TEAM_NAMES[index]) === 0) {\n                this.setState({nameError: (\n                    <FormattedMarkdownMessage\n                        id='create_team.team_url.taken'\n                        defaultMessage='This URL [starts with a reserved word](!https://docs.mattermost.com/help/getting-started/creating-teams.html#team-url) or is unavailable. Please try another.'\n                    />),\n                });\n                return;\n            }\n        }\n\n        this.setState({isLoading: true});\n        const teamSignup = JSON.parse(JSON.stringify(this.props.state));\n        teamSignup.team.type = 'O';\n        teamSignup.team.name = name;\n\n        const checkIfTeamExistsData: { exists: boolean } = await checkIfTeamExists(name);\n        const exists = checkIfTeamExistsData.exists;\n\n        if (exists) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.team_url.unavailable'\n                    defaultMessage='This URL is taken or unavailable. Please try another.'\n                />),\n            });\n            this.setState({isLoading: false});\n            return;\n        }\n\n        const createTeamData: { data: Team; error: any } = await createTeam(teamSignup.team);\n        const data = createTeamData.data;\n        const error = createTeamData.error;\n\n        if (data) {\n            this.props.history.push('/' + data.name + '/channels/' + Constants.DEFAULT_CHANNEL);\n            trackEvent('signup', 'signup_team_03_complete');\n        } else if (error) {\n            this.setState({nameError: error.message});\n            this.setState({isLoading: false});\n        }\n    }\n\n    public handleFocus = (e: React.FocusEvent<HTMLInputElement>) => {\n        e.preventDefault();\n        e.currentTarget.select();\n    }\n\n    public handleTeamURLInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({teamURL: e.target.value});\n    }\n\n    render() {\n        let nameError = null;\n        let nameDivClass = 'form-group';\n        if (this.state.nameError) {\n            nameError = <label className='control-label'>{this.state.nameError}</label>;\n            nameDivClass += ' has-error';\n        }\n\n        const title = `${URL.getSiteURL()}/`;\n        const urlTooltip = (\n            <Tooltip id='urlTooltip'>{title}</Tooltip>\n        );\n\n        let finishMessage = (\n            <FormattedMessage\n                id='create_team.team_url.finish'\n                defaultMessage='Finish'\n            />\n        );\n\n        if (this.state.isLoading) {\n            finishMessage = (\n                <FormattedMessage\n                    id='create_team.team_url.creatingTeam'\n                    defaultMessage='Creating team...'\n                />\n            );\n        }\n\n        return (\n            <div>\n                <form>\n                    <img\n                        alt={'signup team logo'}\n                        className='signup-team-logo'\n                        src={logoImage}\n                    />\n                    <h5>\n                        <FormattedMessage\n                            id='create_team.team_url.teamUrl'\n                            tagName='strong'\n                            defaultMessage='Team URL'\n                        />\n                    </h5>\n                    <div className={nameDivClass}>\n                        <div className='row'>\n                            <div className='col-sm-11'>\n                                <div className='input-group input-group--limit'>\n                                    <OverlayTrigger\n                                        delayShow={Constants.OVERLAY_TIME_DELAY}\n                                        placement='top'\n                                        overlay={urlTooltip}\n                                    >\n                                        <span className='input-group-addon'>\n                                            {title}\n                                        </span>\n                                    </OverlayTrigger>\n                                    <input\n                                        id='teamURLInput'\n                                        type='text'\n                                        className='form-control'\n                                        placeholder=''\n                                        maxLength={128}\n                                        value={this.state.teamURL}\n                                        autoFocus={true}\n                                        onFocus={this.handleFocus}\n                                        onChange={this.handleTeamURLInputChange}\n                                        spellCheck='false'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        {nameError}\n                    </div>\n                    <p>\n                        <FormattedMessage\n                            id='create_team.team_url.webAddress'\n                            defaultMessage='Choose the web address of your new team:'\n                        />\n                    </p>\n                    <ul className='color--light'>\n                        <li>\n                            <FormattedMessage\n                                id='create_team.team_url.hint1'\n                                defaultMessage='Short and memorable is best'\n                            />\n                        </li>\n                        <li>\n                            <FormattedMessage\n                                id='create_team.team_url.hint2'\n                                defaultMessage='Use lowercase letters, numbers and dashes'\n                            />\n                        </li>\n                        <li>\n                            <FormattedMessage\n                                id='create_team.team_url.hint3'\n                                defaultMessage=\"Must start with a letter and can't end in a dash\"\n                            />\n                        </li>\n                    </ul>\n                    <div className='mt-8'>\n                        <Button\n                            id='teamURLFinishButton'\n                            type='submit'\n                            bsStyle='primary'\n                            disabled={this.state.isLoading}\n                            onClick={(e: React.MouseEvent<Button, MouseEvent>) => this.submitNext(e)}\n                        >\n                            {finishMessage}\n                        </Button>\n                    </div>\n                    <div className='mt-8'>\n                        <a\n                            href='#'\n                            onClick={this.submitBack}\n                        >\n                            <FormattedMessage\n                                id='create_team.team_url.back'\n                                defaultMessage='Back to previous step'\n                            />\n                        </a>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n/* eslint-enable react/no-string-refs */\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {ActionCreatorsMapObject, bindActionCreators, Dispatch} from 'redux';\nimport {connect} from 'react-redux';\n\nimport {ActionFunc, GenericAction} from 'mattermost-redux/types/actions';\nimport {checkIfTeamExists, createTeam} from 'mattermost-redux/actions/teams';\n\nimport {Team} from 'mattermost-redux/types/teams';\nimport {Client4Error} from 'mattermost-redux/types/client4';\n\nimport TeamUrl from './team_url';\n\ntype Actions = {\n    checkIfTeamExists: (teamName: string) => Promise<{exists: boolean}>;\n    createTeam: (team: Team) => Promise<{data: Team; error: Client4Error}>;\n};\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, Actions>({\n            checkIfTeamExists,\n            createTeam,\n        }, dispatch),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(TeamUrl);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {Route, Switch, Redirect, RouteComponentProps} from 'react-router-dom';\n\nimport {Channel} from 'mattermost-redux/types/channels';\n\nimport {Team} from 'mattermost-redux/types/teams';\n\nimport AnnouncementBar from 'components/announcement_bar';\nimport BackButton from 'components/common/back_button';\nimport DisplayName from 'components/create_team/components/display_name';\nimport SiteNameAndDescription from 'components/common/site_name_and_description';\nimport TeamUrl from 'components/create_team/components/team_url';\n\ntype Props = {\n\n    /*\n   * Object containing information on the current team, used to define BackButton's url\n   */\n    currentTeam: Team;\n\n    /*\n   * Object containing information on the current selected channel, used to define BackButton's url\n   */\n    currentChannel: Channel;\n\n    /*\n    * String containing the custom branding's text\n    */\n    customDescriptionText: string;\n\n    /*\n   * String containing the custom branding's Site Name\n   */\n    siteName: string;\n\n    /*\n   * Object from react-router\n   */\n    match: {\n        url: string;\n    };\n};\n\ntype State = {\n    team?: Partial<Team>;\n    wizard: string;\n};\n\nexport default class CreateTeam extends React.PureComponent<Props & RouteComponentProps, State> {\n    public constructor(props: Props & RouteComponentProps) {\n        super(props);\n\n        this.state = {\n            team: {},\n            wizard: 'display_name',\n        };\n    }\n\n    public updateParent = (state: State) => {\n        this.setState(state);\n        this.props.history.push('/create_team/' + state.wizard);\n    };\n\n    render() {\n        const {\n            currentChannel,\n            currentTeam,\n            customDescriptionText,\n            match,\n            siteName,\n        } = this.props;\n\n        let url = '/select_team';\n        if (currentTeam) {\n            url = `/${currentTeam.name}`;\n            if (currentChannel) {\n                url += `/channels/${currentChannel.name}`;\n            }\n        }\n\n        return (\n            <div>\n                <AnnouncementBar/>\n                <BackButton url={url}/>\n                <div className='col-sm-12'>\n                    <div className='signup-team__container'>\n                        <SiteNameAndDescription\n                            customDescriptionText={customDescriptionText}\n                            siteName={siteName}\n                        />\n                        <div className='signup__content'>\n                            <Switch>\n                                <Route\n                                    path={`${this.props.match.url}/display_name`}\n                                    render={(props) => (\n                                        <DisplayName\n                                            state={this.state}\n                                            updateParent={this.updateParent}\n                                            {...props}\n                                        />\n                                    )}\n                                />\n                                <Route\n                                    path={`${this.props.match.url}/team_url`}\n                                    render={(props) => (\n                                        <TeamUrl\n                                            state={this.state}\n                                            updateParent={this.updateParent}\n                                            {...props}\n                                        />\n                                    )}\n                                />\n                                <Redirect to={`${match.url}/display_name`}/>\n                            </Switch>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getCurrentChannel} from 'mattermost-redux/selectors/entities/channels';\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\n\nimport CreateTeam from './create_team';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const currentChannel = getCurrentChannel(state);\n    const currentTeam = getCurrentTeam(state);\n\n    const customDescriptionText = config.CustomDescriptionText;\n    const siteName = config.SiteName;\n\n    return {\n        currentChannel,\n        currentTeam,\n        customDescriptionText,\n        siteName,\n    };\n}\n\nexport default connect(mapStateToProps)(CreateTeam);\n","export default __webpack_public_path__ + \"files/ab8aa80cba445eb0fb75e6611c292567.png\";"],"names":["BackButton","url","className","onClick","formatMessage","useIntl","id","classNames","Link","to","title","defaultMessage","defaultProps","SiteNameAndDescription","React","render","customDescriptionText","siteName","this","props","description","TeamSignupDisplayNamePage","constructor","super","e","preventDefault","trackEvent","displayName","state","teamDisplayName","trim","setState","nameError","length","Constants","values","min","max","newState","wizard","team","display_name","name","cleanUpUrlable","updateParent","currentTarget","select","target","value","componentDidMount","nameDivClass","alt","src","logoImage","tagName","type","placeholder","maxLength","autoFocus","onFocus","handleFocus","onChange","handleDisplayNameChange","spellCheck","submitNext","TeamUrl","async","teamURL","cleanedName","URL","actions","checkIfTeamExists","createTeam","test","index","indexOf","isLoading","teamSignup","JSON","parse","stringify","exists","createTeamData","data","error","history","push","message","urlTooltip","finishMessage","delayShow","placement","overlay","handleTeamURLInputChange","Button","bsStyle","disabled","href","submitBack","connect","dispatch","bindActionCreators","CreateTeam","currentChannel","currentTeam","match","path","config","getConfig","getCurrentChannel","getCurrentTeam","CustomDescriptionText","SiteName"],"sourceRoot":""}