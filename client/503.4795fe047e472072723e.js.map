{"version":3,"file":"503.4795fe047e472072723e.js","mappings":"6SAGO,IAAKA,G,SAAAA,GAAAA,EAAAA,UAAAA,YAAAA,EAAAA,UAAAA,YAAAA,EAAAA,WAAAA,aAAAA,EAAAA,WAAAA,aAAAA,EAAAA,UAAAA,YAAAA,EAAAA,SAAAA,W,CAAAA,IAAAA,EAAAA,KCoBZ,MAAMC,EAA6B,IAAiC,IAAhC,cAACC,EAAgB,IAAe,EAE5DC,EAAmB,GACvB,MAAMC,GAA8BC,EAAAA,EAAAA,KAAWC,IAAI,UAC/CF,GAA+BG,EAAAA,GAAyBH,KACxDD,EAAmB,WAAH,OAAcC,IAGlC,MAAM,cAACI,IAAiBC,EAAAA,EAAAA,KAElBC,EAA0D,CAC5D,CAACV,EAASW,WAAY,CAClBC,KAAM,kBACNC,QAASL,EAAc,CACnBM,GAAI,sBACJC,eAAgB,qBAGxB,CAACf,EAASgB,WAAY,CAClBJ,KAAM,kBACNC,QAASL,EAAc,CACnBM,GAAI,sBACJC,eAAgB,oCAGxB,CAACf,EAASiB,YAAa,CACnBL,KAAM,mBACNC,QAASL,EAAc,CACnBM,GAAI,uBACJC,eAAgB,0BAGxB,CAACf,EAASkB,YAAa,CACnBN,KAAM,mBACNC,QAASL,EAAc,CACnBM,GAAI,uBACJC,eAAgB,wCAGxB,CAACf,EAASmB,WAAY,CAClBP,KAAM,kBACNC,QAASL,EAAc,CACnBM,GAAI,sBACJC,eAAgB,qBAGxB,CAACf,EAASoB,UAAW,CACjBR,KAAM,iBACNC,QAASL,EAAc,CACnBM,GAAI,qBACJC,eAAgB,yBAKtBM,EAAgCC,OAAOC,OAAOvB,GAChDwB,QAAQC,IAAoBvB,EAAcwB,SAASD,KAEvD,OACI,gCACI,qBAAGE,UAAU,SACT,gBAAC,IAAD,CACIb,GAAG,iBACHC,eAAe,uBAGvB,0BAEQM,EAAkBO,KAAKC,IACnB,MAAM,KAACjB,EAAD,QAAOC,GAA4BH,EAAkBmB,GAE3D,OACI,sBAAIC,IAAKD,GACL,gBAAC,EAAAE,KAAD,CAAMC,GAAE,UAAKpB,GAAL,OAAYT,IACfU,U,aAlFjCX,cAAAA,IAAAA,OA6FJ,UClGe,SAASS,IACpB,OACI,2BACI,sBAAIgB,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,uBACHC,eAAe,sBAGvB,2BAEA,yBACI,gBAAC,IAAD,CACID,GAAG,uBACHC,eAAe,uNAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,uBACHC,eAAe,wFAGvB,yBACI,uBACIkB,IAAI,qDACJC,IAAI,mBACJP,UAAU,yBAGlB,yBACI,gBAAC,IAAD,CACIb,GAAG,wBACHC,eAAe,2FAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,wBACHC,eAAe,wOAGvB,yBACI,uBACIkB,IAAI,yDACJC,IAAI,gCACJP,UAAU,yBAGlB,yBACI,gBAAC,IAAD,CACIb,GAAG,uBACHC,eAAgB,qPAGxB,yBACI,gBAAC,IAAD,CACID,GAAG,wBACHC,eAAe,qHAGvB,gBAAC,EAAD,CAAWb,cAAe,CAACF,EAASW,cC7DjC,SAASwB,IACpB,OACI,2BACI,sBAAIR,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,uBACHC,eAAe,sBAGvB,2BACA,sBAAIY,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,6BACHC,eAAe,mBAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,mCACHC,eAAe,gEAGvB,sBAAIY,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,6BACHC,eAAe,WAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,mCACHC,eAAe,qKAGvB,sBAAIY,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,+BACHC,eAAe,aAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,sCACHC,eAAe,0GAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,sCACHC,eAAe,yKAGvB,sBAAIY,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,+BACHC,eAAe,oBAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,qCACHC,eAAe,6QAGvB,sBAAIY,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,+BACHC,eAAe,oBAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,qCACHC,eAAgB,wUAGxB,sBAAIY,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,gCACHC,eAAe,sBAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,sCACHC,eAAgB,iNAGxB,sBAAIY,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,+BACHC,eAAe,uBAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,qCACHC,eAAe,oMAGvB,gBAAC,EAAD,CAAWb,cAAe,CAACF,EAASgB,cCpGjC,SAASC,IACpB,OACI,2BACI,sBAAIU,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,wBACHC,eAAe,0BAGvB,2BACA,sBAAIY,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,iCACHC,eAAe,eAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,uCACHC,eAAe,kEAGvB,sBAAIY,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,iCACHC,eAAe,wBAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,wCACHC,eAAe,iHAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,wCACHC,eAAe,wxBAGvB,uBAAKY,UAAU,6BACX,wBAAMA,UAAU,QACZ,gBAAC,IAAD,CACIb,GAAG,kCACHC,eAAe,+DAI3B,0BACA,yBACI,gBAAC,IAAD,CACID,GAAG,+BACHC,eAAe,qTAGvB,sBAAIY,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,gCACHC,eAAe,uBAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,sCACHC,eAAe,2UAGvB,uBAAKY,UAAU,6BACX,wBAAMA,UAAU,QACZ,gBAAC,IAAD,CACIb,GAAG,iCACHC,eAAe,yGAI3B,sBAAIY,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,iCACHC,eAAe,iCAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,uCACHC,eAAe,qeAGvB,sBAAIY,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,+BACHC,eAAe,qBAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,qCACHC,eAAe,uQAGvB,gBAAC,EAAD,CAAWb,cAAe,CAACF,EAASiB,e,8BClGjC,SAASmB,IACpB,MAAMC,EAAoBC,GAElB,uBAAKX,UAAU,6BACX,wBAAMA,UAAU,QAAQW,IAK9BC,EAA8BD,GAE5B,2BACKD,EAAiBC,GAClB,yBACI,gBAAC,IAAD,CACIxB,GAAG,0BACHC,eAAe,iBAGtB,IACD,gBAAC,IAAD,CAAUF,QAASyB,EAAUA,EAAQE,WAAa,MAK9D,OACI,2BACI,sBAAIb,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,wBACHC,eAAe,wCAGvB,2BACA,yBACI,gBAAC,IAAD,CACID,GAAG,wBACHC,eAAe,mKAGvB,sBAAIY,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,8BACHC,eAAe,gBAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,oCACHC,eAAe,iGAGvB,0BACI,0BACI,gBAAC,IAAD,CACID,GAAG,kCACHC,eAAe,sCAGvB,0BACI,gBAAC,IAAD,CACID,GAAG,kCACHC,eAAe,oCAGvB,0BACI,gBAAC,IAAD,CACID,GAAG,kCACHC,eAAe,uDAGvB,0BACI,gBAAC,IAAD,CACID,GAAG,kCACHC,eAAe,uDAI3B,sBAAIY,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,6BACHC,eAAe,gBAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,mCACHC,eAAe,yHAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,0BACHC,eAAe,cAGvB,gBAAC,IAAD,CACID,GAAG,4BACHC,eAAe,eAEbuB,GAAYC,EAA2B,QAAUD,EAAU,WAEjE,sBAAIX,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,+BACHC,eAAe,yBAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,qCACHC,eAAe,uUAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,kCACHC,eAAgB,kmCAGxB,yBACI,gBAAC,IAAD,CACID,GAAG,0BACHC,eAAe,cAGvB,gBAAC,IAAD,CACID,GAAG,2BACHC,eAAgB,yFAChBQ,OAAQ,CAACkB,MAAO,MAEdH,GAAYD,EAAiBC,KAEnC,yBACI,gBAAC,IAAD,CACIxB,GAAG,0BACHC,eAAe,iBAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,8BACHC,eAAe,sBAGvB,yBACI,uBACIkB,IAAI,qEACJC,IAAI,yBACJP,UAAU,yBAGlB,yBACI,gBAAC,IAAD,CACIb,GAAG,qCACHC,eAAe,8BAGvB,yBACI,uBACIkB,IAAI,uEACJC,IAAI,yBACJP,UAAU,yBAGlB,yBACI,gBAAC,IAAD,CACIb,GAAG,sCACHC,eAAe,+BAGvB,yBACI,uBACIkB,IAAI,wEACJC,IAAI,yBACJP,UAAU,yBAGlB,yBACI,gBAAC,IAAD,CACIb,GAAG,+BACHC,eAAe,uBAGvB,yBACI,uBACIkB,IAAI,sEACJC,IAAI,yBACJP,UAAU,yBAGlB,sBAAIA,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,+BACHC,eAAe,kBAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,qCACHC,eAAe,sEAGtBsB,EAAiB,eAClB,yBACI,gBAAC,IAAD,CACIvB,GAAG,0BACHC,eAAe,gBAEb2B,GAAU,gBAAC,IAAD,CAAU7B,QAAS6B,EAAO,oBAG9C,sBAAIf,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,8BACHC,eAAe,WAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,oCACHC,eAAe,qHAGvB,gBAAC,IAAD,CACID,GAAG,yBACHC,eAAgB,qDAEduB,GACE,2BACI,gBAAC,IAAD,CAAUzB,QAAS,IAAMyB,EAAU,MACnC,gBAAC,IAAD,CACIxB,GAAG,0BACHC,eAAe,gBAEb2B,GAAU,gBAAC,IAAD,CAAU7B,QAAS6B,EAAO,IAAMJ,SAK5D,sBAAIX,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,+BACHC,eAAe,oBAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,qCACHC,eAAe,oUAGvB,sBAAIY,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,+BACHC,eAAe,YAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,qCACHC,eAAgB,mTAGvBwB,EAA2B,wBAC5B,sBAAIZ,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,8BACHC,eAAe,WAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,oCACHC,eAAe,oDAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,0BACHC,eAAe,gBAEb2B,GAAS,gBAAC,IAAD,CAAU7B,QAAS,SAAW6B,OAGjD,gBAAC,IAAD,CAAU7B,QAAQ,QAClB,sBAAIc,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,+BACHC,eAAe,kBAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,qCACHC,eAAe,oCAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,gCACHC,eAAe,kCAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,+BACHC,eAAe,oBAGvB,sBAAIY,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,8BACHC,eAAe,WAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,oCACHC,eAAe,8GAGvB,gBAAC,IAAD,CACID,GAAG,8BACHC,eAAgB,+DAEduB,GAAYC,EAA2BD,KAE7C,yBACI,gBAAC,IAAD,CACIxB,GAAG,0BACHC,eAAe,uDAGvB,gBAAC,IAAD,CACID,GAAG,iCACHC,eAAgB,6BAEduB,GAAYC,EAA2BD,KAE7C,yBACI,gBAAC,IAAD,CACIxB,GAAG,4BACHC,eAAe,oDAGvB,gBAAC,IAAD,CACID,GAAG,mCACHC,eAAgB,yDAEduB,GAAYC,EAA2BD,KAE7C,sBAAIX,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,+BACHC,eAAe,YAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,qCACHC,eAAgB,2PAGxB,gBAAC,IAAD,CACID,GAAG,+BACHC,eAAgB,4OAEduB,GAAYC,EAA2BD,KAE7C,sBAAIX,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,iCACHC,eAAe,cAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,uCACHC,eAAgB,mGAGxB,gBAAC,IAAD,CACID,GAAG,kCACHC,eAAgB,qEAEduB,GAAYC,EAA2BD,KAE7C,yBACI,gBAAC,IAAD,CACIxB,GAAG,4BACHC,eAAe,wFAGvB,gBAAC,IAAD,CACID,GAAG,mCACHC,eAAgB,iCAEduB,GAAYC,EAA2BD,KAE7C,gBAAC,EAAD,CAAWpC,cAAe,CAACF,EAASkB,eCjZjC,SAASC,IACpB,OACI,2BACI,sBAAIQ,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,uBACHC,eAAe,qBAGvB,2BACA,sBAAIY,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,+BACHC,eAAe,wBAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,qCACHC,eAAe,+HAGvB,sBAAIY,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,gCACHC,eAAe,yBAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,sCACHC,eAAe,qRAGvB,sBAAIY,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,4BACHC,eAAe,6BAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,kCACHC,eAAe,iSAGvB,sBAAIY,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,+BACHC,eAAe,0BAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,qCACHC,eAAe,+IAIvB,sBAAIY,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,iCACHC,eAAe,oBAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,uCACHC,eAAe,wLAIvB,sBAAIY,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,mCACHC,eAAe,wBAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,yCACHC,eAAe,uTAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,8BACHC,eAAe,kOAGvB,sBAAIY,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,mCACHC,eAAe,oBAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,yCACHC,eAAe,uJAGvB,sBAAIY,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,iCACHC,eAAe,2BAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,uCACHC,eAAe,kRAGvB,0BACI,0BACI,gBAAC,IAAD,CACID,GAAG,oCACHC,eAAe,2CAGvB,0BACI,gBAAC,IAAD,CACID,GAAG,oCACHC,eAAe,gBAGvB,0BACI,gBAAC,IAAD,CACID,GAAG,oCACHC,eAAe,qBAGvB,0BACI,gBAAC,IAAD,CACID,GAAG,oCACHC,eAAe,0BAI3B,yBACI,gBAAC,IAAD,CACID,GAAG,8BACHC,eAAe,iFAIvB,sBAAIY,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,mCACHC,eAAe,2BAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,yCACHC,eAAe,mWAGvB,gBAAC,EAAD,CAAWb,cAAe,CAACF,EAASmB,cC/JjC,SAASwB,IACpB,OACI,2BACI,sBAAIhB,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,sBACHC,eAAe,wBAIvB,2BAEA,yBACI,gBAAC,IAAD,CACID,GAAG,uBACHC,eAAe,2NAIvB,sBAAIY,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,8BACHC,eAAe,uBAIvB,yBACI,gBAAC,IAAD,CACID,GAAG,uBACHC,eAAe,4NAGvB,yBACI,gBAAC,IAAD,CACID,GAAG,yBACHC,eAAe,qOAIvB,yBACI,uBACIkB,IAAI,yDACJC,IAAI,6BACJP,UAAU,yBAIlB,sBAAIA,UAAU,qBACV,gBAAC,IAAD,CACIb,GAAG,6BACHC,eAAe,qBAIvB,yBACI,gBAAC,IAAD,CACID,GAAG,mCACHC,eAAe,maAIvB,yBACI,gBAAC,IAAD,CACID,GAAG,wBACHC,eAAe,uTAIvB,gBAAC,EAAD,CAAWb,cAAe,CAACF,EAASoB,aC1DjC,MAAMwB,UAAuBC,EAAAA,cACjCC,qBAEH,MAAMC,EAAqBC,EAAAA,YAAqBC,MAE5CF,GAAsBA,aAA8BG,gBACpDH,EAAmBI,iBAIpBC,SACH,OACI,uBAAKzB,UAAU,aACX,uBAAKA,UAAU,uCACX,gBAAC,KAAD,KACI,gBAAC,KAAD,CACIf,KAAI,UAAKqC,KAAKI,MAAMC,MAAMC,IAAtB,cACJC,UAAW7C,IAEf,gBAAC,KAAD,CACIC,KAAI,UAAKqC,KAAKI,MAAMC,MAAMC,IAAtB,cACJC,UAAWxC,IAEf,gBAAC,KAAD,CACIJ,KAAI,UAAKqC,KAAKI,MAAMC,MAAMC,IAAtB,eACJC,UAAWvC,IAEf,gBAAC,KAAD,CACIL,KAAI,UAAKqC,KAAKI,MAAMC,MAAMC,IAAtB,eACJC,UAAWtC,IAEf,gBAAC,KAAD,CACIN,KAAI,UAAKqC,KAAKI,MAAMC,MAAMC,IAAtB,cACJC,UAAWrC,IAEf,gBAAC,KAAD,CACIP,KAAI,UAAKqC,KAAKI,MAAMC,MAAMC,IAAtB,aACJC,UAAWpC,Q,EArClBwB,E,EAAAA,Y,EAAAA,CALjBU,MAAO,IAAPA,MAAAA,CACIC,IAAAA,IAAAA,OAAAA,a,6LCXD,SAASlD,IACZ,OAAO,IAAIoD,iBAAgBC,EAAAA,EAAAA,MAAcC","sources":["webpack://@mattermost/webapp/./components/help/types.ts","webpack://@mattermost/webapp/./components/help/components/help_links.tsx","webpack://@mattermost/webapp/./components/help/components/messaging.tsx","webpack://@mattermost/webapp/./components/help/components/composing.tsx","webpack://@mattermost/webapp/./components/help/components/mentioning.tsx","webpack://@mattermost/webapp/./components/help/components/formatting.tsx","webpack://@mattermost/webapp/./components/help/components/attaching.tsx","webpack://@mattermost/webapp/./components/help/components/commands.tsx","webpack://@mattermost/webapp/./components/help/help_controller.tsx","webpack://@mattermost/webapp/./utils/http_utils.ts"],"sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nexport enum HelpLink {\n    Messaging = 'Messaging',\n    Composing = 'Composing',\n    Mentioning = 'Mentioning',\n    Formatting = 'Formatting',\n    Attaching = 'Attaching',\n    Commands = 'Commands',\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {FormattedMessage, useIntl} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport * as I18n from 'i18n/i18n';\n\nimport {useQuery} from 'utils/http_utils';\n\nimport {HelpLink} from 'components/help/types';\n\ntype Props = {\n    excludedLinks?: HelpLink[];\n}\n\ntype HelpLinkContent = {\n    path: string;\n    message: string;\n}\n\nconst HelpLinks: React.FC<Props> = ({excludedLinks = []}: Props) => {\n    // If the current page has locale query param in it, we want to preserve it when navigating to any of the help pages\n    let localeQueryParam = '';\n    const currentLocaleFromQueryParam = useQuery().get('locale');\n    if (currentLocaleFromQueryParam && I18n.isLanguageAvailable(currentLocaleFromQueryParam)) {\n        localeQueryParam = `?locale=${currentLocaleFromQueryParam}`;\n    }\n\n    const {formatMessage} = useIntl();\n\n    const HELP_LINK_CONTENT: {[key in HelpLink]: HelpLinkContent} = {\n        [HelpLink.Messaging]: {\n            path: '/help/messaging',\n            message: formatMessage({\n                id: 'help.link.messaging',\n                defaultMessage: 'Basic Messaging',\n            }),\n        },\n        [HelpLink.Composing]: {\n            path: '/help/composing',\n            message: formatMessage({\n                id: 'help.link.composing',\n                defaultMessage: 'Composing Messages and Replies',\n            }),\n        },\n        [HelpLink.Mentioning]: {\n            path: '/help/mentioning',\n            message: formatMessage({\n                id: 'help.link.mentioning',\n                defaultMessage: 'Mentioning Teammates',\n            }),\n        },\n        [HelpLink.Formatting]: {\n            path: '/help/formatting',\n            message: formatMessage({\n                id: 'help.link.formatting',\n                defaultMessage: 'Formatting Messages Using Markdown',\n            }),\n        },\n        [HelpLink.Attaching]: {\n            path: '/help/attaching',\n            message: formatMessage({\n                id: 'help.link.attaching',\n                defaultMessage: 'Attaching Files',\n            }),\n        },\n        [HelpLink.Commands]: {\n            path: '/help/commands',\n            message: formatMessage({\n                id: 'help.link.commands',\n                defaultMessage: 'Executing Commands',\n            }),\n        },\n    };\n\n    const linksToBeRendered: HelpLink[] = Object.values(HelpLink).\n        filter((link: HelpLink) => !excludedLinks.includes(link));\n\n    return (\n        <>\n            <p className='links'>\n                <FormattedMessage\n                    id='help.learnMore'\n                    defaultMessage='Learn more about:'\n                />\n            </p>\n            <ul>\n                {\n                    linksToBeRendered.map((linkType: HelpLink) => {\n                        const {path, message}: HelpLinkContent = HELP_LINK_CONTENT[linkType];\n\n                        return (\n                            <li key={linkType}>\n                                <Link to={`${path}${localeQueryParam}`}>\n                                    {message}\n                                </Link>\n                            </li>\n                        );\n                    })\n                }\n            </ul>\n        </>\n    );\n};\n\nexport default HelpLinks;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport HelpLinks from 'components/help/components/help_links';\nimport {HelpLink} from 'components/help/types';\n\nexport default function Messaging(): JSX.Element {\n    return (\n        <div>\n            <h1 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.messaging.title'\n                    defaultMessage='Messaging Basics'\n                />\n            </h1>\n            <hr/>\n\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.messaging.write'\n                    defaultMessage='**Write Messages:** Use the text input box at the bottom of the Mattermost interface to write a message. Press **ENTER** to send the message. Use **SHIFT+ENTER** to create a new line without sending a message.'\n                />\n            </p>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.messaging.reply'\n                    defaultMessage='**Reply to Messages:** Select the **Reply Arrow** icon next to the text input box.'\n                />\n            </p>\n            <p>\n                <img\n                    src='https://docs.mattermost.com/_images/reply-icon.png'\n                    alt='Reply Arrow icon'\n                    className='markdown-inline-img'\n                />\n            </p>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.messaging.notify'\n                    defaultMessage='**Notify Teammates:** Type `@username` to get the attention of specific team members.'\n                />\n            </p>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.messaging.format'\n                    defaultMessage='**Format Your Messages:** Use Markdown to include text styling, headings, links, emoticons, code blocks, block quotes, tables, lists, and in-line images in your messages. See the following table for common formatting examples.'\n                />\n            </p>\n            <p>\n                <img\n                    src='https://docs.mattermost.com/_images/messagesTable1.png'\n                    alt='Use Markdown in your messages'\n                    className='markdown-inline-img'\n                />\n            </p>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.messaging.emoji'\n                    defaultMessage={'**Add Emoji:** Type \":\" to open an emoji autocomplete. If the existing emojis don\\'t say what you want to express, you can also create your own [Custom Emoji](!https://docs.mattermost.com/messaging/using-emoji.html#creating-custom-emojis).'}\n                />\n            </p>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.messaging.attach'\n                    defaultMessage='**Attach Files:** Drag and drop files into Mattermost, or select the **Attachment** icon in the text input box.'\n                />\n            </p>\n            <HelpLinks excludedLinks={[HelpLink.Messaging]}/>\n        </div>\n    );\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport HelpLinks from 'components/help/components/help_links';\nimport {HelpLink} from 'components/help/types';\n\nexport default function HelpComposing(): JSX.Element {\n    return (\n        <div>\n            <h1 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.composing.title'\n                    defaultMessage='Sending Messages'\n                />\n            </h1>\n            <hr/>\n            <h2 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.composing.types.title'\n                    defaultMessage='Message Types'\n                />\n            </h2>\n            <p>\n                <FormattedMessage\n                    id='help.composing.types.description'\n                    defaultMessage='Reply to posts to keep conversations organized in threads.'\n                />\n            </p>\n            <h4 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.composing.posts.title'\n                    defaultMessage='Posts'\n                />\n            </h4>\n            <p>\n                <FormattedMessage\n                    id='help.composing.posts.description'\n                    defaultMessage='Posts are considered parent messages when they start a thread of replies. Posts are composed and sent from the text input box at the bottom of the center pane.'\n                />\n            </p>\n            <h4 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.composing.replies.title'\n                    defaultMessage='Replies'\n                />\n            </h4>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.composing.replies.description1'\n                    defaultMessage='Select the **Reply** icon next to any message to open the right-hand sidebar to respond to a thread.'\n                />\n            </p>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.composing.replies.description2'\n                    defaultMessage='When composing a reply, select the **Expand Sidebar/Collapse Sidebar** icon in the top right corner of the right-hand sidebar to make conversations easier to read.'\n                />\n            </p>\n            <h2 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.composing.posting.title'\n                    defaultMessage='Post a Message'\n                />\n            </h2>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.composing.posting.description'\n                    defaultMessage='Write a message by typing into the text input box, then press **ENTER** to send it. Press **SHIFT+ENTER** to create a new line without sending a message. To send messages by pressing **CTRL+ENTER**, go to **Settings > Advanced > Send Messages on CTRL/CMD+ENTER**.'\n                />\n            </p>\n            <h2 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.composing.editing.title'\n                    defaultMessage='Edit a Message'\n                />\n            </h2>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.composing.editing.description'\n                    defaultMessage={'Edit a message by selecting the **More Actions [...]** icon next to any message text that you\\'ve composed, then select **Edit**. After making modifications to the message text, press **ENTER** to save the modifications. Message edits don\\'t trigger new @mention notifications, desktop notifications, or notification sounds.'}\n                />\n            </p>\n            <h2 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.composing.deleting.title'\n                    defaultMessage='Delete a Message'\n                />\n            </h2>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.composing.deleting.description'\n                    defaultMessage={'Delete a message by selecting the **More Actions [...]** icon next to any message text that you\\'ve composed, then select **Delete**. System and Team Admins can delete any message on their system or team.'}\n                />\n            </p>\n            <h2 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.composing.linking.title'\n                    defaultMessage='Link to a Message'\n                />\n            </h2>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.composing.linking.description'\n                    defaultMessage='Get a permanent link to a message by selecting the **More Actions [...]** icon next to any message, then select **Copy Link**. Users must be a member of the channel to view the message link.'\n                />\n            </p>\n            <HelpLinks excludedLinks={[HelpLink.Composing]}/>\n        </div>\n    );\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport HelpLinks from 'components/help/components/help_links';\nimport {HelpLink} from 'components/help/types';\n\nexport default function Mentioning(): JSX.Element {\n    return (\n        <div>\n            <h1 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.mentioning.title'\n                    defaultMessage='Mentioning Teammates'\n                />\n            </h1>\n            <hr/>\n            <h2 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.mentioning.mentions.title'\n                    defaultMessage='@Mentions'\n                />\n            </h2>\n            <p>\n                <FormattedMessage\n                    id='help.mentioning.mentions.description'\n                    defaultMessage='Use @mentions to get the attention of specific team members.'\n                />\n            </p>\n            <h4 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.mentioning.username.title'\n                    defaultMessage='@Username Mentions'\n                />\n            </h4>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.mentioning.username.description1'\n                    defaultMessage='You can mention a teammate by using the `@` symbol plus their username to send them a mention notification.'\n                />\n            </p>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.mentioning.username.description2'\n                    defaultMessage='Type `@` to bring up a list of team members who can be mentioned. To filter the list, type the first few letters of any username, first name, last name, or nickname. Use the **Up** and **Down** keyboard arrow keys to scroll through entries in the list, then press **ENTER** to select the user to mention. Once selected, the username is automatically replaced with the full name or nickname. The following example sends a special mention notification to **alice** that alerts her of the channel and message where she has been mentioned. If **alice** is away from Mattermost and has [email notifications](!https://docs.mattermost.com/messaging/configuring-notifications.html#email-notifications) turned on, then she will receive an email alert for the mention along with the message text.'\n                />\n            </p>\n            <div className='post-code post-code--wrap'>\n                <code className='hljs'>\n                    <FormattedMessage\n                        id='help.mentioning.usernameExample'\n                        defaultMessage='@alice how did your interview go with the new candidate?'\n                    />\n                </code>\n            </div>\n            <p/>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.mentioning.usernameCont'\n                    defaultMessage='If the user you mentioned is not a member of the channel, a System Message is posted to let you know. The System Message is a temporary message only seen by the person who triggered it. To add the mentioned user to the channel, go to the dropdown menu beside the channel name and select **Add Members**.'\n                />\n            </p>\n            <h4 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.mentioning.channel.title'\n                    defaultMessage='@Channel Mentions'\n                />\n            </h4>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.mentioning.channel.description'\n                    defaultMessage='You can mention an entire channel by typing `@channel`. All members of the channel receive a mention notification that behaves the same way as if the members had been mentioned individually. The following example sends a special mention notification to everyone in the current channel to congratulate them on a job well done.'\n                />\n            </p>\n            <div className='post-code post-code--wrap'>\n                <code className='hljs'>\n                    <FormattedMessage\n                        id='help.mentioning.channelExample'\n                        defaultMessage='@channel great work on interviews this week. I think we found some excellent potential candidates!'\n                    />\n                </code>\n            </div>\n            <h2 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.mentioning.triggers.title'\n                    defaultMessage='Words That Trigger Mentions'\n                />\n            </h2>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.mentioning.triggers.description'\n                    defaultMessage='In addition to being notified with @username and @channel mentions, you can configure Mattermost to trigger mention notifications based on specific words by going to **Settings > Notifications > Words That Trigger Mentions**. By default, you receive mention notifications on your first name. Add more words by typing them into the input box separated by commas. This is useful if you want to be notified of all posts on certain topics, for example, \"interviewing\" or \"marketing\".'\n                />\n            </p>\n            <h2 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.mentioning.recent.title'\n                    defaultMessage='Recent Mentions'\n                />\n            </h2>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.mentioning.recent.description'\n                    defaultMessage='Select `@` next to the Search box to query for your most recent @mentions and words that trigger mentions. Select **Jump** next to a search result in the right-hand sidebar to jump the center pane to the channel and location of the message with the mention.'\n                />\n            </p>\n            <HelpLinks excludedLinks={[HelpLink.Mentioning]}/>\n        </div>\n    );\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\nimport Markdown from 'components/markdown';\nimport HelpLinks from 'components/help/components/help_links';\nimport {HelpLink} from 'components/help/types';\n\nexport default function HelpFormatting(): JSX.Element {\n    const renderRawExample = (example: string | React.ReactNode): JSX.Element => {\n        return (\n            <div className='post-code post-code--wrap'>\n                <code className='hljs'>{example}</code>\n            </div>\n        );\n    };\n\n    const renderRawExampleWithResult = (example: string | React.ReactNode): JSX.Element => {\n        return (\n            <div>\n                {renderRawExample(example)}\n                <p>\n                    <FormattedMessage\n                        id='help.formatting.renders'\n                        defaultMessage='Renders as:'\n                    />\n                </p>\n                {' '}\n                <Markdown message={example ? example.toString() : ''}/>\n            </div>\n        );\n    };\n\n    return (\n        <div>\n            <h1 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.formatting.title'\n                    defaultMessage='Formatting Messages Using Markdown'\n                />\n            </h1>\n            <hr/>\n            <p>\n                <FormattedMessage\n                    id='help.formatting.intro'\n                    defaultMessage='Markdown makes it easy to format messages. Type a message as you normally would, then use the following syntax options to format your message a specific way.'\n                />\n            </p>\n            <h2 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.formatting.style.title'\n                    defaultMessage='Text Style'\n                />\n            </h2>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.formatting.style.description'\n                    defaultMessage='You can use either `_` or `*` around a word to make it italic. Use two to make a word bold.'\n                />\n            </p>\n            <ul>\n                <li>\n                    <FormattedMarkdownMessage\n                        id='help.formatting.style.listItem1'\n                        defaultMessage='`_italics_` renders as _italics_'\n                    />\n                </li>\n                <li>\n                    <FormattedMarkdownMessage\n                        id='help.formatting.style.listItem2'\n                        defaultMessage='`**bold**` renders as **bold**'\n                    />\n                </li>\n                <li>\n                    <FormattedMarkdownMessage\n                        id='help.formatting.style.listItem3'\n                        defaultMessage='`**_bold-italic_**` renders as **_bold-italics_**'\n                    />\n                </li>\n                <li>\n                    <FormattedMarkdownMessage\n                        id='help.formatting.style.listItem4'\n                        defaultMessage='`~~strikethrough~~` renders as ~~strikethrough~~'\n                    />\n                </li>\n            </ul>\n            <h2 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.formatting.code.title'\n                    defaultMessage='Code Block'\n                />\n            </h2>\n            <p>\n                <FormattedMessage\n                    id='help.formatting.code.description'\n                    defaultMessage='Create a code block by indenting each line by four spaces, or by placing ``` on the line above and below your code.'\n                />\n            </p>\n            <p>\n                <FormattedMessage\n                    id='help.formatting.example'\n                    defaultMessage='Example:'\n                />\n            </p>\n            <FormattedMessage\n                id='help.formatting.codeBlock'\n                defaultMessage='Code block'\n            >\n                {(example) => renderRawExampleWithResult('```\\n' + example + '\\n```')}\n            </FormattedMessage>\n            <h3 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.formatting.syntax.title'\n                    defaultMessage='Syntax Highlighting'\n                />\n            </h3>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.formatting.syntax.description'\n                    defaultMessage='To add syntax highlighting, type the language to be highlighted after the ``` at the beginning of the code block. Mattermost also offers four different code themes (GitHub, Solarized Dark, Solarized Light, Monokai) that can be changed in **Settings > Display > Theme > Custom Theme > Center Channel Styles > Code Theme**.'\n                />\n            </p>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.formatting.supportedSyntax'\n                    defaultMessage={'Supported languages are: `applescript`, `as`, `atom`, `bas`, `bash`, `boot`, `_coffee`, `c++`, `c`, `cake`, `cc`, `cl2`, `clj`, `cljc`, `cljs`, `cljs.hl`, `cljscm`, `cljx`, `cjsx`, `cson`, `coffee`, `cpp`, `cs`, `csharp`, `css`, `d`, `dart`, `dfm`, `di`, `delphi`, `diff`, `django`, `docker`, `dockerfile`, `dpr`, `erl`, `fortran`, `freepascal`, `fs`, `fsharp`, `gcode`, `gemspec`, `go`, `groovy`, `gyp`, `h++`, `h`, `handlebars`, `hbs`, `hic`, `hpp`, `html`, `html.handlebars`, `html.hbs`, `hs`, `hx`, `iced`, `irb`, `java`, `jinja`, `jl`, `js`, `json`, `jsp`, `jsx`, `kt`, `ktm`, `kts`, `latexcode`, `lazarus`, `less`, `lfm`, `lisp`, `lpr`, `lua`, `m`, `mak`, `matlab`, `md`, `mk`, `mkd`, `mkdown`, `ml`, `mm`, `nc`, `objc`, `obj-c`, `osascript`, `pas`, `pascal`, `perl`, `pgsql`, `php`, `php3`, `php4`, `php5`, `php6`, `pl`, `plist`, `podspec`, `postgres`, `postgresql`, `ps`, `ps1`, `pp`, `py`, `r`, `rb`, `rs`, `rss`, `ruby`, `scala`, `scm`, `scpt`, `scss`, `sh`, `sld`, `st`, `styl`, `sql`, `swift`, `tex`, `texcode`, `thor`, `ts`, `tsx`, `v`, `vb`, `vbnet`, `vbs`, `veo`, `xhtml`, `xml`, `xsl`, `yaml`, `zsh`.'}\n                />\n            </p>\n            <p>\n                <FormattedMessage\n                    id='help.formatting.example'\n                    defaultMessage='Example:'\n                />\n            </p>\n            <FormattedMessage\n                id='help.formatting.syntaxEx'\n                defaultMessage={'```go\\npackage main\\nimport \"fmt\"\\nfunc main() {\\n    fmt.Println(\"Hello, 世界\")\\n}\\n```'}\n                values={{dummy: ''}}\n            >\n                {(example) => renderRawExample(example)}\n            </FormattedMessage>\n            <p>\n                <FormattedMessage\n                    id='help.formatting.renders'\n                    defaultMessage='Renders as:'\n                />\n            </p>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.formatting.githubTheme'\n                    defaultMessage='**GitHub Theme**'\n                />\n            </p>\n            <p>\n                <img\n                    src='https://docs.mattermost.com/_images/syntax-highlighting-github.png'\n                    alt='go syntax-highlighting'\n                    className='markdown-inline-img'\n                />\n            </p>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.formatting.solirizedDarkTheme'\n                    defaultMessage='**Solarized Dark Theme**'\n                />\n            </p>\n            <p>\n                <img\n                    src='https://docs.mattermost.com/_images/syntax-highlighting-sol-dark.png'\n                    alt='go syntax-highlighting'\n                    className='markdown-inline-img'\n                />\n            </p>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.formatting.solirizedLightTheme'\n                    defaultMessage='**Solarized Light Theme**'\n                />\n            </p>\n            <p>\n                <img\n                    src='https://docs.mattermost.com/_images/syntax-highlighting-sol-light.png'\n                    alt='go syntax-highlighting'\n                    className='markdown-inline-img'\n                />\n            </p>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.formatting.monokaiTheme'\n                    defaultMessage='**Monokai Theme**'\n                />\n            </p>\n            <p>\n                <img\n                    src='https://docs.mattermost.com/_images/syntax-highlighting-monokai.png'\n                    alt='go syntax-highlighting'\n                    className='markdown-inline-img'\n                />\n            </p>\n            <h2 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.formatting.inline.title'\n                    defaultMessage='In-line Code'\n                />\n            </h2>\n            <p>\n                <FormattedMessage\n                    id='help.formatting.inline.description'\n                    defaultMessage='Create in-line monospaced font by surrounding it with backticks.'\n                />\n            </p>\n            {renderRawExample('`monospace`')}\n            <p>\n                <FormattedMessage\n                    id='help.formatting.renders'\n                    defaultMessage='Renders as:'\n                >\n                    {(text) => (<Markdown message={text + ' `monospace`'}/>)}\n                </FormattedMessage>\n            </p>\n            <h2 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.formatting.links.title'\n                    defaultMessage='Links'\n                />\n            </h2>\n            <p>\n                <FormattedMessage\n                    id='help.formatting.links.description'\n                    defaultMessage='Create labeled links by putting the desired text in square brackets and the associated link in normal brackets.'\n                />\n            </p>\n            <FormattedMessage\n                id='help.formatting.linkEx'\n                defaultMessage={'[Check out Mattermost!](https://mattermost.com/)'}\n            >\n                {(example) => (\n                    <div>\n                        <Markdown message={'`' + example + '`'}/>\n                        <FormattedMessage\n                            id='help.formatting.renders'\n                            defaultMessage='Renders as:'\n                        >\n                            {(text) => (<Markdown message={text + ' ' + example}/>)}\n                        </FormattedMessage>\n                    </div>\n                )}\n            </FormattedMessage>\n            <h2 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.formatting.images.title'\n                    defaultMessage='In-line Images'\n                />\n            </h2>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.formatting.images.description'\n                    defaultMessage='Create in-line images using an `!` followed by the alt text in square brackets and the link in normal brackets. Add hover text by placing it in quotes after the link. See the [product documentation](!https://docs.mattermost.com/messaging/formatting-text.html#in-line-images) for details on working with in-line images.'\n                />\n            </p>\n            <h2 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.formatting.emojis.title'\n                    defaultMessage='Emojis'\n                />\n            </h2>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.formatting.emojis.description'\n                    defaultMessage={'Open the emoji autocomplete by typing `:`. A full list of emojis can be found [online](!http://www.emoji-cheat-sheet.com/). It is also possible to create your own [Custom Emoji](!https://docs.mattermost.com/messaging/using-emoji.html#creating-custom-emojis) if the emoji you want to use doesn\\'t exist.'}\n                />\n            </p>\n            {renderRawExampleWithResult(':smile: :+1: :sheep:')}\n            <h2 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.formatting.lines.title'\n                    defaultMessage='Lines'\n                />\n            </h2>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.formatting.lines.description'\n                    defaultMessage='Create a line by using three `*`, `_`, or `-`.'\n                />\n            </p>\n            <p>\n                <FormattedMessage\n                    id='help.formatting.renders'\n                    defaultMessage='Renders as:'\n                >\n                    {(text) => <Markdown message={'`***` ' + text}/>}\n                </FormattedMessage>\n            </p>\n            <Markdown message='***'/>\n            <h2 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.formatting.quotes.title'\n                    defaultMessage='Block quotes'\n                />\n            </h2>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.formatting.quotes.description'\n                    defaultMessage='Create block quotes using `>`.'\n                />\n            </p>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.formatting.quotesExample'\n                    defaultMessage='`> block quotes` renders as:'\n                />\n            </p>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.formatting.quotesRender'\n                    defaultMessage='> block quotes'\n                />\n            </p>\n            <h2 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.formatting.lists.title'\n                    defaultMessage='Lists'\n                />\n            </h2>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.formatting.lists.description'\n                    defaultMessage='Create a list by using `*` or `-` as bullets. Indent a bullet point by adding two spaces in front of it.'\n                />\n            </p>\n            <FormattedMessage\n                id='help.formatting.listExample'\n                defaultMessage={'* list item one\\n* list item two\\n    * item two sub-point'}\n            >\n                {(example) => renderRawExampleWithResult(example)}\n            </FormattedMessage>\n            <p>\n                <FormattedMessage\n                    id='help.formatting.ordered'\n                    defaultMessage='Make it an ordered list by using numbers instead:'\n                />\n            </p>\n            <FormattedMessage\n                id='help.formatting.orderedExample'\n                defaultMessage={'1. Item one\\n2. Item two'}\n            >\n                {(example) => renderRawExampleWithResult(example)}\n            </FormattedMessage>\n            <p>\n                <FormattedMessage\n                    id='help.formatting.checklist'\n                    defaultMessage='Make a task list by including square brackets:'\n                />\n            </p>\n            <FormattedMessage\n                id='help.formatting.checklistExample'\n                defaultMessage={'- [ ] Item one\\n- [ ] Item two\\n- [x] Completed item'}\n            >\n                {(example) => renderRawExampleWithResult(example)}\n            </FormattedMessage>\n            <h2 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.formatting.tables.title'\n                    defaultMessage='Tables'\n                />\n            </h2>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.formatting.tables.description'\n                    defaultMessage={'Create a table by placing a dashed line under the header row and separating the columns with a pipe `|`. (The columns don\\'t need to line up exactly for it to work). Choose how to align table columns by including colons `:` within the header row.'}\n                />\n            </p>\n            <FormattedMessage\n                id='help.formatting.tableExample'\n                defaultMessage={'| Left-Aligned  | Center Aligned  | Right Aligned |\\n| :------------ |:---------------:| -----:|\\n| Left column 1 | this text       |  $100 |\\n| Left column 2 | is              |   $10 |\\n| Left column 3 | centered        |    $1 |'}\n            >\n                {(example) => renderRawExampleWithResult(example)}\n            </FormattedMessage>\n            <h2 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.formatting.headings.title'\n                    defaultMessage='Headings'\n                />\n            </h2>\n            <p>\n                <FormattedMessage\n                    id='help.formatting.headings.description'\n                    defaultMessage={'Make a heading by typing # and a space before your title. For smaller headings, use more #\\'s.'}\n                />\n            </p>\n            <FormattedMessage\n                id='help.formatting.headingsExample'\n                defaultMessage={'## Large Heading\\n### Smaller Heading\\n#### Even Smaller Heading'}\n            >\n                {(example) => renderRawExampleWithResult(example)}\n            </FormattedMessage>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.formatting.headings2'\n                    defaultMessage='Alternatively, you can underline the text using `===` or `---` to create headings.'\n                />\n            </p>\n            <FormattedMessage\n                id='help.formatting.headings2Example'\n                defaultMessage={'Large Heading\\n-------------'}\n            >\n                {(example) => renderRawExampleWithResult(example)}\n            </FormattedMessage>\n            <HelpLinks excludedLinks={[HelpLink.Formatting]}/>\n        </div>\n    );\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport HelpLinks from 'components/help/components/help_links';\nimport {HelpLink} from 'components/help/types';\n\nexport default function Attaching(): JSX.Element {\n    return (\n        <div>\n            <h1 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.attaching.title'\n                    defaultMessage='Attaching Files'\n                />\n            </h1>\n            <hr/>\n            <h2 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.attaching.methods.title'\n                    defaultMessage='Attachment Methods'\n                />\n            </h2>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.attaching.methods.description'\n                    defaultMessage='There are three ways to attach a file. You can drag and drop files, use the **Attachment** icon, or copy and paste files.'\n                />\n            </p>\n            <h4 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.attaching.dragdrop.title'\n                    defaultMessage='Drag and Drop Files'\n                />\n            </h4>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.attaching.dragdrop.description'\n                    defaultMessage='Upload a file, or a selection of files, by dragging the files from your computer into the right-hand sidebar or center pane. Dragging and dropping attaches the files to the message input box, then you can optionally type a message and press **ENTER** to post the message.'\n                />\n            </p>\n            <h4 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.attaching.icon.title'\n                    defaultMessage='Use the Attachment Icon'\n                />\n            </h4>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.attaching.icon.description'\n                    defaultMessage='Alternatively, upload files by selecting the **Attachment** icon inside the message input box. In the system file viewer, navigate to the desired files, then select **Open** to upload them to the message input box. Optionally type a message, then press **ENTER** to post the message.'\n                />\n            </p>\n            <h4 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.attaching.pasting.title'\n                    defaultMessage='Copy and Paste Files'\n                />\n            </h4>\n            <p>\n                <FormattedMessage\n                    id='help.attaching.pasting.description'\n                    defaultMessage='On Chrome and Edge browsers, you can upload files by pasting them from the system clipboard. This is not yet supported on other browsers.'\n                />\n            </p>\n\n            <h2 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.attaching.previewer.title'\n                    defaultMessage='View Previewer'\n                />\n            </h2>\n            <p>\n                <FormattedMessage\n                    id='help.attaching.previewer.description'\n                    defaultMessage='Mattermost has a built-in file previewer used to view media, download files, and to share public links. Select the thumbnail of an attached file to open it in the file previewer.'\n                />\n            </p>\n\n            <h4 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.attaching.publicLinks.title'\n                    defaultMessage='Share Public Links'\n                />\n            </h4>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.attaching.publicLinks.description'\n                    defaultMessage='Public links enable you to share file attachments with people outside your Mattermost team. Open the file previewer by selecting the thumbnail of an attachment, then select **Get a public link**. Copy the link provided. When the link is shared and opened by another user, the file automatically downloads.'\n                />\n            </p>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.attaching.publicLinks2'\n                    defaultMessage='If the **Get a public link** option is not visible in the file previewer, and you want this feature enabled, ask your System Admin to enable this feature in the System Console under **Site Configuration > Public Links**.'\n                />\n            </p>\n            <h4 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.attaching.downloading.title'\n                    defaultMessage='Download Files'\n                />\n            </h4>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.attaching.downloading.description'\n                    defaultMessage='Download an attached file by selecting the Download icon next to the file thumbnail, or by opening the file previewer and selecting **Download**.'\n                />\n            </p>\n            <h4 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.attaching.supported.title'\n                    defaultMessage='Supported Media Types'\n                />\n            </h4>\n            <p>\n                <FormattedMessage\n                    id='help.attaching.supported.description'\n                    defaultMessage='If you are trying to preview a media type that is not supported, the file previewer opens a standard media attachment icon. Supported media formats depend heavily on your browser and operating system. The following formats are supported by Mattermost on most browsers:'\n                />\n            </p>\n            <ul>\n                <li>\n                    <FormattedMessage\n                        id='help.attaching.supportedListItem1'\n                        defaultMessage='Images: BMP, GIF, JPG, JPEG, PNG, SVG'\n                    />\n                </li>\n                <li>\n                    <FormattedMessage\n                        id='help.attaching.supportedListItem2'\n                        defaultMessage='Video: MP4'\n                    />\n                </li>\n                <li>\n                    <FormattedMessage\n                        id='help.attaching.supportedListItem3'\n                        defaultMessage='Audio: MP3, M4A'\n                    />\n                </li>\n                <li>\n                    <FormattedMessage\n                        id='help.attaching.supportedListItem4'\n                        defaultMessage='Documents: PDF, TXT'\n                    />\n                </li>\n            </ul>\n            <p>\n                <FormattedMessage\n                    id='help.attaching.notSupported'\n                    defaultMessage='Other document formats (such as Word, Excel, or PPT) are not yet supported.'\n                />\n            </p>\n\n            <h2 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.attaching.limitations.title'\n                    defaultMessage='File Size Limitations'\n                />\n            </h2>\n            <p>\n                <FormattedMessage\n                    id='help.attaching.limitations.description'\n                    defaultMessage='Mattermost supports up to ten files attached per post. The default maximum file size is 100 MB (megabytes), but this can be changed by your System Admin. Image files can be a maximum size of 7680 pixels x 4320 pixels, with a maximum image resolution of 33 MP (mega pixels) or 8K resolution, and a maximum raw image file size of approximately 253 MB.'\n                />\n            </p>\n            <HelpLinks excludedLinks={[HelpLink.Attaching]}/>\n        </div>\n    );\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport HelpLinks from 'components/help/components/help_links';\nimport {HelpLink} from 'components/help/types';\n\nexport default function HelpCommands(): JSX.Element {\n    return (\n        <div>\n            <h1 className='markdown__heading'>\n                <FormattedMessage\n                    id='help.commands.title'\n                    defaultMessage='Executing Commands'\n                />\n            </h1>\n\n            <hr/>\n\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.commands.intro1'\n                    defaultMessage='You can execute commands, called slash commands, by typing into the text input box to perform operations in Mattermost. To run a slash command, type `/` followed by a command and some arguments to perform actions.'\n                />\n            </p>\n\n            <h2 className='markdown__heading'>\n                <FormattedMarkdownMessage\n                    id='help.commands.builtin.title'\n                    defaultMessage='Built-In Commands'\n                />\n            </h2>\n\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.commands.intro2'\n                    defaultMessage='Built-in slash commands come with all Mattermost installations. See the [product documentation](!https://docs.mattermost.com/messaging/executing-slash-commands.html) for a list of available built-in slash commands.'\n                />\n            </p>\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.commands.builtin2'\n                    defaultMessage='Begin by typing `/`. A list of slash command options displays above the text input box. The autocomplete suggestions provide you with a format example in black text and a short description of the slash command in grey text.'\n                />\n            </p>\n\n            <p>\n                <img\n                    src='https://docs.mattermost.com/_images/slash-commands.gif'\n                    alt='Slash command autocomplete'\n                    className='markdown-inline-img'\n                />\n            </p>\n\n            <h2 className='markdown__heading'>\n                <FormattedMarkdownMessage\n                    id='help.commands.custom.title'\n                    defaultMessage='Custom Commands'\n                />\n            </h2>\n\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.commands.custom.description'\n                    defaultMessage='Custom slash commands can integrate with external applications. For example, a team might configure a custom slash command to check internal health records with `/patient joe smith` or check the weekly weather forecast in a city with `/weather toronto week`. Check with your System Admin, or open the autocomplete list by typing `/`, to determine whether custom slash commands are available for your organization.'\n                />\n            </p>\n\n            <p>\n                <FormattedMarkdownMessage\n                    id='help.commands.custom2'\n                    defaultMessage='Custom slash commands are disabled by default and can be enabled by the System Admin in the System Console by going to **Integrations > Integration Management**. Learn about configuring custom slash commands in the [developer   documentation](!https://developers.mattermost.com/integrate/slash-commands/).'\n                />\n            </p>\n\n            <HelpLinks excludedLinks={[HelpLink.Commands]}/>\n        </div>\n    );\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Switch, Route} from 'react-router-dom';\n\nimport Messaging from './components/messaging';\nimport Composing from './components/composing';\nimport Mentioning from './components/mentioning';\nimport Formatting from './components/formatting';\nimport Attaching from './components/attaching';\nimport Commands from './components/commands';\n\ntype Props = {\n    match: {\n        url: string;\n    };\n}\n\nexport default class HelpController extends React.PureComponent<Props> {\n    public componentDidUpdate(): void {\n        // eslint-disable-next-line react/no-find-dom-node\n        const helpControllerNode = ReactDOM.findDOMNode(this);\n\n        if (helpControllerNode && helpControllerNode instanceof HTMLDivElement) {\n            helpControllerNode.scrollIntoView();\n        }\n    }\n\n    public render(): JSX.Element {\n        return (\n            <div className='help-page'>\n                <div className='container col-sm-10 col-sm-offset-1'>\n                    <Switch>\n                        <Route\n                            path={`${this.props.match.url}/messaging`}\n                            component={Messaging}\n                        />\n                        <Route\n                            path={`${this.props.match.url}/composing`}\n                            component={Composing}\n                        />\n                        <Route\n                            path={`${this.props.match.url}/mentioning`}\n                            component={Mentioning}\n                        />\n                        <Route\n                            path={`${this.props.match.url}/formatting`}\n                            component={Formatting}\n                        />\n                        <Route\n                            path={`${this.props.match.url}/attaching`}\n                            component={Attaching}\n                        />\n                        <Route\n                            path={`${this.props.match.url}/commands`}\n                            component={Commands}\n                        />\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {useLocation} from 'react-router-dom';\n\nexport function useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n"],"names":["HelpLink","HelpLinks","excludedLinks","localeQueryParam","currentLocaleFromQueryParam","useQuery","get","I18n","formatMessage","useIntl","HELP_LINK_CONTENT","Messaging","path","message","id","defaultMessage","Composing","Mentioning","Formatting","Attaching","Commands","linksToBeRendered","Object","values","filter","link","includes","className","map","linkType","key","Link","to","src","alt","HelpComposing","HelpFormatting","renderRawExample","example","renderRawExampleWithResult","toString","dummy","text","HelpCommands","HelpController","React","componentDidUpdate","helpControllerNode","ReactDOM","this","HTMLDivElement","scrollIntoView","render","props","match","url","component","URLSearchParams","useLocation","search"],"sourceRoot":""}