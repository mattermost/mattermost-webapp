{"version":3,"file":"821.0d2e3dd080bcb53aed6b.js","mappings":"uUAoBe,MAAMA,UAAwBC,EAAAA,cAA2B,wDAC/C,CAACC,EAAUC,KAAwB,MACpDA,EAAEC,iBACFC,KAAKC,MAAMC,UAAUL,EAAIM,MACzB,UAACL,EAAEM,OAAmBC,QAAQ,0BAA9B,SAAkDC,UAAUC,IAAI,uBAG7DC,oBACwB,MAAvBC,EAAAA,OACA,UAAAC,SAASC,cAAc,+CAAvB,SAAgEL,UAAUC,IAAI,kBAI/EK,SACH,MAAMC,EAAUb,KAAKC,MAAMa,KAAKC,KAAKlB,IACjC,MAAMmB,EAAM,GAAH,OAAMnB,EAAIM,KAAV,OACT,IAAIc,EAAY,GAKhB,OAJIjB,KAAKC,MAAMiB,YAAcrB,EAAIM,OAC7Bc,EAAY,UAIZ,sBACIE,GAAE,UAAKtB,EAAIM,KAAT,MACFa,IAAKA,EACLC,UAAWA,GAEX,0BACIE,GAAE,UAAKtB,EAAIM,KAAT,UACFc,UAAU,8BACVG,QAASpB,KAAKqB,YAAYC,KAAK,KAAMzB,GACrC0B,aAAY1B,EAAI2B,OAAOC,eAEvB,qBACIR,UAAWpB,EAAI6B,KACfC,MAAO9B,EAAI+B,YAEd/B,EAAI2B,YAMrB,OACI,2BACI,sBACIL,GAAG,UACHF,UAAU,6BAETJ,K,EAjDAlB,EAAAA,YAAAA,CALjBuB,UAAAA,IAAAA,OACAJ,KAAM,IAANA,QAAAA,IAAAA,MAAAA,CARAY,KAAAA,IAAAA,OAAAA,WACAE,UAAAA,IAAAA,OAAAA,WACAzB,KAAAA,IAAAA,OAAAA,WACAqB,OAAAA,IAAAA,OAAAA,c,WAMAtB,UAAY,IAAZA,KAAAA","sources":["webpack://@mattermost/webapp/./components/settings_sidebar.tsx"],"sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport * as UserAgent from 'utils/user_agent';\n\nexport type Tab = {\n    icon: string;\n    iconTitle: string;\n    name: string;\n    uiName: string;\n}\n\nexport type Props = {\n    activeTab?: string;\n    tabs: Tab[];\n    updateTab: (name: string) => void;\n}\n\nexport default class SettingsSidebar extends React.PureComponent<Props> {\n    public handleClick = (tab: Tab, e: React.MouseEvent) => {\n        e.preventDefault();\n        this.props.updateTab(tab.name);\n        (e.target as Element).closest('.settings-modal')?.classList.add('display--content');\n    }\n\n    public componentDidMount() {\n        if (UserAgent.isFirefox()) {\n            document.querySelector('.settings-modal .settings-table .nav')?.classList.add('position--top');\n        }\n    }\n\n    public render() {\n        const tabList = this.props.tabs.map((tab) => {\n            const key = `${tab.name}_li`;\n            let className = '';\n            if (this.props.activeTab === tab.name) {\n                className = 'active';\n            }\n\n            return (\n                <li\n                    id={`${tab.name}Li`}\n                    key={key}\n                    className={className}\n                >\n                    <button\n                        id={`${tab.name}Button`}\n                        className='cursor--pointer style--none'\n                        onClick={this.handleClick.bind(null, tab)}\n                        aria-label={tab.uiName.toLowerCase()}\n                    >\n                        <i\n                            className={tab.icon}\n                            title={tab.iconTitle}\n                        />\n                        {tab.uiName}\n                    </button>\n                </li>\n            );\n        });\n\n        return (\n            <div>\n                <ul\n                    id='tabList'\n                    className='nav nav-pills nav-stacked'\n                >\n                    {tabList}\n                </ul>\n            </div>\n        );\n    }\n}\n"],"names":["SettingsSidebar","React","tab","e","preventDefault","this","props","updateTab","name","target","closest","classList","add","componentDidMount","UserAgent","document","querySelector","render","tabList","tabs","map","key","className","activeTab","id","onClick","handleClick","bind","aria-label","uiName","toLowerCase","icon","title","iconTitle"],"sourceRoot":""}