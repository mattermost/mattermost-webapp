#!/usr/bin/env groovy

pipeline {

    options {
        buildDiscarder(logRotator(numToKeepStr: '2'))
        timeout(time: 1, unit: 'HOURS')
    }

    agent {
        docker {
            image 'mattermost/mattermost-build-webapp:oct-2-2018'
        }
    }

    environment {
        GIT_COMMIT = sh(returnStdout: true, script: 'git rev-parse HEAD').trim()
    }

    stages {
        stage('Install') {
            steps {
                ansiColor('xterm') {
                    sh 'make node_modules'
                }
            }
        }

        stage('Check Style') {
            steps {
                ansiColor('xterm') {
                    sh 'make check-style'
                }
            }
        }

        stage('Check i18n') {
            steps {
                ansiColor('xterm') {
                    sh """
                        cp i18n/en.json /tmp/en.json
                        mkdir -p /tmp/fake-mobile-dir/assets/base/i18n/
                        echo '{}' > /tmp/fake-mobile-dir/assets/base/i18n/en.json
                        npm run mmjstool -- i18n extract-webapp --webapp-dir . --mobile-dir /tmp/fake-mobile-dir
                        diff /tmp/en.json i18n/en.json
                    """
                }
            }
        }

        stage('Test') {
            steps {
                ansiColor('xterm') {
                    sh 'make test'
                }
            }
            post {
                always {
                    junit 'build/test-results.xml'
                }
            }
        }

        stage('Build') {
            steps {
                ansiColor('xterm') {
                    sh 'make package'
                }
            }
        }

        stage('Push to S3') {
            steps {
                step([$class: 'S3BucketPublisher', dontWaitForConcurrentBuildCompletion: false, entries: [[
                    bucket: 'releases.mattermost.com/mattermost-webapp/${BRANCH_NAME}',
                    excludedFile: '',
                    flatten: true,
                    gzipFiles: false,
                    keepForever: false,
                    managedArtifacts: false,
                    noUploadOnFailure: true,
                    selectedRegion: 'us-east-1',
                    showDirectlyInBrowser: false,
                    sourceFile: '*.tar.gz',
                    storageClass: 'STANDARD',
                    uploadFromSlave: false,
                    useServerSideEncryption: false,
                    userMetadata: [[key: 'Cache-Control', value: 'no-cache']]
                ], [
                    bucket: "releases.mattermost.com/mattermost-webapp/commit/${GIT_COMMIT}",
                    excludedFile: '',
                    flatten: true,
                    gzipFiles: false,
                    keepForever: false,
                    managedArtifacts: false,
                    noUploadOnFailure: true,
                    selectedRegion: 'us-east-1',
                    showDirectlyInBrowser: false,
                    sourceFile: '*.tar.gz',
                    storageClass: 'STANDARD',
                    uploadFromSlave: false,
                    useServerSideEncryption: false,
                    userMetadata: [[key: 'Cache-Control', value: 'no-cache']]
                ]], profileName: 'Releases', userMetadAta: []])
            }
        }
    }

    post {
        always {
            cleanWs notFailBuild: true
        }
    }
}
